[2012-05-23 16:50:27 -0400] laurent\: btm: i should resolving OHAI-355 later today
[2012-05-23 16:54:08 -0400] laurent\: it definitely needs reviewing and testing, if you don't plan on releasing another rc then it will have to wait for 0.6.16 :)
[2012-05-23 16:55:05 -0400] laurent\: of course that's only if you agree with the changes :)
[2012-05-23 16:55:12 -0400] laurent\: beer time :)
[2012-05-23 16:55:49 -0400] c_t: bear time?
[2012-05-23 16:56:38 -0400] laurent\: hey you know, i'm not in the north of the pacific TZ :)
[2012-05-23 16:57:03 -0400] c_t: beware the wisent, then
[2012-05-23 16:57:07 -0400] laurent\: good morning btw :)
[2012-05-23 16:57:14 -0400] c_t: Guten Morgen
[2012-05-23 19:42:07 -0400] holoway:  /win 6
[2012-05-23 19:42:09 -0400] holoway: ha!
[2012-05-23 19:42:11 -0400] holoway: silly spaces
[2012-05-23 20:02:25 -0400] c_t: holoway is /winning today
[2012-05-23 20:59:10 -0400] holoway: c_t: exactly
[2012-05-23 21:16:51 -0400] hoover_damm: escape 6
[2012-05-23 21:16:54 -0400] hoover_damm: try it with me
[2012-05-23 21:16:56 -0400] hoover_damm: ^[ 6
[2012-05-23 21:17:00 -0400] hoover_damm: :)
[2012-05-23 21:17:32 -0400] hoover_damm: that's why I honestly cannot give up irssi.  Gui IRC Clients look so gosh darn pretty but when I want to just get around
[2012-05-23 21:18:36 -0400] c_t: irssi all the way, yo
[2012-05-23 21:19:06 -0400] c_t: plus the majesty of ssh + screen/tmux + irssi is not to be trifled with
[2012-05-23 21:19:30 -0400] hoover_damm: indeed
[2012-05-23 21:19:38 -0400] c_t: so NO TRIFLING
[2012-05-23 21:26:11 -0400] kisoku: is there any particular reason attributes are loaded after libraries and LWRPs ?
[2012-05-23 21:26:33 -0400] kisoku: why wouldn't they be loaded first in a run_context
[2012-05-23 21:53:07 -0400] github-bawt: [chef] lamont-opscode pushed 2 new commits to whyrun: http://git.io/75qXPg
[2012-05-23 21:53:07 -0400] github-bawt: [chef/whyrun] fail earlier if init script does not exist - Lamont Granquist
[2012-05-23 21:53:07 -0400] github-bawt: [chef/whyrun] improve spec tests for redhat provider - Lamont Granquist
[2012-05-23 22:20:50 -0400] yfeldblum: kisoku, IMO libraries, definitions, resources, and providers should not look at node attributes at all
[2012-05-23 22:32:13 -0400] kisoku: yeah I can see how it would become completely insance
[2012-05-23 22:32:18 -0400] kisoku: insane
[2012-05-23 22:32:25 -0400] kisoku: now that I think about it some more
[2012-05-23 22:33:42 -0400] yfeldblum: kisoku, yep, IMO recipes have one responsibility: read the node attributes & perform fetches & searches, and use that as input and declare a list of resources as output
[2012-05-23 22:34:44 -0400] yfeldblum: kisoku, if data needs to come from node attributes and make its way into a provider, then it had better be the case that a recipe is looking at the node attribute and using that to set the resource attribute, and it's the resource attribute that the provider is permitted to look at
[2012-05-23 22:34:44 -0400] kisoku: on a different note
[2012-05-23 22:35:31 -0400] kisoku: let's say I have a resource created someplace with action :nothing
[2012-05-23 22:35:34 -0400] kisoku: for example
[2012-05-23 22:36:14 -0400] kisoku: t = Chef::Resource::Template.new "foo"
[2012-05-23 22:36:54 -0400] kisoku: how can I send this resource a deferred notify ?
[2012-05-23 22:39:55 -0400] yfeldblum: hmm maybe there's a method directly on the recipe DSL or the run-context, but if not, you can always `ruby_block("blahblahblah") { block { } ; notifies :some_action, t }`
[2012-05-23 22:43:46 -0400] yfeldblum: kisoku, why do you need to set up `t` that way and then do a deferred notify?
[2012-05-23 23:00:33 -0400] kisoku: so I
[2012-05-23 23:00:50 -0400] kisoku: I've been playing with reimplementing some of my definitions as LWRPs
[2012-05-23 23:00:57 -0400] kisoku: but there are gotchas
[2012-05-23 23:01:18 -0400] kisoku: I'll throw a gist up so you can see what I am talking about
[2012-05-23 23:02:46 -0400] yfeldblum: kisoku, i wouldn't recommend blindly doing hat
[2012-05-23 23:03:36 -0400] yfeldblum: kisoku, in particular, definitions are great for housing a related collection of resources; resources/providers are great for sticking raw ruby code rather than housing chef resources
[2012-05-23 23:04:21 -0400] yfeldblum: kisoku, as in, just make sure you fully understand how definitions work and how resources/providers work and are intended to work before
[2012-05-23 23:08:06 -0400] kisoku: well yes, the more I play with this stuff the more the differences are becoming clear
[2012-05-23 23:08:24 -0400] yfeldblum: cool
[2012-05-23 23:08:28 -0400] kisoku: it's unfortunate that the documentation is fairly mute on this type of stuff
[2012-05-23 23:09:21 -0400] kisoku: ie. you have to spend quite a bit of time digging in the guts of chef-client for the subtleties to become apparent
[2012-05-23 23:10:01 -0400] yfeldblum: yep, i've spent quite some time doing that
[2012-05-23 23:11:04 -0400] yfeldblum: but then there's the realization of what exactly resources are in chef: they are sealed abstractions around something on the server, and are responsible for all aspects of fault tolerance, idempotency, learning about the current state of the server, etc
[2012-05-23 23:11:29 -0400] yfeldblum: sorry, providers
[2012-05-23 23:11:45 -0400] yfeldblum: when you look at the code for the providers that ship with chef, that's what they're all doing
[2012-05-23 23:12:07 -0400] yfeldblum: providers are written in ruby by default, not in chef
[2012-05-23 23:12:28 -0400] yfeldblum: took me a while to figure that one out
[2012-05-23 23:14:46 -0400] yfeldblum: however, providers also have `#recipe_eval`, which helps
