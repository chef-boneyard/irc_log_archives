[2012-06-08 15:33:07 -0400] btm: fujin: CHEF-3179. Did you repro this?
[2012-06-08 15:37:59 -0400] github-bawt: [ohai] btm pushed 1 new commit to master: http://git.io/zinYvg
[2012-06-08 15:37:59 -0400] github-bawt: [ohai/master] [OHAI-380] Fix "typo in virtualization.rb prevents storage volumes from being listed" - Philipp Wollermann
[2012-06-08 15:43:35 -0400] github-bawt: [ohai] btm pushed 13 new commits to master: http://git.io/aDd2Eg
[2012-06-08 15:43:35 -0400] github-bawt: [ohai/master] OHAI-355 WIP, new algorithm to set ipaddress (v4 & v6} - Laurent
[2012-06-08 15:43:35 -0400] github-bawt: [ohai/master] some fixes - Laurent
[2012-06-08 15:43:35 -0400] github-bawt: [ohai/master] fixes, better support for ip6address, new tests - Laurent
[2012-06-08 19:01:54 -0400] renchap: http://tickets.opscode.com/browse/CHEF-2694 any plans to fix this ?
[2012-06-08 19:03:46 -0400] hoover_damm: that's a fun one i understand
[2012-06-08 19:03:52 -0400] hoover_damm: watching chef-client gobble up all your ram
[2012-06-08 19:05:20 -0400] renchap: http://www.freebsd.org/cgi/query-pr.cgi?pr=ports/168656
[2012-06-08 19:05:23 -0400] renchap: lot of patches
[2012-06-08 19:05:35 -0400] renchap: but i would prefer them to be upstream...
[2012-06-08 19:06:05 -0400] renchap: (but no patch for this one, which seems critical)
[2012-06-08 19:07:21 -0400] hoover_damm: what do you guys have in your node that causes this?
[2012-06-08 19:07:26 -0400] hoover_damm: i ask as i've yet to have this
[2012-06-08 19:07:31 -0400] hoover_damm: so i want to know so i can avoid it
[2012-06-08 19:08:04 -0400] renchap: i dont have it personally
[2012-06-08 19:10:49 -0400] yfeldblum: renchap, the problem is likely to be the json gem and the usage of it, which looks radically inefficient
[2012-06-08 19:11:01 -0400] renchap: well
[2012-06-08 19:11:06 -0400] renchap: lets remove the json gem ? :)
[2012-06-08 19:11:49 -0400] yfeldblum: renchap, i commented on the ticket; that needs to be done with a streaming json renderer which uses very little memory and writes directly to an IO instance rather than composing a giant string
[2012-06-08 19:12:17 -0400] renchap: ohai now uses yajl
[2012-06-08 19:12:26 -0400] renchap: i heard good things about oj too (https://github.com/ohler55/oj)
[2012-06-08 19:18:53 -0400] hoover_damm: removing the json gem is the goal
[2012-06-08 19:19:08 -0400] hoover_damm: ideally to a pure json implementation
[2012-06-08 19:19:19 -0400] hoover_damm: so we don't have to worry about C Extensions kicking our butt 2 years from now
[2012-06-08 19:19:49 -0400] renchap: multi_json ?
[2012-06-08 19:20:17 -0400] hoover_damm: i was just thinking pure
[2012-06-08 19:21:11 -0400] yfeldblum: hoover_damm, why would you worry about cexts?
[2012-06-08 19:21:25 -0400] yfeldblum: hoover_damm, so long as they use only the c api?
[2012-06-08 19:21:36 -0400] yfeldblum: hoover_damm, cstdlib & the c api that ruby exports & docments?
[2012-06-08 19:22:30 -0400] renchap: pure ruby implem will be very slow and memory intensive imo
[2012-06-08 19:23:04 -0400] yfeldblum: renchap, false
[2012-06-08 19:25:50 -0400] yfeldblum: renchap, the question of "slow & memory intensive" is more a question of how is the construction of the json done
[2012-06-08 19:27:33 -0400] yfeldblum: renchap, rather than a question of C or ruby
[2012-06-08 19:27:57 -0400] yfeldblum: renchap, however, a C implementation does have a little more room to avoid allocations than does a pure ruby implementation
[2012-06-08 19:28:05 -0400] renchap: yup
[2012-06-08 19:28:06 -0400] yfeldblum: renchap, and avoiding the allocations is important here
[2012-06-08 19:28:33 -0400] yfeldblum: renchap, but that's really not a critical issue so much as an optimization, more of a 2x than a 20x
[2012-06-08 19:29:15 -0400] yfeldblum: renchap, can probably still avoid most of the allocations even in ruby, perhaps with a bit of c trickery
[2012-06-08 19:29:27 -0400] yfeldblum: renchap, indeed the json gem itself is a cext
[2012-06-08 19:29:44 -0400] renchap: or use yajl, that is very portable :)
[2012-06-08 19:29:53 -0400] renchap: and already written
[2012-06-08 19:30:00 -0400] hoover_damm: yfeldblum, c extensions are the devils work to some
[2012-06-08 19:30:12 -0400] hoover_damm: yfeldblum, best way to survive on jruby is to disable c extensions
[2012-06-08 19:30:29 -0400] hoover_damm: yfeldblum, part of my brain thinks... is there any reason chef can't run in jruby someday?
[2012-06-08 19:35:23 -0400] hoover_damm: yfeldblum, also part of me wonders if someday someone won't go sadist on C extensions and try and prove their folly and everyone try and leave
[2012-06-08 19:35:31 -0400] hoover_damm: perhaps no one will care that much
[2012-06-08 19:35:33 -0400] hoover_damm: perhaps not
[2012-06-08 19:35:37 -0400] hoover_damm: let's hope for not
[2012-06-08 19:35:41 -0400] hoover_damm: err not care that much I mean
[2012-06-08 19:38:09 -0400] yfeldblum: hoover_damm, that is the promise of rubinius ...
[2012-06-08 19:39:23 -0400] hoover_damm: yfeldblum, how's rbx doing lately?
[2012-06-08 19:39:28 -0400] hoover_damm: they hit 2.0 yet?
[2012-06-08 19:39:37 -0400] yfeldblum: hoover_damm, that's why i said "promise"
[2012-06-08 19:39:44 -0400] hoover_damm: rofl
[2012-06-08 19:39:48 -0400] yfeldblum: hoover_damm, wishing it would transition to "reality"
[2012-06-08 19:40:00 -0400] hoover_damm: the reason I laugh at rubinius is more the reason why people want it
[2012-06-08 19:40:07 -0400] yfeldblum: hoover_damm, and what's that?
[2012-06-08 19:40:26 -0400] hoover_damm: yfeldblum, to support old enterprise ruby apps that run on 1.8.6 and 1.8.7
[2012-06-08 19:40:29 -0400] hoover_damm: that perform badly
[2012-06-08 19:41:14 -0400] yfeldblum: hoover_damm, oh, yeah, that's not why i want it, and also that will never work out well ...
[2012-06-08 19:41:15 -0400] hoover_damm: yfeldblum, last I was rocking the 2.0 stuff that EY was giving me the 1.9 mode of rbx wasn't working completely
[2012-06-08 19:41:32 -0400] hoover_damm: yfeldblum, and they were pitching it to me as like some kind of old ruby silver bullet
[2012-06-08 19:43:09 -0400] yfeldblum: hoover_damm, very odd ...
[2012-06-08 19:43:26 -0400] hoover_damm: yfeldblum, well there's a lot of very old ruby apps
[2012-06-08 19:43:29 -0400] hoover_damm: that are not getting updated
[2012-06-08 19:43:37 -0400] hoover_damm: and a need for them to still work
[2012-06-08 19:43:43 -0400] yfeldblum: hoover_damm, so install an old ruby?
[2012-06-08 19:43:48 -0400] yfeldblum: hoover_damm, or fix them up?
[2012-06-08 19:43:50 -0400] hoover_damm: that has security issues?
[2012-06-08 19:44:09 -0400] hoover_damm: did kirk release another 1.8.6 that fixed the hashdos patch officially?
[2012-06-08 19:44:48 -0400] hoover_damm: <-- this is why I was the Ruby Release Manager
[2012-06-08 19:44:52 -0400] yfeldblum: hoover_damm, how would two fast-moving runtimes solve the problem of apps without maintainers any better than one fast-moving runtime?
[2012-06-08 19:45:01 -0400] hoover_damm: not anymore
[2012-06-08 19:45:06 -0400] hoover_damm: I let the pulse die
[2012-06-08 19:45:07 -0400] yfeldblum: hoover_damm, the problem isn't ruby, it's apps without maintainers
[2012-06-08 19:45:25 -0400] hoover_damm: yfeldblum, the problem is expectation and reality
[2012-06-08 19:45:30 -0400] hoover_damm: they don't meet up and shake hands
[2012-06-08 19:45:45 -0400] hoover_damm: yfeldblum, and when peoples expectations are not met, and they have enough money something different happens
[2012-06-08 19:46:02 -0400] hoover_damm: yfeldblum, instead of spending money to maintain said application.  They would rather spend that money on creating a solution to not having to maintain it.
[2012-06-08 19:46:45 -0400] yfeldblum: hoover_damm, http://weblogs.asp.net/fbouma/archive/2012/06/08/azure-don-t-give-me-multiple-vms-give-me-one-elastic-vm.aspx and http://ayende.com/blog/156513/assuming-that-the-laws-of-physics-no-longer-apply-we-can-build-this
[2012-06-08 19:46:47 -0400] hoover_damm: and as rails moves fast, sometimes there's bad gemspecs... some of this maintenance is just as simple as a gemspec versioning
[2012-06-08 19:47:16 -0400] hoover_damm: people who run rails 2.1 with memcache-client get owned by the hoe gem for example
[2012-06-08 19:47:26 -0400] hoover_damm: it tries to grab the latest hoe which depends on rubygems newere then 1.5
[2012-06-08 19:47:36 -0400] hoover_damm: and suddenly rails 2.1 needs to understand threading that it didn't grok before
[2012-06-08 19:49:54 -0400] hoover_damm: a lot of management at EY felt that customers should be able to update their apps and exist
[2012-06-08 19:50:11 -0400] hoover_damm: but the problem is a lot of people have rails apps now without the experience to maintain it
[2012-06-08 19:50:17 -0400] hoover_damm: and they go to EY or Heroku to try and survive
[2012-06-08 19:50:45 -0400] hoover_damm: and those companies care about giving the customers the best experience
[2012-06-08 19:53:14 -0400] yfeldblum: are they running debian 3 too?
[2012-06-08 19:56:12 -0400] yfeldblum: hoover_damm, there are a number of tools which do just the wrong thing entirely, such as gems that try to download and install their dependencies
[2012-06-08 19:56:42 -0400] yfeldblum: hoover_damm, if that "feature" has an off switch, flick it; else, avoid them like the plague ...
[2012-06-08 19:57:47 -0400] yfeldblum: hoover_damm, anyway, there's no fixing unmaintained apps, money or no money
[2012-06-08 19:58:39 -0400] hoover_damm: yfeldblum, they're trying
[2012-06-08 19:58:52 -0400] hoover_damm: It seems wrong to me to try
[2012-06-08 19:59:16 -0400] hoover_damm: it's like favoring those who are willing to write off having a secure maintained app
[2012-06-08 20:02:40 -0400] yfeldblum: hoover_damm, it's like trying to rewrite the surrounding terrain instead of hiring a contractor to repair your house
[2012-06-08 20:07:12 -0400] hoover_damm: yfeldblum, entirely the case
[2012-06-08 20:07:55 -0400] hoover_damm: yfeldblum, it's like saying my app was made 4 years ago so give me a 4 year old rubygems mirror...
[2012-06-08 20:08:03 -0400] hoover_damm: BUT I WANT SECURITY FIXES
[2012-06-08 20:08:07 -0400] hoover_damm: lulz
[2012-06-08 20:08:40 -0400] yfeldblum: should've written it in perl
[2012-06-08 20:08:59 -0400] yfeldblum: ruby 2.0 is around the corner
[2012-06-08 20:09:02 -0400] yfeldblum: so is perl 6
[2012-06-08 20:09:09 -0400] hoover_damm: perl 6 is OUT
[2012-06-08 20:09:10 -0400] yfeldblum: the difference being perl 6 is going to stay around the corner
[2012-06-08 20:09:24 -0400] yfeldblum: :P
[2012-06-08 20:09:27 -0400] hoover_damm: and ruby 2.0 isn't exactly around the corner... but it's close
[2012-06-08 20:09:56 -0400] hoover_damm: that is basically the problem.  PaaS's are for customers who want to deploy their app and stagnate
[2012-06-08 20:10:48 -0400] hoover_damm: proper agility would mean if your app was growing and you made money that your VC's would give you money to move it to a bigger cloud
[2012-06-08 20:10:56 -0400] hoover_damm: and keep growing it
[2012-06-08 20:11:17 -0400] hoover_damm: and most people outgrow a PaaS pretty fast.  They just don't realize it.
[2012-06-08 20:13:43 -0400] yfeldblum: hoover_damm, not so sure about that
[2012-06-08 20:13:58 -0400] yfeldblum: hoover_damm, people outgrow *this* PaaS maybe
[2012-06-08 20:14:03 -0400] yfeldblum: hoover_damm, then some people build their own
[2012-06-08 20:14:11 -0400] yfeldblum: hoover_damm, and others redefine what they mean by PaaS
[2012-06-08 20:14:48 -0400] hoover_damm: yfeldblum, I think if we go by the market definition of PaaS they outgrow it fast.
[2012-06-08 20:14:59 -0400] yfeldblum: hoover_damm, e.g. EC2, and RS's cloud vNext, are PaaS for running machine images
[2012-06-08 20:15:18 -0400] hoover_damm: EC2, RS is an IaaS
[2012-06-08 20:15:35 -0400] yfeldblum: hoover_damm, the question here is what do you bake? do you bake application slugs? do you bake packages? do you bake AMIs?
[2012-06-08 20:15:42 -0400] hoover_damm: and I don't think you can call yourself a PaaS if your PaaS is only hosted on EC2
[2012-06-08 20:15:45 -0400] hoover_damm: :-P
[2012-06-08 20:15:54 -0400] hoover_damm: but that's me just taking a side stance
[2012-06-08 20:16:25 -0400] hoover_damm: yfeldblum, sadly PaaS's generally bake the packages, the application slugs... and bake the ami's with said material
[2012-06-08 20:16:40 -0400] hoover_damm: for delivery
[2012-06-08 20:18:13 -0400] yfeldblum: hoover_damm, not sure i'm following that ... Heroku and CloudFoundry bake application slugs, which are kinda-like packages; Netflix has their own platform called EC2 and they bake VM images
[2012-06-08 20:18:28 -0400] hoover_damm: yfeldblum, CloudFoundry isn't your typical PAaS
[2012-06-08 20:18:31 -0400] hoover_damm: so remove them from this
[2012-06-08 20:18:44 -0400] hoover_damm: and I don't care about netflix
[2012-06-08 20:18:46 -0400] yfeldblum: hoover_damm, there are a few platforms that don't bake at all, really, and let you run Chef recipes on them
[2012-06-08 20:19:01 -0400] hoover_damm: yeah that's scalarium
[2012-06-08 20:20:45 -0400] yfeldblum: hoover_damm, gigaspaces does something rather similar
[2012-06-08 20:21:17 -0400] yfeldblum: hoover_damm, EY does something similar too
[2012-06-08 20:21:26 -0400] yfeldblum: hoover_damm, not terribly sure about EY
[2012-06-08 20:21:34 -0400] hoover_damm: you can't compare scalarium and EY
[2012-06-08 20:21:37 -0400] hoover_damm: lulz
[2012-06-08 20:21:42 -0400] hoover_damm: this is such a funny conversation now
[2012-06-08 20:22:02 -0400] yfeldblum: i'm not comparing them
[2012-06-08 20:22:11 -0400] hoover_damm: okay
[2012-06-08 20:22:15 -0400] yfeldblum: not in general, at any rate
[2012-06-08 20:22:21 -0400] hoover_damm: well EY is a PaaS I guess... short of their own hardware
[2012-06-08 20:22:25 -0400] hoover_damm: :-P
[2012-06-08 20:22:36 -0400] yfeldblum: just talking about *what* is baked determines what the material platform is
[2012-06-08 20:22:51 -0400] hoover_damm: but generally a platform is about delivering a product
[2012-06-08 20:23:00 -0400] hoover_damm: or a set of products
[2012-06-08 20:23:11 -0400] hoover_damm: EY has patched ruby, nginx, passenger
[2012-06-08 20:23:20 -0400] hoover_damm: Heroku patches their stuff too likely
[2012-06-08 20:23:24 -0400] yfeldblum: and how you don't graduate from platforms as you grow; you change platforms or change the meaning of platform
[2012-06-08 20:24:13 -0400] hoover_damm: so to me the idea of a platform is to have automation to save you time/effort/IT from building a instance with your configuration and deploying your code
[2012-06-08 20:24:27 -0400] hoover_damm: they would make backups of your server and provide security updates periodically
[2012-06-08 20:24:44 -0400] yfeldblum: hoover_damm, that's one type of platform, but i think the term is broader
[2012-06-08 20:25:07 -0400] hoover_damm: yfeldblum, i think that's just you taking it further then it's originally intended :) Which isn't bad
[2012-06-08 20:25:15 -0400] hoover_damm: but I'm not going to debate where it could go
[2012-06-08 20:25:42 -0400] yfeldblum: hoover_damm, i'd say that a platform abstracts from XYZ (not just virtualizes it, but abstracts from it)
[2012-06-08 20:26:09 -0400] yfeldblum: hoover_damm, Heroku abstracts from VMs: it is implemented in terms of VMs, but that is not part of the interface
[2012-06-08 20:26:18 -0400] yfeldblum: hoover_damm, it is abstracted
[2012-06-08 20:26:33 -0400] yfeldblum: hoover_damm, different platforms abstract from different things
[2012-06-08 20:26:40 -0400] hoover_damm: see above... not going to debate where you want to take it
[2012-06-08 20:26:53 -0400] hoover_damm: :)
[2012-06-08 20:27:15 -0400] hoover_damm: yfeldblum, you have a magnificant brain
[2012-06-08 20:28:08 -0400] yfeldblum: lulz
[2012-06-08 20:29:00 -0400] hoover_damm: yfeldblum, your just taking it literly and expanding on it
[2012-06-08 20:29:19 -0400] hoover_damm: which eh :) ain't my bag of tea
[2012-06-08 20:29:35 -0400] yfeldblum: heh
[2012-06-08 20:30:07 -0400] yfeldblum: there are a lot of different approaches to platform for a lot of different types of approaches to infrastructure and applications :P
[2012-06-08 20:30:18 -0400] yfeldblum: and i like to be inclusive
[2012-06-08 20:31:28 -0400] yfeldblum: hoover_damm, what would you want in a platform?
[2012-06-08 20:31:54 -0400] hoover_damm: yfeldblum, no idea
[2012-06-08 20:33:28 -0400] yfeldblum: hoover_damm, kinda thinking chef should have a VM bakery mode
[2012-06-08 20:37:16 -0400] hoover_damm: yfeldblum, nah
[2012-06-08 20:37:39 -0400] hoover_damm: yfeldblum, automating a machine image depending what you run is pretty deep
[2012-06-08 20:38:21 -0400] hoover_damm: i've automated some gentoo baking
[2012-06-08 20:40:00 -0400] yfeldblum: hoover_damm, why is that?
[2012-06-08 20:42:27 -0400] hoover_damm: yfeldblum, I wanted to make a framework and didn't
[2012-06-08 20:45:46 -0400] yfeldblum: hoover_damm, takes a nice bit of work ...
[2012-06-08 20:47:36 -0400] hoover_damm: yfeldblum, well a lot of the abstraction is already done by ubuntu
[2012-06-08 20:47:52 -0400] hoover_damm: yfeldblum, if you review the lxc / python virtinst scripts
[2012-06-08 20:48:09 -0400] hoover_damm: they handle the bootstrap portion fairly well.  Catalyst is what Gentoo uses, which automates a pretty good portion of it.
[2012-06-08 20:48:34 -0400] hoover_damm: often wondered why people don't just suggest cloudinit + omnibus
[2012-06-08 20:48:51 -0400] hoover_damm: if you run ubuntu, using cloudinit seems like a no brainer... at least to setup chef
[2012-06-08 20:54:18 -0400] yfeldblum: hoover_damm, because you'd rather make a new VM image in a controlled laboratory-like setting rather than alter live VMs out there in production?
[2012-06-08 21:03:29 -0400] hoover_damm: yfeldblum, but altering live vm's and doing live upgrades is fun
[2012-06-08 22:01:19 -0400] github-bawt: [chef] lamont-opscode pushed 1 new commit to whyrun: http://git.io/fEaybg
[2012-06-08 22:01:19 -0400] github-bawt: [chef/whyrun] Client#build_node no longer calls Node#find_or_create in whyrun branch - Lamont Granquist
