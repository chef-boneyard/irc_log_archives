[2012-04-17 07:19:12 -0400] msf: anyone around ?
[2012-04-17 07:20:24 -0400] coderanger: Usually yes
[2012-04-17 07:20:47 -0400] msf: wow you're up late :-)
[2012-04-17 07:21:18 -0400] msf: is node data just not accessible at all from attribute files ?
[2012-04-17 07:21:33 -0400] msf: or can I use node[:whatevs]
[2012-04-17 07:22:07 -0400] coderanger: It is there
[2012-04-17 07:22:23 -0400] coderanger: Just make sure you use include_attributes if there is another cookbook's attrs that should run first
[2012-04-17 07:22:51 -0400] msf: nah, I just want some automatic attributes
[2012-04-17 07:24:09 -0400] msf: thanks
[2012-04-17 07:24:10 -0400] coderanger: Also in general you can ask stuff like that in #chef :P
[2012-04-17 07:35:45 -0400] msf: yeah sorry
[2012-04-17 07:36:46 -0400] msf: I'm lazy :-P
[2012-04-17 11:40:09 -0400] laurent\: btm: http://tickets.opscode.com/browse/CHEF-3033 i won't mind if you change the tickets resolution to "TOO_INSANE_WONT_FIX" :)
[2012-04-17 11:42:28 -0400] laurent\: in the end i learned something new with rspec, just for that I'm happy :)
[2012-04-17 14:32:30 -0400] btm_: laurent\: haha.
[2012-04-17 16:04:25 -0400] hoover_damn: woot
[2012-04-17 16:04:33 -0400] hoover_damn: I get to teach people knobs in #postgresql
[2012-04-17 16:09:57 -0400] hoover_damn: ohmygod --pwfile?
[2012-04-17 16:10:19 -0400] hoover_damn: do you know what evil I did to create the postgres password previously?
[2012-04-17 16:10:24 -0400] hoover_damn: oh my god becky
[2012-04-17 16:11:25 -0400] Mithrandir: or just ~/.pgpass?
[2012-04-17 16:12:16 -0400] hoover_damn: Mithrandir, you don't get it
[2012-04-17 16:12:22 -0400] hoover_damn: Mithrandir, initdb --pwfile=/tmp/bob
[2012-04-17 16:12:29 -0400] hoover_damn: Mithrandir, echo "password" > /tmp/bob
[2012-04-17 16:12:36 -0400] hoover_damn: Mithrandir, vs
[2012-04-17 16:13:19 -0400] hoover_damn:  execute "alter-db-user-postgres" do
[2012-04-17 16:13:19 -0400] hoover_damn:     command %{psql -Upostgres postgres -c \"ALTER USER postgres with ENCRYPTED PASSWORD '#{password}'\"}
[2012-04-17 16:13:22 -0400] hoover_damn:     not_if %{psql -c "select pg_last_xlog_receive_location()" | grep "/"}
[2012-04-17 16:13:24 -0400] hoover_damn:   end
[2012-04-17 16:13:33 -0400] hoover_damn: old example
[2012-04-17 16:13:59 -0400] hoover_damn: drop a resource by adding the password on the initdb commandline
[2012-04-17 16:14:03 -0400] hoover_damn: everyonewins
[2012-04-17 18:43:35 -0400] hoover_damn: wouldn't it be nice if you could knife ec2 server create and specify the node to run chef-client in debug mode?
[2012-04-17 18:43:43 -0400] hoover_damn: without having to modify bootstrap_context.rb
[2012-04-17 18:47:04 -0400] hoover_damn: well son of a ..
[2012-04-17 18:47:11 -0400] hoover_damn: at least now I understand why it's not starting postgresql
[2012-04-17 18:47:53 -0400] hoover_damn: the not_if in my recipe matched my bootstrap process
[2012-04-17 18:48:11 -0400] hoover_damn: when grep [p]ostgres
[2012-04-17 18:48:13 -0400] hoover_damn: is not enough
[2012-04-17 18:48:59 -0400] jtimberman: hoover_damn: you don't have to rewrite bootstrap_context, you can just use a custom bootstrap template with the chef-client -l debug command.
[2012-04-17 18:50:24 -0400] btm: hoover_damn: that would be this open ticket: http://tickets.opscode.com/browse/CHEF-1843
[2012-04-17 18:51:07 -0400] jtimberman: plus that :)
[2012-04-17 18:51:24 -0400] hoover_damn: jtimberman, I actually don't want to litter my bootstrap with client.rb hackage
[2012-04-17 18:51:29 -0400] hoover_damn: makes me want to hurl
[2012-04-17 18:51:34 -0400] jtimberman: ok
[2012-04-17 18:51:44 -0400] jtimberman: timtowtdi
[2012-04-17 18:51:44 -0400] hoover_damn: jtimberman, as i've had to fix several custom bootstraps in the past
[2012-04-17 18:52:02 -0400] hoover_damn: totally
[2012-04-17 18:52:16 -0400] btm: jtimberman: one bug to fix them all.
[2012-04-17 18:52:29 -0400] hoover_damn: my issue is my not_if is matching the original bootstrap command
[2012-04-17 18:52:32 -0400] hoover_damn: for starting a service
[2012-04-17 18:52:40 -0400] hoover_damn: and I couldn't see this issue without kicking up debug
[2012-04-17 18:52:57 -0400] hoover_damn: I never really imagined a not_if matching the bootstrap... so I had a good chuckle
[2012-04-17 18:56:57 -0400] hoover_damn: ec2-23-22-29-26.compute-1.amazonaws.com [Tue, 17 Apr 2012 18:56:29 +0000] DEBUG: sh(ps aux | grep -v bash | grep [p]ostgres)
[2012-04-17 18:56:59 -0400] hoover_damn: ec2-23-22-29-26.compute-1.amazonaws.com [Tue, 17 Apr 2012 18:56:29 +0000] INFO: execute[start postgresql] sh(/bin/bash --login -c 'LC_ALL= /etc/init.d/postgresql start')
[2012-04-17 18:57:02 -0400] hoover_damn: ec2-23-22-29-26.compute-1.amazonaws.com  * Starting PostgreSQL 9.1 database server
[2012-04-17 18:57:05 -0400] hoover_damn: ec2-23-22-29-26.compute-1.amazonaws.com    ...done.
[2012-04-17 18:57:08 -0400] hoover_damn: YAAAAAY
[2012-04-17 18:57:24 -0400] jtimberman: btm: i gave that script a workaround. scripts love workarounds.
[2012-04-17 21:25:42 -0400] github-bawt: [chef] marcparadise created whyrun (+17 new commits): http://git.io/s14brg
[2012-04-17 21:25:42 -0400] github-bawt: [chef/whyrun] hack out enough code to discuss/criticize - Daniel DeLeo
[2012-04-17 21:25:42 -0400] github-bawt: [chef/whyrun] ScanAccessControl examines state of existing files - Daniel DeLeo
[2012-04-17 21:25:42 -0400] github-bawt: [chef/whyrun] file access control uses a resource object for the current state - Dan+MP
[2012-04-17 21:27:31 -0400] holoway: ^^ whyrun!!
[2012-04-17 21:28:15 -0400] github-bawt: [chef] marcparadise pushed 18 new commits to whyrun: http://git.io/Fb7GKg
[2012-04-17 21:28:15 -0400] github-bawt: [chef/whyrun] hack out enough code to discuss/criticize - Daniel DeLeo
[2012-04-17 21:28:15 -0400] github-bawt: [chef/whyrun] ScanAccessControl examines state of existing files - Daniel DeLeo
[2012-04-17 21:28:15 -0400] github-bawt: [chef/whyrun] file access control uses a resource object for the current state - Dan+MP
[2012-04-17 21:38:44 -0400] jtimberman: :)
[2012-04-17 21:43:05 -0400] ashb: that branch for repoting on what chef would do?
[2012-04-17 21:43:46 -0400] jtimberman: ashb: "why run" or "why would chef make changes, based on the current state vs desired state of the resources in recipes."
[2012-04-17 21:43:57 -0400] jtimberman: aka, dry run.
[2012-04-17 21:44:00 -0400] jtimberman: :)
[2012-04-17 21:44:32 -0400] ashb: cool
[2012-04-17 21:47:20 -0400] atomic-penguin: why run is a cooler name than dry run
[2012-04-17 21:48:12 -0400] msf: win 3
[2012-04-17 22:03:01 -0400] github-bawt: [chef] danielsdeleo pushed 1 new commit to whyrun: http://git.io/GYF4HQ
[2012-04-17 22:03:02 -0400] github-bawt: [chef/whyrun] remove unneeded conditional branches from service base - Daniel DeLeo
[2012-04-17 22:53:44 -0400] holoway: atomic-penguin: it's also why the feature is going to be awesome - it might lie to you, but at least you'll know why
[2012-04-17 22:53:47 -0400] holoway: :)
[2012-04-17 22:56:07 -0400] btm: holoway: ^5 for the why-lie.
[2012-04-17 23:04:47 -0400] atomic-penguin: chef-client --whyrun --no-lying
[2012-04-17 23:05:10 -0400] holoway: atomic-penguin: chef-client --why
[2012-04-17 23:05:15 -0400] holoway: it just rings right
[2012-04-17 23:05:17 -0400] holoway: :)
