[2012-04-27 00:43:13 -0400] c_t: sweet
[2012-04-27 00:43:22 -0400] c_t: encrypted cookbook tests now breakign the way I want them too
[2012-04-27 00:44:05 -0400] c_t: s/cookbook/cookbook files/
[2012-04-27 14:51:08 -0400] laurent\: do i still have an old w2k running ? ;-) (OHAI-322)
[2012-04-27 14:56:22 -0400] jtimberman: roidrage: welcome to the runit bandwagon :)
[2012-04-27 14:57:03 -0400] roidrage: it was just really the right tool for that particular job. the job was to run a couple of shell commands for stupid rvm ;)
[2012-04-27 14:57:25 -0400] roidrage: and it's a lot more reliable than my own stuff, i added pid change alerts using monits, and boom
[2012-04-27 14:57:35 -0400] roidrage: the runit cookbook made it too easy as well :)
[2012-04-27 15:00:48 -0400] jtimberman: :D
[2012-04-27 15:01:05 -0400] jtimberman: yeah. the existence of that cookbook is probably 80% of the reason why I default to runit.
[2012-04-27 15:01:09 -0400] jtimberman: it makes it dead simple
[2012-04-27 15:02:25 -0400] roidrage: for sure
[2012-04-27 15:06:26 -0400] yfeldblum: jtimberman, (a) cookbooks need lib directories and classes; (b) have you checked out ActiveSupport's dependency-unloading-&-reloading mechanism? (c) cookbooks probably need to declare dependencies on packages and gems (if the cookbook uses the package or gem directly, not if the cookbook configures the system by installing the package or gem or something else that uses the package or gem)
[2012-04-27 15:19:41 -0400] yfeldblum: classes means class reloading & dependency tracking a la ActiveSupport; cookbooks declaring dependencies on packages and gems should not affect the chef-server's cookbooks dependency resolution, but would be purely for the client or the solo
[2012-04-27 15:37:33 -0400] hoover_damn: jtimberman, almost too easy
[2012-04-27 16:14:34 -0400] c_t: Greetings.
[2012-04-27 16:29:02 -0400] fnichol: yfeldblum: agreed, a flat libraries/ directory kills me sometimes and a more explicit gem dependency mechanism would help with gem_package/Gem.clear_path trickery
[2012-04-27 16:31:23 -0400] spox: fnichol: see chef_gem for that last part at least
[2012-04-27 16:32:53 -0400] yfeldblum: fnichol, i've seen a number of people asking how they can write a library file which, from the library file's top-level, requires a gem or references a constant in some gem ... this should be supported, but that means the gem has to be installed and available before  even the library files are loaded
[2012-04-27 17:01:16 -0400] fnichol: spox: right, I forgot about that
[2012-04-27 17:01:42 -0400] jtimberman: yfeldblum: i think there's a ticket for making nested dirs in libraries/
[2012-04-27 17:01:58 -0400] jtimberman: but i believe the suggestion is, "create a gem and install it with chef"
[2012-04-27 17:02:07 -0400] jtimberman: (which will be nice when 0.10.10 ships with chef_gem
[2012-04-27 17:02:34 -0400] fnichol: jtimberman: I'd be willing to help with that ticket; testing or coding
[2012-04-27 17:02:40 -0400] yfeldblum: jtimberman, how would that work, given libraries are (rightfully) loaded before recipes?
[2012-04-27 17:02:45 -0400] spox: jtimberman: i have a lib that does that for adding ordering to mash instances, but it ends up requiring the the recipe to be loaded first
[2012-04-27 17:02:54 -0400] spox: yeah, what he said :)
[2012-04-27 17:03:39 -0400] jtimberman: yfeldblum: the magic of the chef compile vs execute phases in convergence
[2012-04-27 17:04:37 -0400] fnichol: right, that's about the only way to get a gem shoved in before convergence run. the odd part is calling Gem.clear_paths to make sure your require will work afterwards
[2012-04-27 17:04:56 -0400] jtimberman: fnichol: yeah.
[2012-04-27 17:05:00 -0400] jtimberman: fnichol: so, chef_gem does that
[2012-04-27 17:05:17 -0400] jtimberman: its rather quite nice.
[2012-04-27 17:05:40 -0400] yfeldblum: jtimberman, still, `chef_gem "asdf"` in a recipe gets loaded after `require "asdf"` in a library bombs the run
[2012-04-27 17:05:54 -0400] fnichol: woah, I clearly have to read that code. i believe someone has a cookbook with a chef_gem shim for earlier chef versions, right?
[2012-04-27 17:06:04 -0400] spox: fnichol: yep
[2012-04-27 17:09:09 -0400] jtimberman: yfeldblum: yeah generally we do a begin/rescue
[2012-04-27 17:12:54 -0400] fnichol: jtimberman: Think this is the libraries/ load ticket? http://tickets.opscode.com/browse/CHEF-672
[2012-04-27 17:13:39 -0400] jtimberman: fnichol: looks like it
[2012-04-27 18:41:48 -0400] laurent\: chef installed with the big msi doesn't work on w2k :-(
[2012-04-27 18:54:09 -0400] yfeldblum: w2k is more than a full decade old
[2012-04-27 18:56:23 -0400] laurent\: yep, i'm giving up
[2012-04-27 18:56:29 -0400] laurent\: worthless
[2012-04-27 18:57:04 -0400] c_t: Success!
[2012-04-27 18:57:11 -0400] c_t: encrypted_cookbook_files work
[2012-04-27 19:06:49 -0400] laurent\: btm: i've resolved OHAI-322, I wasn't happy with hippiehacker's pull requests: he managed to obfuscate my name 2 times in his commit messages !!! ;-) (kidding)
[2012-04-27 19:22:39 -0400] yfeldblum: c_t, they seem to be in their own module already: http://www.ruby-doc.org/stdlib-1.9.3/libdoc/openssl/rdoc/index.html
[2012-04-27 19:26:04 -0400] c_t: yfeldblum: I meant the various methods defined in chef
[2012-04-27 19:26:50 -0400] c_t: encrypted data bags encryption stuff and these encrypted cookbook files use the same basic encryption methods
[2012-04-27 19:40:00 -0400] jtimberman: laurent\: i would not expect it to work :)
[2012-04-27 19:43:55 -0400] c_t: NT4 gets its drivers license this year
[2012-04-27 19:44:13 -0400] c_t: a few years ago it discovered Metallica and started growing a bad teenaged moustache
[2012-04-27 19:44:28 -0400] c_t: now it's hard to get it to do any work, because it hides in its room all the time
[2012-04-27 19:45:54 -0400] laurent\: jtimberman: what ?
[2012-04-27 19:45:54 -0400] bawt: jtimberman: what is the recommended version
[2012-04-27 19:49:49 -0400] jtimberman: bawt: forget jtimberman: what
[2012-04-27 19:49:49 -0400] bawt: okies!
[2012-04-27 19:50:00 -0400] jtimberman: laurent\: Chef full MSI on W2K
[2012-04-27 19:50:00 -0400] laurent\: oops :)
[2012-04-27 19:50:19 -0400] laurent\: ok :)
[2012-04-27 19:50:24 -0400] jtimberman: c_t: lol
[2012-04-27 21:26:06 -0400] hoover_damn: btm, can we get a ohai pre cut?
[2012-04-27 21:30:51 -0400] hoover_damn: hrm I think i'm totally confused on the fix in OHAI-267
[2012-04-27 21:31:03 -0400] hoover_damn: I have the silly json file touched, but it truly seems like I need content in it?
[2012-04-27 21:53:55 -0400] btm: hoover_damn: like an ohai beta?
[2012-04-27 21:54:41 -0400] hoover_damn: yer
[2012-04-27 22:08:41 -0400] hoover_damn: btm, also now the 'cloud' token is populated however the data is garbage
[2012-04-27 22:08:46 -0400] hoover_damn: btm, is that expected?
[2012-04-27 22:47:42 -0400] btm: hoover_damn: not sure, but garbage is bad, right?
[2012-04-27 22:48:20 -0400] hoover_damn: btm, null on everything
[2012-04-27 22:48:30 -0400] hoover_damn: btm, provider = rackspace... but local_ipv4 = null
[2012-04-27 23:14:24 -0400] hoover_damn: guess i can dig into it and figure out what's up and file a bug/pull
[2012-04-27 23:20:08 -0400] hoover_damn: as the invoice has all the notes required for the commit
[2012-04-27 23:20:09 -0400] hoover_damn: :o
[2012-04-27 23:20:10 -0400] hoover_damn: beauty!
[2012-04-27 23:35:14 -0400] c_t: convenient
[2012-04-27 23:36:11 -0400] laurent\: init ? :)
[2012-04-27 23:44:23 -0400] hoover_damn: very
