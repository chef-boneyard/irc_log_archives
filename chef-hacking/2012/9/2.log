[2012-09-02 01:00:46 -0400] hoover_damm: pardon me if this seems oddball, but with Intel's AESNI Microcode lately has Opscode pondered supporting AES Keys?
[2012-09-02 01:01:50 -0400] hoover_damm: we benchmarked our metal before we enabled aesni and after and for AES based stuff it was really 8x faster
[2012-09-02 01:02:02 -0400] hoover_damm: perhaps it's too micro optimization
[2012-09-02 01:02:21 -0400] hoover_damm: I don't know if said extension benefits RSA or not... have not debugged that
[2012-09-02 15:41:47 -0400] z: hoover_damm: its more a question of what Ruby supports, and its *not* a simple question due to openssl
[2012-09-02 15:42:19 -0400] z: hoover_damm: rhel/centos doesnt have aesni in 5.x but does in 6.x; ubuntu has it in 10.04 but doesn't in 12.04 (last I checked anyway)
[2012-09-02 15:43:25 -0400] z: hoover_damm: ah no, 12.04 uses a new enough OpenSSL that the aesni stuff is now done by the EVP layer
[2012-09-02 15:45:34 -0400] z: hoover_damm: then beyond software considerations (which are already a pain) there's the fact it was only introduced with Xeon 5600-series and is also supported by the new E5 stuff
[2012-09-02 15:46:40 -0400] z: meaning a substantial number of users will simply not benefit due to either hardware or software :(  it *is* 8-10x faster when you have the right HW/SW combo though, which is *really* handy for a number of scenarios
[2012-09-02 17:32:20 -0400] z: any opinions on making Apt and Yum cookbooks behave in a similar manner, a la, the yum cookbook has yum_key and yum_repository as separate operations whereas Apt has apt_repository which includes a 'key' attribute?
[2012-09-02 17:33:11 -0400] z: IMO the Yum approach is superior as it opens you up to an action :remove, whereas AFAICS, once a key is added by apt_repository it can't be removed within the confines of the current cookbook
[2012-09-02 17:34:15 -0400] z: also IMO: consistency between these cookbooks would be an end-user win as its more intuitive
[2012-09-02 19:52:30 -0400] hoover_damm: z, a substanial amount of 'cloud' users likely would not benefit
[2012-09-02 19:52:46 -0400] hoover_damm: z, but basically it's just a openssl combination if you lack it... you just run at regular speed
[2012-09-02 19:53:00 -0400] hoover_damm: if you have it win
[2012-09-02 19:53:20 -0400] hoover_damm: ideally it's a microcode change most cloud providers would want to implement or replace their hardware with 5600 series and pass it through
[2012-09-02 19:53:43 -0400] hoover_damm: the reasons not to support rsa/aesni are far and few
[2012-09-02 19:54:05 -0400] hoover_damm: s/rsa/aes
[2012-09-02 19:54:26 -0400] hoover_damm: supposidly it does benefit RSA handshakes
[2012-09-02 19:54:32 -0400] hoover_damm: so I maybe overthinking it
[2012-09-02 20:00:26 -0400] hoover_damm: z, btw it's 12.04.01 that has it
[2012-09-02 20:00:27 -0400] hoover_damm: not 12.04
[2012-09-02 20:00:47 -0400] hoover_damm: the initial release of 12.04 lacked it as I still have 12.04 servers that lack it, (lxc hosts) then boot up a fresh lxc guest and benchmark
[2012-09-02 20:01:30 -0400] hoover_damm: made someone boggle their head a little as I showed them benchmarks from the host with 1 result, then built a guest and showed them the results of the same server
[2012-09-02 20:01:35 -0400] hoover_damm: and they just about fell out of their chair
[2012-09-02 20:01:50 -0400] hoover_damm: so much over such a small libssl bump
[2012-09-02 22:03:23 -0400] yfeldblum_: hoover_damm, unlikely that CPUs would provide primitives for RSA; some provide primitives for some of the internal operations within AES (but not the full AES), since they are so common, so simple, and operate only on small blocks; rsa is not a normal block cipher and is hopefully on the way out in favor of elliptic-curve so i can't see too much advantage to hw support for it in exchange for the cost of it
[2012-09-02 23:24:16 -0400] hoover_damm: yfeldblum_, just because you can't see it doesn't mean it exists.
[2012-09-02 23:24:50 -0400] hoover_damm: step out of the cloud sometime and take a look at what Intel is shipping
[2012-09-02 23:25:18 -0400] hoover_damm: every now and then Intel does this, so don't be shocked... soon you'll find XML Microcode extensions in the CPU
[2012-09-02 23:25:28 -0400] hoover_damm: or JSON
[2012-09-02 23:35:21 -0400] z: yfeldblum++
[2012-09-02 23:46:55 -0400] yfeldblum_: hoover_damm, the "xml instructions" (http://software.intel.com/en-us/articles/xml-parsing-accelerator-with-intel-streaming-simd-extensions-4-intel-sse4/) seem like a set of extremely rudimentary (and rigid) string-testing or string-comparison instructions which an xml processor may elect to take advantage of to combat their observation that "we found that character checking loop occupies more than 60% CPU cycles of the whole par
[2012-09-02 23:46:56 -0400] yfeldblum_: sing process, depending on the property of benchmark"
[2012-09-02 23:51:32 -0400] hoover_damm: basically I know you don't like it, but get over it.
[2012-09-02 23:59:18 -0400] yfeldblum_: hoover_damm, huh?
