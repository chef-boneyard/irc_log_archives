[2014-07-17 00:31:42 -0400] github-bawt: [chef-rfc] danielsdeleo pushed 1 new commit to arbitrary-cookbook-identifiers: http://git.io/UarkrA
[2014-07-17 00:31:42 -0400] github-bawt: chef-rfc/arbitrary-cookbook-identifiers 5d37616 danielsdeleo: Clarify design constraints for arbitrary ID feature.
[2014-07-17 00:43:42 -0400] github-bawt: [chef-rfc] danielsdeleo opened pull request #20: Arbitrary cookbook identifiers (master...arbitrary-cookbook-identifiers) http://git.io/w-OmTw
[2014-07-17 01:52:44 -0400] github-bawt: [chef-zero] jkeiser pushed 3 new commits to acls: http://git.io/3Iy9zw
[2014-07-17 01:52:44 -0400] github-bawt: chef-zero/acls 59cb106 John Keiser: Add /users/NAME/association_requests/...
[2014-07-17 01:52:45 -0400] github-bawt: chef-zero/acls 809fe6b John Keiser: Implement /organizations/ORG/users/... endpoints
[2014-07-17 01:52:45 -0400] github-bawt: chef-zero/acls 8f392fc John Keiser: Add /users/NAME/organizations endpoint
[2014-07-17 03:01:12 -0400] github-bawt: [chef-zero] jkeiser pushed 1 new commit to acls: http://git.io/9BD_Pw
[2014-07-17 03:01:12 -0400] github-bawt: chef-zero/acls 11388d1 John Keiser: Add authenticatation endpoints
[2014-07-17 03:18:46 -0400] github-bawt: [chef-zero] jkeiser pushed 1 new commit to acls: http://git.io/kjnBqw
[2014-07-17 03:18:46 -0400] github-bawt: chef-zero/acls d4f536c John Keiser: Introduce osc_compat so multi org can still use osc_compat
[2014-07-17 03:19:21 -0400] github-bawt: [chef-zero] jkeiser opened pull request #78: Acls, Groups, Containers, Org Membership and full Enterprise/Hosted emulation (master...acls) http://git.io/1J3gZA
[2014-07-17 05:05:57 -0400] github-bawt: [chef-rfc] juliandunn opened pull request #21: Added initial draft of platform support policy (master...platform-support-policy) http://git.io/PNJgvA
[2014-07-17 05:29:06 -0400] travis-ci: [travis-ci] juliandunn/chef#27 (master - 83b159e : Serdar Sutay): The build has errored.
[2014-07-17 05:29:06 -0400] travis-ci: [travis-ci] Change view : https://github.com/juliandunn/chef/compare/88d671309b60...83b159e0dc46
[2014-07-17 05:29:07 -0400] travis-ci: [travis-ci] Build details : http://travis-ci.org/juliandunn/chef/builds/30139280
[2014-07-17 05:42:09 -0400] travis-ci: [travis-ci] juliandunn/chef#28 (11-stable - 8816b91 : jmink): The build has errored.
[2014-07-17 05:42:09 -0400] travis-ci: [travis-ci] Change view : https://github.com/juliandunn/chef/compare/ca77ec847156...8816b91c096f
[2014-07-17 05:42:10 -0400] travis-ci: [travis-ci] Build details : http://travis-ci.org/juliandunn/chef/builds/30139314
[2014-07-17 05:44:13 -0400] github-bawt: [chef-zero] jkeiser created persist (+1 new commit): http://git.io/1_fFHg
[2014-07-17 05:44:13 -0400] github-bawt: chef-zero/persist 42f9aa4 John Keiser: Add file store
[2014-07-17 05:45:01 -0400] github-bawt: [chef-zero] jkeiser opened pull request #79: Add disk persistence layer to chef-zero (master...persist) http://git.io/HTfLbw
[2014-07-17 15:39:43 -0400] github-bawt: [ohai] sersut tagged 6.24.0.rc.0 at 4cd1618: http://git.io/8onwpA
[2014-07-17 16:25:54 -0400] github-bawt: [chef-rfc] sersut created chef-12 (+1 new commit): http://git.io/O_4WAQ
[2014-07-17 16:25:54 -0400] github-bawt: chef-rfc/chef-12 5193e16 sersut: Add an RFC that talks about an idea of scoping Chef 12 and codifies the "support" statement for Chef excluding the OS supported versions.
[2014-07-17 16:27:29 -0400] github-bawt: [chef-rfc] sersut opened pull request #22: Chef 12 scoping and Supported Versions of Chef (master...chef-12) http://git.io/7xcN2Q
[2014-07-17 16:53:56 -0400] c_t: kallistec: I had requests for caching, and then found a pretty reasonable way to update the universe cache and avoid thundering herds, so I went for it
[2014-07-17 17:03:26 -0400] kallistec: c_t: yeah, no problem, just don't want to specify too much implementation detail up front. Also, maybe look at using the `Cache-Control` header?
[2014-07-17 17:04:13 -0400] c_t: ooh, probably worthwhile
[2014-07-17 17:04:34 -0400] miketheman: Last-Modified/If-Modified-Since may be helpful as well.
[2014-07-17 17:04:34 -0400] kallistec: e.g, `Cache-Control: no-cache` seems to do the thing you want. Spec also implies that any cache should be updated
[2014-07-17 17:04:49 -0400] c_t: speedwise it's hard to tell; any slowness is probably from knife raw
[2014-07-17 17:04:55 -0400] miketheman: and Etags
[2014-07-17 17:05:24 -0400] miketheman: I did some digging on using Chef with Etags and Github, wrote it up here: https://coderwall.com/p/xpz5ow might have some useful ideas
[2014-07-17 17:05:25 -0400] kallistec: I'm reading http://www.w3.org/Protocols/rfc2616/rfc2616-sec13.html but 2616 got replaced with a bunch of new RFCs that are supposed to be more clear
[2014-07-17 17:05:39 -0400] kallistec: however, I can't find the cache-control spec in the new ones quickly
[2014-07-17 17:05:54 -0400] c_t: er
[2014-07-17 17:06:13 -0400] miketheman: kallistec: http://www.rfc-editor.org/rfc/rfc5861.txt ?
[2014-07-17 17:06:34 -0400] kallistec: miketheman: looks like the one, thanks
[2014-07-17 17:06:35 -0400] c_t: I had originally rolled it out without caching as a preview, but then fujin and spheromak asked if there would be caching, and then for a way to bust it
[2014-07-17 17:06:40 -0400] c_t: so I obliged
[2014-07-17 17:08:19 -0400] jalberts: can anyone tell me how I can have mixlib-cli display all options (help output) if the user didn't supply any options?
[2014-07-17 17:08:24 -0400] miketheman: kallistec: also http://www.rfc-editor.org/rfc/rfc7234.txt
[2014-07-17 17:10:19 -0400] kallistec: miketheman: is that the one about etags and such? That'd be good too, if the API client wants to cache the entire response. I'd have to think for a bit on how you'd use it in the context of the server doing internal caching
[2014-07-17 17:11:24 -0400] miketheman: kallistec: yes, that has some on etags - under section 4
[2014-07-17 17:11:54 -0400] miketheman: allowing the client to hold on to the entire response data, and get a 304 Not Modified if the server-side has nothing new to offer.
[2014-07-17 17:12:25 -0400] miketheman: does chef-server/bookshelf use them for cookbooks in response to chef-client?
[2014-07-17 17:12:51 -0400] kallistec: I don't know off-hand
[2014-07-17 17:57:24 -0400] github-bawt: [ohai] btm created btm/eucalyptus_404 (+2 new commits): http://git.io/nMxwoQ
[2014-07-17 17:57:24 -0400] github-bawt: ohai/btm/eucalyptus_404 3c56065 Ben Carpenter: handle case where Eucalyptus metadata API returns 404...
[2014-07-17 17:57:25 -0400] github-bawt: ohai/btm/eucalyptus_404 0b9a530 Bryan McLellan: Don't hardcode XML return from API server on 404, just look for a 404
[2014-07-17 18:34:54 -0400] travis-ci: [travis-ci] opscode/chef#2895 (master - 0cfa150 : lamont-granquist): The build has errored.
[2014-07-17 18:34:55 -0400] travis-ci: [travis-ci] Change view : https://github.com/opscode/chef/compare/83b159e0dc46...0cfa15073ae6
[2014-07-17 18:34:55 -0400] travis-ci: [travis-ci] Build details : http://travis-ci.org/opscode/chef/builds/30195214
[2014-07-17 20:11:11 -0400] travis-ci: [travis-ci] opscode/chef#2897 (master - af7cd4f : John Keiser): The build has errored.
[2014-07-17 20:11:12 -0400] travis-ci: [travis-ci] Change view : https://github.com/opscode/chef/compare/f4825c8aba6d...af7cd4f5bbc3
[2014-07-17 20:11:12 -0400] travis-ci: [travis-ci] Build details : http://travis-ci.org/opscode/chef/builds/30202599
[2014-07-17 21:09:41 -0400] github-bawt: [chef-rfc] scotthain created shain/client_logger (+1 new commit): http://git.io/jdFaUA
[2014-07-17 21:09:41 -0400] github-bawt: chef-rfc/shain/client_logger 3c1ca6f Scott Hain: First Draft of logger rfc
[2014-07-17 21:39:54 -0400] github-bawt: [chef-rfc] danielsdeleo pushed 2 new commits to arbitrary-cookbook-identifiers: http://git.io/2i59zg
[2014-07-17 21:39:55 -0400] github-bawt: chef-rfc/arbitrary-cookbook-identifiers fd3643e danielsdeleo: Give an example of extended cookbook data in "list" API
[2014-07-17 21:39:55 -0400] github-bawt: chef-rfc/arbitrary-cookbook-identifiers 17bbe5b danielsdeleo: Add bulk artifact API
[2014-07-17 21:42:15 -0400] kallistec: New RFC if anyone wants to take a look: https://github.com/opscode/chef-rfc/pull/20 it's related to the policyfile stuff which I have discussed some but not made a canonical public description of the design (but happy to answer questions here that pop up)
[2014-07-17 22:01:49 -0400] c_t: wow
[2014-07-17 22:02:34 -0400] c_t: so, uh, I did a comparison of /universe with and without caching with 119 cookbooks
[2014-07-17 22:03:07 -0400] c_t: 2 microseconds with caching, 359 milliseconds without
[2014-07-17 22:16:49 -0400] github-bawt: [chef-rfc] scotthain pushed 1 new commit to shain/client_logger: http://git.io/GKqfLg
[2014-07-17 22:16:49 -0400] github-bawt: chef-rfc/shain/client_logger 77968be Scott Hain: Updated with some feedback
[2014-07-17 22:17:35 -0400] kallistec: c_t: what's your backend storage?
[2014-07-17 22:18:03 -0400] c_t: testing with postgres at the moment
[2014-07-17 22:18:39 -0400] c_t: the cached universe is just stored as a struct hanging out inside the process
[2014-07-17 22:19:08 -0400] kallistec: with a little bit of optimization, supermarket is generating the universe for several thousand cookbooks on-demand in 300-400ms
[2014-07-17 22:19:31 -0400] kallistec: anything less than a second is fine IMO
[2014-07-17 22:20:19 -0400] c_t: there's a distinct possibility that a chunck of that 350ish millisecond is coming from merely connecting to the db
[2014-07-17 22:20:47 -0400] c_t: (I just happend to have a bunch of old cookbooks handy is all)
[2014-07-17 22:20:56 -0400] kallistec: yeah, if you don't have a connection pool, that'll be slow
[2014-07-17 22:21:28 -0400] c_t: should have a connection pool
[2014-07-17 22:21:35 -0400] c_t: I'll have to poke at it a little
[2014-07-17 22:22:36 -0400] c_t: the queries could be done differently too, but whether it's worth it in this case is debateable
[2014-07-17 22:22:59 -0400] c_t: next thing to try would be uploading several thousand cookbooks and see how it does
[2014-07-17 23:02:21 -0400] fujin: lulz
[2014-07-17 23:09:35 -0400] fujin: yo kallistec you there?
[2014-07-17 23:09:40 -0400] fujin: i msg'd but think I got into a vpn
[2014-07-17 23:09:54 -0400] kallistec: fujin: 'sup?
[2014-07-17 23:10:00 -0400] fujin: yo dude
[2014-07-17 23:10:14 -0400] fujin: kallistec: just wondering how many cookbooks supermarket has for that test
[2014-07-17 23:10:28 -0400] kallistec: 5400 or something?
[2014-07-17 23:10:29 -0400] fujin: kallistec: is it using all of the community cookbooks (when you said 'a few thousand')
[2014-07-17 23:10:43 -0400] fujin: excellent
[2014-07-17 23:12:09 -0400] kallistec: fujin: this pull request comment thread: https://github.com/opscode/supermarket/pull/431
[2014-07-17 23:13:49 -0400] fujin: ta
[2014-07-17 23:14:17 -0400] kallistec: https://github.com/opscode/supermarket/pull/431#issuecomment-46337821
[2014-07-17 23:14:32 -0400] fujin: word
[2014-07-17 23:14:49 -0400] kallistec: fujin: ^^ this comment in particular, 1300 cookbook names, 5400 cookbook version objects
[2014-07-17 23:14:52 -0400] fujin: heh, generating the universe offline was what I suggested to c_t yesterday
[2014-07-17 23:15:08 -0400] fujin: kallistec: yup, cheers, I'll pass it along
[2014-07-17 23:15:24 -0400] fujin: I want to see goiardi handling th same amount
[2014-07-17 23:16:41 -0400] travis-ci: [travis-ci] opscode/chef#2901 (11-stable - 4a73265 : Lamont Granquist): The build has errored.
[2014-07-17 23:16:41 -0400] travis-ci: [travis-ci] Change view : https://github.com/opscode/chef/compare/914ebcee85ca...4a73265ba154
[2014-07-17 23:16:41 -0400] travis-ci: [travis-ci] Build details : http://travis-ci.org/opscode/chef/builds/30216475
[2014-07-17 23:39:16 -0400] travis-ci: [travis-ci] opscode/chef#2902 (master - 743be21 : lamont-granquist): The build passed.
[2014-07-17 23:39:16 -0400] travis-ci: [travis-ci] Change view : https://github.com/opscode/chef/compare/af7cd4f5bbc3...743be2103ab9
[2014-07-17 23:39:17 -0400] travis-ci: [travis-ci] Build details : http://travis-ci.org/opscode/chef/builds/30217206
