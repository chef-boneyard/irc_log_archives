[2014-07-28 16:36:00 -0400] andydba: i am running a bash resource
[2014-07-28 16:36:14 -0400] andydba: as per my understanding
[2014-07-28 16:36:27 -0400] andydba: if command given to bash resource is executed successfully it returns 0
[2014-07-28 16:36:33 -0400] andydba: if not it returns false
[2014-07-28 16:37:01 -0400] andydba: i want to return true or false from a bash resource based one execution of a command
[2014-07-28 16:37:16 -0400] andydba: how to do that?
[2014-07-28 16:42:14 -0400] andydba: can I return true or false based on output of a bash command?
[2014-07-28 16:42:58 -0400] andydba: i have a ruby method that runs a bash resource that lists for files and greps a particular file
[2014-07-28 16:43:09 -0400] andydba: i want to return true if file is there and false if file is not there
[2014-07-28 16:50:15 -0400] cheeseplus: andydba: you could use a guard to do something similar
[2014-07-28 16:50:25 -0400] zts: andydba: that's more of a question for #chef, this channel is about development of Chef itself - but to answer your question, it's the same as for any other bash script.  Use exit code 0 for success, or anything else to failure
[2014-07-28 18:32:04 -0400] fujin: ohayoo
[2014-07-28 19:03:07 -0400] renchap: is the 11.14.0 release date planned yet ?
[2014-07-28 19:46:46 -0400] mattray: renchap: I think a regression was found in the RC
[2014-07-28 19:47:05 -0400] mattray: so not today
[2014-07-28 19:48:21 -0400] renchap: ok
[2014-07-28 19:48:30 -0400] renchap: but we can expect it soon
[2014-07-28 19:52:28 -0400] mattray: yes
[2014-07-28 20:00:28 -0400] renchap: nice
[2014-07-28 20:12:18 -0400] github-bawt: [chef-rfc] adamedx pushed 2 new commits to adamed/dsc: https://github.com/opscode/chef-rfc/compare/55daf2835046...2e2e7f3715d7
[2014-07-28 20:12:19 -0400] github-bawt: chef-rfc/adamed/dsc c643207 adamedx: Usability and provider details
[2014-07-28 20:12:19 -0400] github-bawt: chef-rfc/adamed/dsc 2e2e7f3 adamedx: Details on implementation and dsc_script / dsc_mof resources
[2014-07-28 20:19:07 -0400] github-bawt: [chef-rfc] adamedx pushed 1 new commit to adamed/dsc: http://git.io/AZgRYg
[2014-07-28 20:19:08 -0400] github-bawt: chef-rfc/adamed/dsc a38f5aa adamedx: Fix some spelling mistakes
[2014-07-28 20:32:30 -0400] github-bawt: [chef-rfc] adamedx pushed 1 new commit to adamed/dsc: http://git.io/Ak0SFQ
[2014-07-28 20:32:30 -0400] github-bawt: chef-rfc/adamed/dsc 73454ef adamedx: Broken table formatting, attribute / property terminology mixup, formatting
[2014-07-28 20:36:14 -0400] fujin: holoway: the proposal looks really good
[2014-07-28 20:36:32 -0400] fujin: holoway: Sorry for not sending you a list, and thank you for remembering the stuff I brought up
[2014-07-28 20:36:36 -0400] fujin: <3
[2014-07-28 20:36:49 -0400] holoway: fujin: thanks for commenting :)
[2014-07-28 20:37:00 -0400] holoway: I sent a PR for the repo generator this afternoon
[2014-07-28 20:37:13 -0400] holoway: pretty sure just getting everyone using the same commands regardless of workflow will be a big step forward
[2014-07-28 20:41:14 -0400] jtimberman: it absolutely will.
[2014-07-28 20:41:40 -0400] jtimberman: as someone who has used "knife cookbook create" "chef generate cookbook" and cloned a "skeleton" repository all in a single day, I can attest to that :)
[2014-07-28 21:11:49 -0400] fujin: I would really really really like to alpha-test new workflow stuff @ Pantheon
[2014-07-28 21:12:01 -0400] fujin: we were just discussing berks/librarian this morning, and I brought up Omnifetch of course
[2014-07-28 21:12:04 -0400] fujin: holoway: ^^
[2014-07-28 21:12:13 -0400] fujin: holoway: if you get anything I can clone/break
[2014-07-28 21:12:22 -0400] fujin: new skel generator would be dope to mess with
[2014-07-28 21:12:59 -0400] holoway: fujin: check out https://github.com/opscode/chef-dk/pull/117
[2014-07-28 21:13:11 -0400] holoway: kallistec is the man to bother about the Policyfile stuff
[2014-07-28 21:13:46 -0400] holoway: but once the universe endpoint is in the server, I would say something like a chef generate repo foo --policy-only
[2014-07-28 21:13:57 -0400] holoway: along with cookbook generators that support the policy-only style
[2014-07-28 21:14:05 -0400] fujin: I can use goiardi to serve up /universe already
[2014-07-28 21:14:08 -0400] holoway: would kick out an on-disk layout that looks like a chef repo
[2014-07-28 21:14:09 -0400] fujin: Shit is shipped as fuck
[2014-07-28 21:14:16 -0400] holoway: sure
[2014-07-28 21:14:24 -0400] holoway: have, as the cool kids say, a party
[2014-07-28 21:14:41 -0400] fujin: I came to party, but I don't party
[2014-07-28 21:15:04 -0400] holoway: Biotech is Godzilla, fujin
[2014-07-28 21:15:04 -0400] fujin: chef generate repo foo --policy-only sounds pretty metal as well
[2014-07-28 21:15:21 -0400] holoway: it's just a chef-repo with teh cookbooks directory added to .gitignore
[2014-07-28 21:15:27 -0400] holoway: with a different readme
[2014-07-28 21:15:34 -0400] fujin: oh. word.
[2014-07-28 21:15:36 -0400] fujin: #derp
[2014-07-28 21:15:48 -0400] holoway: then we can go back to the generators for all the other stuff
[2014-07-28 21:15:52 -0400] holoway: and detect which workflow you are rocking
[2014-07-28 21:16:11 -0400] fujin: first question I asked this morning regarding adoption of indepdent software development workflow: what is the cost to host all of these private cookbooks in individual repositories, for a quantifiable gain?
[2014-07-28 21:16:17 -0400] fujin: i think the cost is overlooked by a lot of people recommending it
[2014-07-28 21:16:20 -0400] fujin: w/o hosting your own
[2014-07-28 21:16:27 -0400] fujin: Git(hub|lab|Ent)
[2014-07-28 21:16:30 -0400] holoway: honestly? I don't even notice
[2014-07-28 21:16:32 -0400] fujin: gogs/cgit/..
[2014-07-28 21:16:36 -0400] holoway: but that's the point
[2014-07-28 21:16:39 -0400] holoway: we shouldn't have to fight aobut it
[2014-07-28 21:16:57 -0400] fujin: yeh word
[2014-07-28 21:17:00 -0400] fujin: I got you
[2014-07-28 21:17:01 -0400] holoway: the quantifiable gain, fwiw
[2014-07-28 21:17:17 -0400] holoway: is that if you want to work on a piece of the infrastructure, you don't have to worry about the rest at all
[2014-07-28 21:17:22 -0400] kallistec: IMO, do what you want for private cookbooks, public cookbooks I think are easier as individual repos, and that's free on github anyway
[2014-07-28 21:17:26 -0400] holoway: you just check out the bit you want, and go for it
[2014-07-28 21:17:33 -0400] fujin: we have like 105~ in a megarepo.
[2014-07-28 21:17:38 -0400] fujin: half o fthose are going to be internal/private
[2014-07-28 21:17:48 -0400] holoway: the other advantage is when you start moving to a CD workflow
[2014-07-28 21:17:53 -0400] holoway: where no human ever touches anything
[2014-07-28 21:18:01 -0400] holoway: if its a megarepo
[2014-07-28 21:18:08 -0400] fujin: kallistec: so that is kind of the model I had previously @mopub/twitter.
[2014-07-28 21:18:10 -0400] holoway: the only safe thing to do is assume every change re-pins HEAD
[2014-07-28 21:18:17 -0400] fujin: internal private wrapper/environment cookbokos in a 'site-cookbooks' folder
[2014-07-28 21:18:25 -0400] fujin: + berksfile to pull in deep-deps from u/s
[2014-07-28 21:18:27 -0400] holoway: ie: all 105 cookbooks always move together
[2014-07-28 21:19:00 -0400] holoway: in the cookbook-as-software version, it becomes much more straightforward to pin individual versions and have them come together as artifcats
[2014-07-28 21:19:09 -0400] holoway: totally possible to do CD eitherw ay
[2014-07-28 21:19:16 -0400] holoway: just different
[2014-07-28 21:19:28 -0400] fujin: sure
[2014-07-28 21:19:32 -0400] holoway: the monolith pushes dependency resolution into the source tree
[2014-07-28 21:19:47 -0400] holoway: the cookbook-as-software version pushes it into artifacts
[2014-07-28 21:19:55 -0400] fujin: hmm
[2014-07-28 21:20:14 -0400] holoway: for example
[2014-07-28 21:20:15 -0400] fujin: holoway: lost me
[2014-07-28 21:20:16 -0400] jtimberman: depending on the number of repositories, on github you're looking at probably ~$100-200/mo plans (gold/plat for orgs)
[2014-07-28 21:20:28 -0400] holoway: fujin: lemme build a gist
[2014-07-28 21:20:33 -0400] jtimberman: but some of your cookbooks may be okay to be public.
[2014-07-28 21:20:45 -0400] jtimberman: so quantifying the repo cost is tough :)
[2014-07-28 21:20:51 -0400] fujin: jtimberman: kind of means a completely separate organization from the rest of the stuff, most likely
[2014-07-28 21:20:58 -0400] fujin: (Github-terminology)
[2014-07-28 21:20:59 -0400] jtimberman: maybe?
[2014-07-28 21:21:00 -0400] bawt: maybe not found
[2014-07-28 21:21:03 -0400] fujin: lol bawt.
[2014-07-28 21:21:07 -0400] kallistec: fujin: in megarepo land, you're responsible for making sure that all the cookbooks in the megarepo should be compatible
[2014-07-28 21:21:10 -0400] jtimberman: bawt: i missed you buddy
[2014-07-28 21:21:23 -0400] fujin: I woudl end up with like pantheon-cookbooks
[2014-07-28 21:21:36 -0400] kallistec: fujin: for every commit, or at least every commit you consider "shippable"
[2014-07-28 21:21:57 -0400] jtimberman: fujin: anyway, it might. like, you could have a convention for your internal cookbooks that the repositories are all orgname/thing-cookbook, and then just point at that in a {Policy,Berks}file.
[2014-07-28 21:22:32 -0400] kallistec: fujin: whereas, with single-cookbook per repo, you can say that different versions should be in play simultaneously, and you use a tool to build a collection of things that work together
[2014-07-28 21:23:02 -0400] fujin: kind of in a unique oppportunity here to move from a mega-repo to something.
[2014-07-28 21:23:07 -0400] fujin: so shaking out what best way to do that would be
[2014-07-28 21:23:13 -0400] holoway: https://gist.github.com/adamhjk/c272b831b15829610a0a
[2014-07-28 21:23:18 -0400] fujin: I am happy to put aside all of my previously determined preferences
[2014-07-28 21:23:22 -0400] jtimberman: https://gist.github.com/jtimberman/fca7005f3ad0c87fdebd
[2014-07-28 21:23:22 -0400] fujin: reading
[2014-07-28 21:23:42 -0400] holoway: in the mega repo, you have to make sure everything always works together as of a particular commit
[2014-07-28 21:23:49 -0400] holoway: because things.. move together
[2014-07-28 21:24:04 -0400] fujin: holoway: I have totally had that exact thing you've said is not possible, totally being done
[2014-07-28 21:24:10 -0400] fujin: "not an acceptable thing" sorry quote
[2014-07-28 21:24:12 -0400] holoway: fujin: oh, you *can* do it
[2014-07-28 21:24:19 -0400] holoway: fujin: it just leads to a confusing disaster
[2014-07-28 21:24:24 -0400] fujin: oh right. :-)
[2014-07-28 21:24:28 -0400] holoway: fujin: in many peoples experience
[2014-07-28 21:24:33 -0400] holoway: (including mine, and I invented it)
[2014-07-28 21:24:46 -0400] kallistec: yeah, if you had to rebuild your chef-server from git, you'd be in a world of hurt
[2014-07-28 21:25:03 -0400] holoway: now, as you move forward
[2014-07-28 21:25:11 -0400] kallistec: if you had the "not acceptable" mega-repo state that holoway showed
[2014-07-28 21:25:19 -0400] holoway: lets say you decide to make Jenkins do the work for you
[2014-07-28 21:25:27 -0400] fujin: oh, i see. 'cause you lose the version of the cookbook that is on the asset store vs. what is in git
[2014-07-28 21:25:32 -0400] fujin: without going back through git to recover it
[2014-07-28 21:25:33 -0400] holoway: fujin: BINGO
[2014-07-28 21:25:42 -0400] fujin: o_o
[2014-07-28 21:25:53 -0400] holoway: to move it forward
[2014-07-28 21:27:12 -0400] holoway: the other bad state you can get into
[2014-07-28 21:27:19 -0400] holoway: is where you had a 0.7.0 in the tree
[2014-07-28 21:27:23 -0400] holoway: cause it existed in git
[2014-07-28 21:27:26 -0400] holoway: and you tested it
[2014-07-28 21:27:30 -0400] holoway: but you never actually released the artifact
[2014-07-28 21:27:40 -0400] holoway: so you make the commit that gets you into the odd state
[2014-07-28 21:27:46 -0400] holoway: and your CD process comes along
[2014-07-28 21:28:07 -0400] holoway: and all the sudden, you can't resolve the world anymore
[2014-07-28 21:28:55 -0400] holoway: now, the actual solution tot hat
[2014-07-28 21:29:03 -0400] holoway: has nothing to do (really) with monolith or individual
[2014-07-28 21:29:10 -0400] holoway: it is that everything needs to always pin to head
[2014-07-28 21:29:25 -0400] holoway: and your CD process needs to move everything as a group
[2014-07-28 21:29:41 -0400] holoway: (set A) always works together, as does (set B)
[2014-07-28 21:29:54 -0400] holoway: but again, we're back to trusting not just your source control, but the assets you generate
[2014-07-28 21:30:17 -0400] holoway: and when you start trusting the assets you generate as a source of valuable truth
[2014-07-28 21:30:45 -0400] holoway: then the approach of individual repositories makes huge sense, beause you can just.. check out the repository you care about, and trust that the assets will be fetched
[2014-07-28 21:30:55 -0400] holoway: and they will be right
[2014-07-28 21:31:03 -0400] holoway: whereas when they are a monolith, it gets a lot harder
[2014-07-28 21:31:16 -0400] holoway: because you are binding (set A) to a single commit in a giant repo
[2014-07-28 21:31:32 -0400] holoway: (this is without talking about potential for paralellism in your pipelines, etc.)
[2014-07-28 21:38:09 -0400] github-bawt: [chef-rfc] adamedx pushed 1 new commit to adamed/dsc: http://git.io/Q8ZmBA
[2014-07-28 21:38:10 -0400] github-bawt: chef-rfc/adamed/dsc 47de212 adamedx: Fix incorrect usage of dsc_mof instead of dsc_script
[2014-07-28 21:40:14 -0400] github-bawt: [chef-rfc] adamedx pushed 1 new commit to adamed/dsc: http://git.io/LSu45w
[2014-07-28 21:40:15 -0400] github-bawt: chef-rfc/adamed/dsc 772bd3f adamedx: Document title should use title caps style
[2014-07-28 21:43:22 -0400] fujin: holoway: thanks for all of the ideas :-)
[2014-07-28 21:43:30 -0400] holoway: fujin: my pleasure
[2014-07-28 21:43:57 -0400] holoway: fujin: the truth is, until you start doing the following 3 things, the cookbook-as-app model feels too complicated
[2014-07-28 21:44:11 -0400] holoway: 1) testing each cookbook in isolation (chefspec/serverspec/test-kitchen)
[2014-07-28 21:44:46 -0400] holoway: 2) publishing changes to cookbooks or objects automatically and pinning them in your environments
[2014-07-28 21:45:10 -0400] holoway: 3) trusting the assets you publish as a source of truth about the history of your infrastructure
[2014-07-28 21:48:45 -0400] fujin: holoway: I think you're understating the importance of CI/CD between #1 #2
[2014-07-28 21:48:57 -0400] fujin: non-humanoid to test, tag, asset, push, ..
[2014-07-28 21:49:05 -0400] holoway: right
[2014-07-28 21:49:12 -0400] holoway: I think the monolith is good for humans
[2014-07-28 21:49:43 -0400] holoway: I think cookbook-as-app is way better for machines, and from the perspective of a developer who cares about one higher level idea (like "my app") it's probably better for humans too
[2014-07-28 21:49:55 -0400] fujin: hm, understood
[2014-07-28 21:50:14 -0400] holoway: one example of monlith better for humans
[2014-07-28 21:50:19 -0400] fujin: we were just discussing, how the other senior colleague I've just recently attained, he and I both generally do not write cookbook tests
[2014-07-28 21:50:24 -0400] fujin: because frankly, cookbook skills 2 gud
[2014-07-28 21:50:27 -0400] holoway: the vendor branch pattern is a way better one for dealing with cahnges to upstream than wrapper cookbooks, imho
[2014-07-28 21:50:33 -0400] fujin: Uneccesary complexity
[2014-07-28 21:50:41 -0400] holoway: fujin: I was that way too
[2014-07-28 21:50:46 -0400] fujin: I haven't really had a lot of luck running the tests of upstream/community cbs either, maybe that is me personally
[2014-07-28 21:50:55 -0400] holoway: fujin: now I can't imagine not writing tests while I go, because the loop is so fast
[2014-07-28 21:51:11 -0400] holoway: fujin: have you written a cookbook with Guard/ChefSpec/Test-Kitchen?
[2014-07-28 21:51:20 -0400] fujin: living on the same Earth right, how? still got converge loop to snore through
[2014-07-28 21:51:35 -0400] fujin: I mostly used minitest-chef exclusively
[2014-07-28 21:51:41 -0400] fujin: I have not spent large amounts of time with *spec for cbs
[2014-07-28 21:51:59 -0400] fujin: Not enough to comment on using it anyway :-\
[2014-07-28 21:52:01 -0400] holoway: fujin: right, so chefspec is fast like a unit test, and protects you against regressions
[2014-07-28 21:52:22 -0400] fujin: that being sai,d I've only ever used the testing stuff I had, as smoketests/integration test
[2014-07-28 21:52:25 -0400] holoway: fujin: test kitchen used iteratively (kitchen converge; N kitchen-verify)
[2014-07-28 21:52:29 -0400] fujin: Not testing what I'm writing in my recipes because that is a bit stupid
[2014-07-28 21:52:38 -0400] fujin: I mean maybe it will save you against compile time stuff
[2014-07-28 21:52:55 -0400] holoway: here is an example
[2014-07-28 21:52:56 -0400] holoway: https://github.com/opscode/chef-elevate
[2014-07-28 21:53:01 -0400] fujin: thx
[2014-07-28 21:53:21 -0400] fujin: viola mother fuuuckerrr
[2014-07-28 21:53:44 -0400] holoway: maybe a bad example because it's an LWRP, mostly
[2014-07-28 21:53:54 -0400] fujin: this is just a fucking rspec
[2014-07-28 21:53:58 -0400] fujin: it looks like chefcore in a gem
[2014-07-28 21:53:59 -0400] holoway: of course it is
[2014-07-28 21:54:04 -0400] fujin: HWRP
[2014-07-28 21:54:07 -0400] fujin: I am confused
[2014-07-28 21:54:21 -0400] holoway: that's why it's a bad example, actually
[2014-07-28 21:54:27 -0400] holoway: although its test-kitchen is a good one
[2014-07-28 21:54:31 -0400] fujin: oh
[2014-07-28 21:54:32 -0400] fujin: looking
[2014-07-28 21:54:51 -0400] holoway: https://github.com/opscode/chef-elevate/blob/master/test/integration/default/serverspec/localhost/elevate_spec.rb
[2014-07-28 21:55:03 -0400] holoway: https://github.com/opscode/chef-elevate/tree/master/test/cookbooks/elevate
[2014-07-28 21:55:11 -0400] holoway: and the guardfile
[2014-07-28 21:55:25 -0400] fujin: serverspec != chefspec right ?
[2014-07-28 21:55:26 -0400] holoway: (which is just the rspec in that example)
[2014-07-28 21:55:27 -0400] holoway: https://github.com/opscode/chef-elevate/blob/master/Guardfile
[2014-07-28 21:55:30 -0400] fujin: doesnt' serverspec ssh into shit?
[2014-07-28 21:55:33 -0400] holoway: serverspec is for integration
[2014-07-28 21:55:39 -0400] holoway: the 'localhost' makes it local
[2014-07-28 21:55:42 -0400] fujin: ah
[2014-07-28 21:56:31 -0400] holoway: anyway
[2014-07-28 21:56:33 -0400] holoway: give it a shot
[2014-07-28 21:56:38 -0400] fujin: thanks
[2014-07-28 21:56:39 -0400] holoway: and see how it feels after a few days
[2014-07-28 21:56:40 -0400] fujin: that is a super good example
[2014-07-28 21:56:48 -0400] holoway: use chefspec for unit tests
[2014-07-28 21:56:50 -0400] fujin: I will see if I can get a recipes-only example of the same thing
[2014-07-28 21:56:53 -0400] holoway: and think about it as regression
[2014-07-28 21:57:00 -0400] holoway: ie: you aren't testing Chef
[2014-07-28 21:57:08 -0400] holoway: you are testing whether anyone comes along and brutally fucks your recipe
[2014-07-28 21:57:18 -0400] holoway: by changing something that matters, like a permission
[2014-07-28 21:57:23 -0400] holoway: on a file
[2014-07-28 21:57:28 -0400] holoway: and catching it in 0.0023 seconds
[2014-07-28 21:57:31 -0400] fujin: holoway: chefspec aint even in that repo is it?
[2014-07-28 21:57:32 -0400] holoway: instead of after a long chef run
[2014-07-28 21:57:34 -0400] holoway: no
[2014-07-28 21:57:36 -0400] holoway: I'll find you one
[2014-07-28 21:57:54 -0400] holoway: (it's hard, a lot of the places I've been doing it are private ;)
[2014-07-28 21:58:01 -0400] fujin: yeah I understand
[2014-07-28 21:58:32 -0400] holoway: here is an old example
[2014-07-28 21:58:33 -0400] holoway: https://github.com/adamhjk/zsh
[2014-07-28 21:58:50 -0400] fujin: Do you reckon you can get to this #1 (CI/CD) -> #4 workflow w/o implementing testing
[2014-07-28 21:58:53 -0400] fujin: like convert a mono repo
[2014-07-28 21:58:56 -0400] fujin: just pin HEAD IDGAF
[2014-07-28 21:59:16 -0400] holoway: you can, but I don't know how it would ever be safe to use in the wild
[2014-07-28 21:59:17 -0400] fujin: I can't force every new place I join to write tests immediately for every <100 cookbooks they have internally, right
[2014-07-28 21:59:25 -0400] holoway: no, of course not
[2014-07-28 21:59:26 -0400] fujin: hm, an impasse
[2014-07-28 21:59:26 -0400] holoway: you write 1 test
[2014-07-28 21:59:40 -0400] fujin: it "does the needful" { true }
[2014-07-28 21:59:44 -0400] fujin: ???
[2014-07-28 21:59:45 -0400] holoway: kind of, yeah
[2014-07-28 21:59:51 -0400] holoway: you don't need 100% coverage
[2014-07-28 22:00:04 -0400] holoway: you just need something that a machine can use that's good enough compared to the eyeball you would use
[2014-07-28 22:00:11 -0400] holoway: which is a pretty low bar
[2014-07-28 22:00:12 -0400] holoway: for most things
[2014-07-28 22:00:24 -0400] fujin: humans are going to gate the thing it tags/asset/pushes though via CR presumably
[2014-07-28 22:00:34 -0400] fujin: cr>push>ci>cd>..#3 #4
[2014-07-28 22:00:44 -0400] holoway: right, you might start with something like
[2014-07-28 22:00:52 -0400] fujin: it kind of sounds like you are apprehensive
[2014-07-28 22:01:09 -0400] jtimberman: ChefSpec is super good for finding issues with "will this even build an resource collection"
[2014-07-28 22:01:12 -0400] holoway: cr>push>ci>publish>env1->publish->env2
[2014-07-28 22:01:27 -0400] fujin: i can almost exclusively reiterate that almost every sre/ops role I've taken in the past decade has not willfully adopted chef unit/integration testing, it is pretty rare "in the wild"
[2014-07-28 22:01:30 -0400] jtimberman: And wriggling out the edge cases you didn't think of where the code can't be used in isolation.
[2014-07-28 22:01:39 -0400] holoway: fujin: absolutely!
[2014-07-28 22:01:45 -0400] fujin: have built it personally in some very *very* rare cases
[2014-07-28 22:01:47 -0400] holoway: fujin: the fact that it's rare doesn't mean it isn't good
[2014-07-28 22:01:55 -0400] fujin: I understand
[2014-07-28 22:01:59 -0400] jtimberman: I was super resistant to this at first.
[2014-07-28 22:01:59 -0400] holoway: when it works it is glorious
[2014-07-28 22:02:05 -0400] fujin: just trying to gauge step required to put it into place
[2014-07-28 22:02:13 -0400] jtimberman: Like, ChefSpec was nonsense to me. "If it runs through a chef-client run it's fine."
[2014-07-28 22:02:29 -0400] holoway: fujin: start with writing integration tests
[2014-07-28 22:02:33 -0400] holoway: fujin: just one
[2014-07-28 22:02:35 -0400] holoway: (one test)
[2014-07-28 22:02:51 -0400] jtimberman: And then there was the "set up a mock object for each different platform, and see what happens to your conditional statements" and BOOM broken shit everywhere for edge platforms.
[2014-07-28 22:02:53 -0400] holoway: and put a CI process in place that takes each commit, and runs the integration test for you
[2014-07-28 22:03:05 -0400] jtimberman: and i was converted. :)
[2014-07-28 22:03:12 -0400] holoway: and if it passes, knife cookbook upload's that bad boy
[2014-07-28 22:03:30 -0400] fujin: i am fucking glad I don't have multi platforms yet again THANK YOU NEW JOB-GODS
[2014-07-28 22:03:33 -0400] holoway: (now, I would recommend you pin your environments as well)
[2014-07-28 22:03:44 -0400] jtimberman: fujin: lol yeah, that's a huge time sink for sure.
[2014-07-28 22:03:54 -0400] paulmooring: jtimberman I think holoway hit the nail on the head with the 1 integration test point.  ChefSpec is cool but you really need integration testing for CI/CD to be doable
[2014-07-28 22:04:00 -0400] jtimberman: especially when someone's all "here's some gentoo support"
[2014-07-28 22:04:05 -0400] jtimberman: paulmooring: oh totally.
[2014-07-28 22:04:20 -0400] jtimberman: paulmooring: i was already a semi-convert on that with minitest-chef handler.
[2014-07-28 22:05:07 -0400] paulmooring: I do like ChefSpec though, but pushing infra through a CD pipeline is the dream and that's where test-kitchen shines
[2014-07-28 22:05:11 -0400] jtimberman: http://www.getchef.com/blog/2012/07/20/on-the-level-testing-your-infrastructure/
[2014-07-28 22:05:32 -0400] fujin: i am pretty certain that adding pig thrusters in front of virtualbox
[2014-07-28 22:05:35 -0400] fujin: is just going to break shit more often
[2014-07-28 22:05:42 -0400] fujin: how reliable has your test-kitchen VM pipeline been?
[2014-07-28 22:05:51 -0400] fujin: i have VMs get wedged all the fucking time, have tod estroy them
[2014-07-28 22:05:51 -0400] fujin: blah blah blah
[2014-07-28 22:06:06 -0400] paulmooring: fujin test-kitchen doesn't have to be vagrant/vbox
[2014-07-28 22:06:08 -0400] fujin: don't even get mes tarted on "synced folder" on multi-platform development team.
[2014-07-28 22:06:10 -0400] fujin: relying on that will get you FUCKED UP.
[2014-07-28 22:06:29 -0400] jtimberman: i just switched (like, last friday) from virtualbox to vmware fusion for vagrant.
[2014-07-28 22:06:30 -0400] fujin: paulmooring: yeh? of course, I've used it w/ docker, what do you suggest?
[2014-07-28 22:06:34 -0400] fujin: fucking vmware.
[2014-07-28 22:06:39 -0400] paulmooring: test-kitchen + AWS + chef server makes me happiest
[2014-07-28 22:06:48 -0400] jtimberman: oh right you use a archlinux right?
[2014-07-28 22:07:03 -0400] fujin: for my workstation I do, sure.
[2014-07-28 22:07:11 -0400] jtimberman: fujin: i think lxc should be hip to that jive
[2014-07-28 22:07:12 -0400] fujin: appears most of my newfound colleagues are OSX operators
[2014-07-28 22:07:20 -0400] fujin: I am talking about a CI/CD pipeline though
[2014-07-28 22:07:23 -0400] fujin: Not local integration
[2014-07-28 22:07:43 -0400] fujin: VMWare on your <cookbook build pipelin slaves> ?
[2014-07-28 22:07:43 -0400] jtimberman: yeah, so, lxc?
[2014-07-28 22:07:52 -0400] fujin: Is that what you use?
[2014-07-28 22:08:02 -0400] jtimberman: we don't use anything [yet]. :)
[2014-07-28 22:08:11 -0400] fujin: How do you get the sauce into the container without a unionfs/bindmount
[2014-07-28 22:08:24 -0400] fujin: [how do you manage N..inf bindmount/containers]
[2014-07-28 22:08:31 -0400] fujin: Yo dawg, heard you like containers, now you need all of this other shit
[2014-07-28 22:08:42 -0400] holoway: fujin: I've only done it at customer sites, not at Chef itself
[2014-07-28 22:08:43 -0400] jtimberman: like, chisamore or vargo could answer what we're doing in the current build cluster.
[2014-07-28 22:08:53 -0400] fujin: fo' sho'
[2014-07-28 22:09:22 -0400] holoway: fujin: but we used test-kitchen and vagrant, or spun stuff up on the cloudz
[2014-07-28 22:09:39 -0400] fujin: holoway: what backend for vagrant on that infra?
[2014-07-28 22:09:47 -0400] jtimberman: fujin: and you've enumerated why i like illumos. zones/zfs is all built into the OS, is the default, with no other weird patterns or use to worry about. of course, you can't run a linux zone on an illumos host :)
[2014-07-28 22:10:13 -0400] holoway: fujin: virtualbox
[2014-07-28 22:10:24 -0400] jtimberman: when i wrote up the test kitchen + vagrant + jenkins stuff last year, I did it with virtualbox. and as you said, VMs got wedged all the tiem
[2014-07-28 22:10:24 -0400] fujin: holoway: okay, cool
[2014-07-28 22:10:33 -0400] holoway: fujin: this is one of the reasons I'm not actually telling people they should all eat the whole bowl
[2014-07-28 22:10:37 -0400] holoway: fujin: it's not quite ready yet
[2014-07-28 22:10:41 -0400] jtimberman: i had a cron job that would just nuke shit if no job was running.
[2014-07-28 22:11:22 -0400] fujin: I believe the CI system I've inherited -- circleCI, just attained Docker capabilities
[2014-07-28 22:11:26 -0400] fujin: although I'm not sure to what degree
[2014-07-28 22:11:39 -0400] fujin: inherited? gained access to? I don't know. one of those things
[2014-07-28 22:11:42 -0400] fujin: not really inherited.
[2014-07-28 22:12:48 -0400] fujin: holoway: any particular gotchas from that setup? I feel like I've tried to build so many of these, with varying degrees of success
[2014-07-28 22:12:55 -0400] fujin: hey, if one were to be converting a mega-repo today, knowing what we do
[2014-07-28 22:12:59 -0400] fujin: should they be using berks3 in the interim?
[2014-07-28 22:14:23 -0400] fujin: lol
[2014-07-28 22:16:14 -0400] holoway: Yes
[2014-07-28 22:16:17 -0400] holoway: use chef-dk
[2014-07-28 22:16:19 -0400] holoway: and berks 3
[2014-07-28 22:17:24 -0400] fujin: k thx
[2014-07-28 22:17:49 -0400] fujin: I can put chefdk in an ubuntu container on my workstation I think
[2014-07-28 22:19:01 -0400] fujin: hey
[2014-07-28 22:19:05 -0400] fujin: why has librarian fallen out of favor
[2014-07-28 22:19:21 -0400] fujin: it doesn't force any any workflow pattern on anyone (I think?)
[2014-07-28 22:19:40 -0400] fujin: I recall having some severe difficulty stepping through the codebase at some stage, but I cannot recall the time
[2014-07-28 22:19:41 -0400] jtimberman: fujin: it does "take over your ./cookbooks" though.
[2014-07-28 22:19:56 -0400] jtimberman: that's about the extent of opinion it has about workflow though.
[2014-07-28 22:20:10 -0400] fujin: hmm
[2014-07-28 22:20:18 -0400] holoway: fujin: when you start really heaving down the road, jamie is the one who has thought through all the edge cases
[2014-07-28 22:20:28 -0400] fujin: jtimberman: presumably I won't have a ./cookbooks once I split these all out
[2014-07-28 22:20:35 -0400] holoway: I'm not saying librarian is bad
[2014-07-28 22:20:37 -0400] fujin: jtimberman: won't it be .gitignore ?
[2014-07-28 22:20:49 -0400] jtimberman: fujin: right like, you don't commit those to git i don't think.
[2014-07-28 22:20:52 -0400] holoway: just that berks isn't the bad guy
[2014-07-28 22:21:10 -0400] jtimberman: i haven't worked with librarian since we lended a hand with rubygems.org last year.
[2014-07-28 22:21:11 -0400] fujin: Does librarian support /universe resolution yet
[2014-07-28 22:21:32 -0400] fujin: That's wot Berks3 is working off, right?
[2014-07-28 22:21:39 -0400] fujin: The universe endpoint on le supermarche
[2014-07-28 22:21:40 -0400] jtimberman: yeah /universe came from berkshelf-api
[2014-07-28 22:22:24 -0400] fujin: hm, I see.
[2014-07-28 22:22:46 -0400] fujin: https://github.com/applicationsonline/librarian-chef/search?q=universe&ref=cmdform
[2014-07-28 22:22:54 -0400] fujin: not only fallen out of favor: fallen out of repair
[2014-07-28 22:23:00 -0400] fujin: sub-optimal
[2014-07-28 22:24:39 -0400] fujin: that is a non-starterthen yeh? should we notify the project?
[2014-07-28 22:24:45 -0400] fujin: will librarian still work I wonder?
[2014-07-28 22:25:13 -0400] jtimberman: fujin: librarian will work with supermarket.
[2014-07-28 22:25:23 -0400] jtimberman: fujin: that was a thing cwebber tested before we went live.
[2014-07-28 22:25:40 -0400] jtimberman: it still does the "download cookbook, unpack, inspect metadata, retrieve dependencies" though.
[2014-07-28 22:26:03 -0400] jtimberman: rather than consume /universe
[2014-07-28 22:26:15 -0400] fujin: I see
[2014-07-28 22:32:47 -0400] holoway: fujin: careful - if you look at this too long, you'll wind up realizing why they built all this tooling, and then get mad its not tighter :)
[2014-07-28 22:34:17 -0400] fujin: ah
[2014-07-28 22:34:37 -0400] fujin: It would take me a lot to get mad
[2014-07-28 22:34:57 -0400] fujin: many of the golang components are ready for utilization in a CLI, now, too
[2014-07-28 22:35:20 -0400] fujin: I am seemingly not too bothered by the idea of giving this a solid crack
[2014-07-28 22:35:28 -0400] fujin: Just gotta let go eh holoway
[2014-07-28 22:36:51 -0400] fujin: I am sure I'll have more questions later
[2014-07-28 22:36:54 -0400] fujin: I need to recaffeinate
[2014-07-28 22:36:57 -0400] fujin: this 6am start, phewee
[2014-07-28 22:37:01 -0400] fujin: daylight savings FML
