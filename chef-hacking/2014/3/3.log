[2014-03-03 13:09:55 -0500] iroller: Ohai Chefs. Question re ChefSpec. I'm stubbing a data bag item and then trying to load it with Chef::DataBagItem.load. Getting "Error: I cannot read /etc/chef/client.pem", so it looks like it's trying to load the real cookbook instead of stubbed data
[2014-03-03 13:10:36 -0500] iroller: So how am I supposed to load stubbed data bag item to use it somewhere else?
[2014-03-03 13:22:00 -0500] juliancdunn: iroller: try using only data_bag_item('foo', 'bar') in your recipe?
[2014-03-03 13:25:16 -0500] iroller: juliancdunn: I need to use it in my spec file, not recipe. I mean I want stub data bag only once and then use it in stubbed search
[2014-03-03 13:26:58 -0500] juliancdunn: in your before, you're doing stub_data_bag and stub_data_bag_item?
[2014-03-03 13:30:10 -0500] iroller: juliancdunn:
[2014-03-03 13:30:28 -0500] iroller: stub_data_bag_item('db', 'foo').and_return({ id: 'foo' }) chef_run.stub_search(:db, 'id:foo') { [ Chef:DataBagItem.load('db', 'foo')] }
[2014-03-03 13:30:41 -0500] iroller: ^doesn't work for some reason
[2014-03-03 13:31:29 -0500] juliancdunn: iroller: I don't understand the call to Chef::DataBagItem.load
[2014-03-03 13:31:32 -0500] juliancdunn: why do you need that?
[2014-03-03 13:31:53 -0500] iroller: juliancdunn: I mean I don't want to specify the whole data bag in stub_search since it was already stubbed before and I just want to load it somehow
[2014-03-03 13:32:32 -0500] zts: iroller: assign it to a variable, and use that in both of your stub calls
[2014-03-03 13:33:16 -0500] juliancdunn: there may be a way to do chef_run.stub_search(...).and_return(the_thing_you_stubbed_before) but that'd require delving into ChefSpec internals, with which I am unfamiliar
[2014-03-03 13:33:19 -0500] juliancdunn: zts' way is easier :)
[2014-03-03 13:34:25 -0500] iroller: zts: good idea, thanks
[2014-03-03 14:09:53 -0500] iroller: Hm... after finally stubbing a search it does nothing in a recipe. I have search(:data_bag, 'attr: val') {|d| ...} in my recipe and it doesn't do anything in block. However search(:data_bag, 'attr_val').each {|d| ....} works fine
[2014-03-03 14:10:54 -0500] iroller: and I'm stubbing it with an array, looks like I need to stub it with something else?
[2014-03-03 15:55:09 -0500] juliancdunn: iroller: yeah, you need an iterator in recipe context to do something with that :)
[2014-03-03 15:55:20 -0500] juliancdunn: I've never seen search(...) and then passing a block actually work, without .each
[2014-03-03 15:56:14 -0500] iroller: juliancdunn: well it's being used in some opscode cookbooks
[2014-03-03 15:56:20 -0500] iroller: and it's also in the docs: http://docs.opscode.com/essentials_search.html#nodes
[2014-03-03 15:56:44 -0500] iroller: > If you just want to use each result of the search and dont care about the aggregate result you can provide a code block to the search method. Each result is then passed to the block:
[2014-03-03 15:56:51 -0500] juliancdunn: heh
[2014-03-03 15:56:57 -0500] juliancdunn: well, .each is more correct
[2014-03-03 15:57:16 -0500] juliancdunn: since you get an array back from a search
[2014-03-03 16:03:20 -0500] iroller: juliancdunn: I'm not sure I want to fix every opscode recipe to use each iterator to get tests working. Submitted an issue to @sethvargo: https://github.com/sethvargo/chefspec/issues/368
[2014-03-03 16:04:11 -0500] iroller: juliancdunn: thanks for your responses, it's pretty quiet here
[2014-03-03 16:09:42 -0500] github-bawt: [chef] schisamo created enable-travis-notifications (+1 new commit): http://git.io/S6wwrw
[2014-03-03 16:09:42 -0500] github-bawt: chef/enable-travis-notifications 69dd859 Seth Chisamore: Enable Travis CI notifications...
[2014-03-03 16:11:03 -0500] juliancdunn: iroller: yeah, you're actually more likely to get responses in #chef
[2014-03-03 16:11:12 -0500] juliancdunn: this is the 'hacking' channel for working on core code
