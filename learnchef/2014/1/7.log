[2014-01-07 15:09:22 -0500] zxd: gi
[2014-01-07 15:09:23 -0500] zxd: hi
[2014-01-07 15:09:24 -0500] zxd: anyone here?
[2014-01-07 16:12:35 -0500] ctote: Hey everyone - I'm trying to find out how I can permanently modify the system PATH variables through Chef
[2014-01-07 16:12:37 -0500] ctote: Is that possible?
[2014-01-07 17:47:12 -0500] gestrell_: When resource fails how to trigger an action
[2014-01-07 20:38:10 -0500] Yoteco: Hi everyone! Could somebody explain me what's the difference between a client and a node? (in enterprise chef)
[2014-01-07 20:44:01 -0500] jbz: Yoteco:  The client is an instance of chef-client.  That instance runs *on* a node.
[2014-01-07 20:44:32 -0500] jbz: Yoteco: So when you remove a machine from chef, in order to bring it back, you have to first delete both the client record and the node record.
[2014-01-07 20:45:07 -0500] jbz: Yoteco: What this means, in practical terms, is that auth tokens (keys) are issued to clients, and clients run on nodes.
[2014-01-07 20:47:44 -0500] Yoteco: jbz: Thanks for your answer. It looks a bit strange to me that this difference exists
[2014-01-07 20:48:06 -0500] Yoteco: jbz: Is there a use case where this differentiation is useful?
[2014-01-07 20:48:17 -0500] jbz: Yoteco: Think of it this way - the 'client' is the 'chef account.'  The 'node' contains the information about a system which is being configured by a client.
[2014-01-07 20:58:36 -0500] Yoteco: Ok. And can one client have multiple nodes?
[2014-01-07 21:22:31 -0500] Yoteco: I'm still struggling with the best solution to provision a VM. I work with berkshelf and then upload my application recipe to the chef server. After that what's the best way to provision a VM? A: create a node and define a run list with the application recipe. B: (like vagrant) register the node with knife and the create the run list. C: other?
