[2014-01-31 13:10:15 -0500] zuzust: Hi there
[2014-01-31 13:12:25 -0500] zuzust: Look, I'm using chef to migrate boxes to GNU/Linux...
[2014-01-31 13:13:41 -0500] zuzust: and I'm stuck trying to troubleshoot an error exposed during a chef-client run,,.
[2014-01-31 13:14:39 -0500] zuzust: May anyone help me with that?
[2014-01-31 13:16:17 -0500] zuzust: I've defined a default nested attribute in a role...
[2014-01-31 13:17:06 -0500] zuzust: Something like: "box": { "users": {...} }
[2014-01-31 13:18:11 -0500] zuzust: But when I iterate over it in my recipe: node[:box][:users].each { ... }
[2014-01-31 13:18:43 -0500] zuzust: I get a Chef::Exceptions::ImmutableAttributeModification
[2014-01-31 13:19:33 -0500] zuzust: And this message: Node attributes are read-only when you do not specify which precedence level to set. To set an attribute use code like `node.default["key"] = "value"'
[2014-01-31 13:22:39 -0500] zuzust: I cannot understand why it refers to its precedence level because it is defined in the default_attributes method call
[2014-01-31 13:23:58 -0500] zuzust: in the role file
[2014-01-31 13:25:01 -0500] zuzust: Does anyone know how to fix it?
[2014-01-31 13:34:13 -0500] denniswisnia: I want to set local_ipaddress for each node manually, how?
[2014-01-31 19:08:50 -0500] kbarry: Is this channel moderated by anyone at opscode??
[2014-01-31 19:10:32 -0500] jeffbyrnes: @kbarry judging by the topic, it very well might be.
[2014-01-31 19:10:39 -0500] sigje: what do you mean by "moderated"
[2014-01-31 19:10:42 -0500] sigje: monitored?
[2014-01-31 19:10:43 -0500] kbarry: hahahahaha
[2014-01-31 19:10:51 -0500] sigje: I'm sure there are chef folks here
[2014-01-31 19:11:07 -0500] kbarry: I mean, sometimes it seems like there is no activity on tihs channel other and loin/logoff :)
[2014-01-31 19:11:27 -0500] sigje: well it's for newbies to ask questions.. I think a lot of cool community folks are here too.
[2014-01-31 19:11:37 -0500] sigje: there is also #chef
[2014-01-31 19:11:44 -0500] kbarry: I hang out there,
[2014-01-31 19:16:01 -0500] kbarry: from the documentaiton, about attribute " When the cookbook attributes take precedence over the default attributes..." "When?" Are cookbook attributes not the highest authority?
[2014-01-31 20:05:34 -0500] jbz: kbarry: Are you still waiting for info re: attributes and precedence?
[2014-01-31 20:06:07 -0500] kbarry: yes.
[2014-01-31 20:06:24 -0500] kbarry: Its probably a minor detail, but the question came to me, and wanted to know.
[2014-01-31 20:08:37 -0500] jbz: Sorry, what's the question again?  No guarantee I can answer it, but I'll take a stab. :-)
[2014-01-31 20:17:53 -0500] kbarry: In the documentation it states "The the cookbook attributes takes precidence over the default attributes...", implying that sometimes the attributes in the cookbook do not take precedence,
[2014-01-31 20:23:03 -0500] jbz: kbarry:  Attribute precedence is fairly complex.  Attributes in the cookbook can take varying levels of precedence depending on where they're set in the cookbook and how they're set.
[2014-01-31 20:23:07 -0500] jbz: Sorry, not a great answer, but...
[2014-01-31 20:23:48 -0500] jbz: There's a section in this doc named 'Attribute Precedence' which gives the complete picture: http://docs.opscode.com/chef_overview_attributes.html
[2014-01-31 20:26:03 -0500] kbarry: Thanks for the link.
[2014-01-31 20:26:08 -0500] jbz: np
[2014-01-31 20:26:12 -0500] kbarry: Trying to figure out templaes right now.
[2014-01-31 20:26:47 -0500] kbarry: jbz: Can i fire a few quick questions at you?
[2014-01-31 20:26:50 -0500] jbz: Sure
[2014-01-31 20:27:30 -0500] kbarry: So, templates. The example here http://docs.opscode.com/essentials_cookbook_templates.html is about createing a sodoer file
[2014-01-31 20:28:16 -0500] jbz: yep
[2014-01-31 20:28:36 -0500] kbarry: Coes it be used to, say, prepare a script to run?
[2014-01-31 20:28:48 -0500] kbarry: actually, let me back up
[2014-01-31 20:29:00 -0500] kbarry: When templates are used, how are they being used
[2014-01-31 20:29:12 -0500] kbarry: not just to create custom files to be moves in place.
[2014-01-31 20:29:37 -0500] kbarry: I'm imagining using them to possibly create scripts (I come from a powershell background)
[2014-01-31 20:30:05 -0500] kbarry: My teamLead suggested we would use templates for separiting the environments?
[2014-01-31 20:31:00 -0500] jbz: uh
[2014-01-31 20:31:03 -0500] jbz: so
[2014-01-31 20:31:11 -0500] jbz: templates, at base, are used to write files to the filesystem.
[2014-01-31 20:31:18 -0500] kbarry: Ok,
[2014-01-31 20:31:21 -0500] jbz: Those can be scripts, config files, data files, etc.
[2014-01-31 20:31:25 -0500] jbz: Generally not binary, though. :-)
[2014-01-31 20:31:27 -0500] jbz: But yes
[2014-01-31 20:31:33 -0500] jbz: you can absolutely customize scripts with them
[2014-01-31 20:31:36 -0500] jbz: I do that often.
[2014-01-31 20:32:17 -0500] jbz: You just need to make sure to set the permissions on the resulting file to allow execution.  I do this in linux, I don't use windows, so YMMV there.
[2014-01-31 20:32:59 -0500] jbz: Examples - sometimes we drop ssh tunneling scripts into user directories as a convenience for our users.  We customize the script with the correct usernames.
[2014-01-31 20:33:35 -0500] jbz: Or we have some cron-executed mail processing scripts, which we customize with the appropriate mailserver name and targets.
[2014-01-31 21:05:50 -0500] kbarry: I must be missing something, 
[2014-01-31 21:06:00 -0500] kbarry: When an attribute is "reset" what does that mean?
[2014-01-31 21:06:10 -0500] kbarry: Normal attributes are not reset,
[2014-01-31 21:06:13 -0500] kbarry: the others are,
[2014-01-31 21:06:32 -0500] kbarry: I don't seem to grasp this idea. Attributes are stored? Where is it "reset"?
[2014-01-31 21:11:00 -0500] kbarry: reset on the node?
[2014-01-31 21:17:21 -0500] jbz: kbarry: where do you see 'reset'? Want to be sure.
[2014-01-31 21:17:54 -0500] kbarry: in reference to what happens with the attibutes at the end of the run
[2014-01-31 21:17:58 -0500] kbarry: I think i understand,
[2014-01-31 21:18:08 -0500] kbarry: Normal ones are the ones determined by ohia
[2014-01-31 21:18:12 -0500] jbz: nope
[2014-01-31 21:18:14 -0500] kbarry: so they can't be changed so to speak
[2014-01-31 21:18:15 -0500] jbz: heh
[2014-01-31 21:18:27 -0500] jbz: attributes set by ohai are precedence 'automatic'
[2014-01-31 21:18:50 -0500] jbz: And correct, they cannot be changed
[2014-01-31 21:18:57 -0500] jbz: basically
[2014-01-31 21:19:00 -0500] kbarry: The chef-client will pull down the node object from the server (which contains the attribute data from the previous chef-client run), after which all attributes (except normal are reset)
[2014-01-31 21:19:17 -0500] jbz: yeah so
[2014-01-31 21:19:34 -0500] jbz: ooh, yeah, that's confusing
[2014-01-31 21:19:48 -0500] kbarry: I was confused  about ohia attribute type, sorry, my bad, but still wondering aobut normal.
[2014-01-31 21:19:56 -0500] jbz: but basically, the client pulls down the node object including the attributes.
[2014-01-31 21:20:22 -0500] jbz: It doesn't populate 'automatic' attributes from the node object - those are populated from the ohai run.
[2014-01-31 21:20:25 -0500] kbarry: and to be clear the node "object" is essentially "this is what the machine should look like when chef-client is done)
[2014-01-31 21:20:40 -0500] jbz: kbarry: well, no.  It's the last-saved state.
[2014-01-31 21:20:58 -0500] jbz: that's what the chef-server thinks the machine looks like.
[2014-01-31 21:21:04 -0500] kbarry: right,
[2014-01-31 21:21:06 -0500] kbarry: ok
[2014-01-31 21:22:56 -0500] jbz: So attributes are a complex merge
[2014-01-31 21:23:45 -0500] jbz: At the start of the run, ohai runs first and gathers data.  Then the node state is downloaded from the server, and the cookbooks that are specified are processed for attribute files as well.
[2014-01-31 21:23:55 -0500] jbz: Those various sources are all merged according to the precedence rules
[2014-01-31 21:24:19 -0500] jbz: since ohai attributes are precedence 'automatic' which is highest, they always remain constant for the run
[2014-01-31 21:24:55 -0500] jbz: Generally, the big shuffle is between previous state, roles, environments and cookbook attribute files
[2014-01-31 21:25:02 -0500] jbz: once that is done, the run starts
[2014-01-31 21:25:24 -0500] jbz: during the run, recipe code can set attribute values as well, and those happen during the run itself
[2014-01-31 21:25:41 -0500] jbz: finally, at the end, the state (with those changes made) is saved back to the server, assuming that the run completed successfully.
[2014-01-31 21:27:24 -0500] jbz: As an example, a cookbook might install a piece of software which requires the node to determine if it's the master node or not.  That process, determining if it's the master, would happen during the run as cookbook code executes to determine the answer.  Then it would save its state, so *next* run, the client will assume that it *is* the master unless something else happens.  And once it has saved that information, other nodes on the
[2014-01-31 21:27:24 -0500] jbz:  server can search for a node which has the 'master' flag attribute set if they need to determine where the master is.
[2014-01-31 21:29:34 -0500] kbarry: And you can query "Whos one of us was made the master so I can point to it" from the chef server,
[2014-01-31 21:29:56 -0500] kbarry: (because the data is stored on the chef server
[2014-01-31 21:30:04 -0500] kbarry: Thats called the "Node object"?
[2014-01-31 21:30:05 -0500] jbz: right
[2014-01-31 21:30:46 -0500] jbz: a client, during a run, can say 'please return the node objects of all nodes which have the ['widget']['ismaster'] attribute set to TRUE' (for example).
[2014-01-31 21:31:09 -0500] jbz: Then it can pull the IPs and FQDNs out of that array of node objects to build a list of the other servers in its cluster, say.
[2014-01-31 21:31:41 -0500] jbz: (well, in that case, it'd be searching for all nodes which have ['widget'] available, but anyway).
[2014-01-31 21:32:40 -0500] kbarry: right,
[2014-01-31 21:32:47 -0500] kbarry: Ok, Its coming together.
[2014-01-31 21:33:06 -0500] kbarry: On a compltely random note, anyone use dotsie font?
[2014-01-31 21:40:40 -0500] kbarry: jbz:  here:  http://docs.opscode.com/chef_overview_attributes.html#examples
[2014-01-31 21:40:54 -0500] kbarry: the first two, the syntax looks similar but different
[2014-01-31 21:41:13 -0500] kbarry: default["apache"]["dir"] = "/etc/apache2"
[2014-01-31 21:41:44 -0500] jbz: kbarry: yep, that's because those are set in two different places, and those files are interpreted by different code
[2014-01-31 21:42:13 -0500] jbz: The first is interpreted by the chef-client during the run; the second is interpreted by knife while being uploaded to the chef-server.
[2014-01-31 21:44:38 -0500] jbz: kbarry: hm, unless the environment.rb file is being used by chef-solo, say.
[2014-01-31 21:45:08 -0500] kbarry: jbz: please don't talk about chef solo, i dont know what it is, and if I don't need to know, I don't want to :0
[2014-01-31 21:45:09 -0500] kbarry: not yet.
[2014-01-31 21:45:10 -0500] jbz: Anyway, though, yes, different syntax.   The first one is standard for use in cookbook attribute files.
[2014-01-31 21:45:57 -0500] kbarry: this is a newb question, but why is there a
[2014-01-31 21:46:05 -0500] jbz: kbarry: haha righto.  Well, anyway, if you're using a chef server, the second example is for use when changing server entity attributes (roles, environments).  The first is how you set attributes in a cookbook during a client run.
[2014-01-31 21:46:12 -0500] kbarry: difference in the syntax between the attributed and environment files
[2014-01-31 21:46:25 -0500] jbz: so
[2014-01-31 21:46:38 -0500] kbarry: i mean, is one in ruby, and the other is Zorp?
[2014-01-31 21:46:46 -0500] jbz: chef is a DSL implemented in ruby
[2014-01-31 21:46:52 -0500] jbz: so yeah
[2014-01-31 21:46:57 -0500] jbz: think of it this way
[2014-01-31 21:47:19 -0500] jbz: chef-client contains a bunch of code for the interpretation of attributes and recipes
[2014-01-31 21:47:33 -0500] jbz: but you don't use chef-client to change entities on a chef server (roles, environments)
[2014-01-31 21:47:35 -0500] jbz: you use knife
[2014-01-31 21:47:43 -0500] jbz: which is a much smaller simpler piece of code
[2014-01-31 21:48:11 -0500] jbz: You can also change the server entities by passing straight JSON in to knife
[2014-01-31 21:48:45 -0500] jbz: anyway, when knife executes those role/environment files, it has to use much more 'vanilla' ruby.
[2014-01-31 22:06:44 -0500] kbarry: ok
