[2012-04-07 00:57:00 -0400] jtimberman: bitprophet: you can have the users define what group(s) they're in.
[2012-04-07 00:57:31 -0400] jtimberman: well, group. singular.
[2012-04-07 02:22:17 -0400] bitprophet: jtimberman: hm, the docs don't list a group attribute for User, just gid, which doesn't appear to trigger group creation. (and I need >1 group per user anyways :))
[2012-04-07 02:37:10 -0400] jtimberman: bitprophet: yeah - you'll need to have a group resource.
[2012-04-07 04:18:55 -0400] jtgiri_: I am trying to create multiple config files based on vhosts attributes, I tried doing this http://pastebin.com/BEPnQx5A, but it didn't work. Any ideas how to accomplish this ?
[2012-04-07 08:35:52 -0400] jacobat: It seems there is an issue with some PGP key: http://pastie.org/pastes/3743552/text
[2012-04-07 08:36:21 -0400] jacobat: This is when trying to run the bootstrap solo script as mentioned on wiki
[2012-04-07 08:45:06 -0400] jacobat: Fixed by http://wiki.opscode.com/display/chef/Installing+Chef+Client+on+Ubuntu+or+Debian#InstallingChefClientonUbuntuorDebian-AddtheGPGKeyandUpdateIndex
[2012-04-07 10:49:35 -0400] motiejus: knife node create <name> opens a text editor immediatly and, when finished, pushes data to chef-server and the file is "lost" (not in the repo). I am thinking about chef workflow where all node information is stored in the git repo. How do I a) put it back to the file b) create an empty file for later feeding using knife node from file <file>? I could "knife node create", save file, kill vim and use it, but it doesn't sound like a proper solution
[2012-04-07 10:50:25 -0400] motiejus: I.e. is properly supported to have all the node information in a single repository?
[2012-04-07 11:56:09 -0400] jacobat: How do I get "knife client create -n ..." to not open an editor?
[2012-04-07 11:57:43 -0400] Babar: EDITOR="blah" knife client... ? :)
[2012-04-07 11:58:01 -0400] Babar: pick blah carefuly of course
[2012-04-07 11:58:56 -0400] jacobat: That will open an editor... I would like to avoid that and script it instead
[2012-04-07 11:59:41 -0400] Babar: are you reading what I wrote?
[2012-04-07 11:59:53 -0400] Babar: or you're just dismissing the idea because you don't understand it?
[2012-04-07 12:00:04 -0400] jacobat: Maybe I just don't understand it...
[2012-04-07 12:00:04 -0400] Babar: that's how you deal with crontabs too, when you don't have anything else
[2012-04-07 12:00:29 -0400] jacobat: So you're using I should use cat as editor? Or something like that?
[2012-04-07 12:00:30 -0400] Babar: just script it, and put your script in the EDITOR="youscript"
[2012-04-07 12:00:37 -0400] Babar: something like that
[2012-04-07 12:00:44 -0400] jacobat: Alright, thanks
[2012-04-07 12:01:07 -0400] Babar: there has to be a better way, but I'm telling you that's how we used to do it for crontabs when we didn't have /etc/cron.d :)
[2012-04-07 12:02:52 -0400] jacobat: It does seem a bit hacky ;)
[2012-04-07 12:21:56 -0400] dcUnit3d: hey i've got a question about hosted chef
[2012-04-07 12:22:26 -0400] dcUnit3d: i've registered a node and i'm just trying to figure out how to run my recipes
[2012-04-07 12:39:16 -0400] dcUnit3d: the problem is, i've installed rvm on the server
[2012-04-07 12:39:33 -0400] dcUnit3d: and that is local to the user i installed it for, aptly named chef
[2012-04-07 12:39:52 -0400] dcUnit3d: but when i run my recipes, i don't have the appropriate access to run everything
[2012-04-07 12:40:00 -0400] dcUnit3d: so does the chef user have to be root?
[2012-04-07 13:01:41 -0400] specialsauce: hey all. Question - the "search" function only seems to be valid within recipes, not environment files, is that a deliberate restriction? I've tried to make all my configuration in recipes done using variables that map to attributes that can be overriden at the environment level, but this seems to prevent this.
[2012-04-07 13:21:02 -0400] zts: dcUnit3d: It's possible to run chef as a non-root user, but that will seriously limit what it is able to do
[2012-04-07 13:21:33 -0400] zts: dcUnit3d: you could use sudo in execute resources (for example), but the builtin types won't try to use sudo
[2012-04-07 13:23:15 -0400] zts: specialsauce: Yes, environment files (like roles) end up as JSON, they aren't code that gets run on your node
[2012-04-07 13:24:29 -0400] zts: specialsauce: note that you can make your searches look for only nodes in the current environment (or any other, for that matter).
[2012-04-07 13:25:11 -0400] zts: specialsauce: can you talk a bit more about how you'd use search in an environment definition (if that were possible)?  Perhaps there's a different approach that otherwise meets your goals
[2012-04-07 13:27:00 -0400] specialsauce: zts: thanks for your reply. I am already using functions such as "load" and setting of variables in my env files so I know they support ruby functions, it just seems they don't have access to certain chef ruby DSL functions such as "search". Maybe I better explain what I'm trying to do
[2012-04-07 13:27:55 -0400] specialsauce: The way I have set Chef up, there are default attributes in the recipe level. I have no attributes set at role level. And then I have a common environment file included by each environment, which then does a deep merge over the top of its own environment-specific settings.
[2012-04-07 13:28:25 -0400] specialsauce: The only problem is, I am setting hostnames manually per-environment in attributes, whereas I want to fetchthem from search
[2012-04-07 13:28:53 -0400] specialsauce: But I don't want to start putting these searches into individual recipes when all my attributes are currently nicely set in one file per environment at environment level
[2012-04-07 13:30:14 -0400] specialsauce: The silly thing is that I *could* call external "knife search" from my environment files to return a node list, but I can't do itusing chef ruby DSL search function. Which seems a little weird
[2012-04-07 13:31:32 -0400] zts: specialsauce: the ruby DSL for environments allows you to use some arbitrary ruby, yes, but the point is that that is only run on your admin workstation when you upload the environment using knife.
[2012-04-07 13:31:58 -0400] zts: specialsauce: if your requirement is to run search at that point, and bake the results into the environment file that you are uploading, I can see how that would be useful
[2012-04-07 13:33:30 -0400] specialsauce: that's pretty much what i was trying to do, yes
[2012-04-07 13:33:31 -0400] zts: specialsauce: though personally, I'd just do the search in my recipes, so that nodes were quickly updated if the state of the environment changes (without someone re-uploading the environment definition)
[2012-04-07 13:33:45 -0400] specialsauce: ok, i see the point in that
[2012-04-07 13:34:35 -0400] specialsauce: fair enough, I will have to break this out into the individual recipes, just seems a shame to start scattering this stuff back out into dozens of recipes again when currently all the attributes for the environment are gathered in a single place
[2012-04-07 13:35:07 -0400] zts: well, there's two other things you could consider
[2012-04-07 13:35:11 -0400] specialsauce: because it means i can't manually override if i need to for an environment
[2012-04-07 13:35:40 -0400] zts: 1) look into what ruby you need to put into your environment.rb to pull it Chef's search bits so that you can use them (I'm sure it would be possible)
[2012-04-07 13:35:43 -0400] zts: or
[2012-04-07 13:36:02 -0400] zts: 2) write an "environment management script" which does the searches, flattens the results into the environment definition you want, and then uploads the result to the chef server
[2012-04-07 13:37:08 -0400] zts: even if you delegate search to the cookbooks, you could still allow for overriding that in environments (or roles) - just check for the existence of the attribute on the node, then fall back to searching for an answer if it doesn't exist
[2012-04-07 13:38:40 -0400] specialsauce: ok. so currently i pass a variable to the template that maps to a node attribute. i set a default for this in th recipe and then override it at environment level as needed. So if I did the above suggestion, I could set it at the default attribute level via search and still override it at env? ie you can use search in attribute files, not just in recipes?
[2012-04-07 13:40:15 -0400] zts: I don't think you can use search from attributes either, but try it rather than taking my word for it.  What I had in mind, though, is not to set a default for the attribute at all
[2012-04-07 13:40:35 -0400] zts: so that in your recipe, you can test whether the attribute is set on your node - knowing that it will only be set if you've put that in an environment definition
[2012-04-07 13:41:21 -0400] zts: I may have misunderstood your requirement, though?  I understood that you'd take the value from the environment if set, and otherwise use search to determine the "default"
[2012-04-07 13:42:38 -0400] specialsauce: yes that is what i wanted but kind of reverse logic from how i think about it - ie for it to populated the default_attributes hash with the default value from search, and then allow an environment override if we want it to work with a manually set host for a given environment for any reason
[2012-04-07 13:42:52 -0400] specialsauce: that's the pattern i've been using everywhere - set a sensible default, and then override if needed
[2012-04-07 13:43:27 -0400] zts: the way I think about it is that I set a sensible default attribute if I know what that is ahead of time, otherwise I leave it undefined
[2012-04-07 13:43:49 -0400] zts: but I see where you're coming from
[2012-04-07 13:44:02 -0400] zts: try out using search in an attributes file and see if it works
[2012-04-07 13:44:18 -0400] zts: I know why it *doesn't* work for roles and environments, but the same argument won't apply to attributes
[2012-04-07 13:44:37 -0400] specialsauce: yeah i'll give that a go, if not i think I am back to square one i think in getting it to work how i want
[2012-04-07 13:48:41 -0400] zts: If you reach that point, it might be worth stepping back and thinking about why you want things to work a particular way (ie, what are the characteristics you are trying to achieve).  It may be that Chef's way of solving the problem is different to what you have in mind, but still meets the same goals
[2012-04-07 13:48:51 -0400] zts: it's not always true, but I have had that experience a few times since I started using it
[2012-04-07 13:49:13 -0400] zts: good luck with it, in any event!
[2012-04-07 13:49:17 -0400] specialsauce: cheers!
[2012-04-07 14:35:08 -0400] motiejus: is there a way to print the attribute list while the recipe is executing?
[2012-04-07 14:35:26 -0400] motiejus: I am debugging my recipe, it doesn't seem to deep merge the attributes defined in the node file
[2012-04-07 14:35:32 -0400] motiejus: s/file/config
[2012-04-07 15:17:25 -0400] specialsauce: motiejus: have you tried a ruby "put" on the node attribute? what does that do?
[2012-04-07 15:47:33 -0400] bbeck: Hey guys, i'm new to chef and trying to figure things out. What's the role of chef-repo? I was hoping to be able to package my chef cookbooks/recipes right next to my code so they are developed simultaneously. When I try to do a site install of the getting started cookbook knife complains a bunch to me about things not being a git repo and I'm not sure why.
[2012-04-07 15:48:30 -0400] bbeck: I feel like I'm not understanding something fundamental to chef and trying to use it in the wrong way.
[2012-04-07 15:48:56 -0400] specialsauce: bbeck: i could be wrong but I think chef just always insists you work from a git repo as part of the standard workflow
[2012-04-07 15:49:01 -0400] specialsauce: whats how we have things set up, certainly
[2012-04-07 15:49:36 -0400] bbeck: well I have a git repo for my code, but it seems like chef wants a separate git repo of its own for cookbooks?
[2012-04-07 15:50:27 -0400] specialsauce: we put downloaded cookbooks and our own environment files etc etc all in the same git repo
[2012-04-07 15:50:45 -0400] specialsauce: you can have multiple cookbook paths within your repo if you need to keep them separated
[2012-04-07 15:51:30 -0400] specialsauce: so our workflow is download cookbook into repo and then knife upload from there
[2012-04-07 15:56:18 -0400] specialsauce: easiest thing to do if yuo're getting started is prbably to clone the chef-repo and then copy any of your own stuff on top of that piece by piece so it grows organically :-)
[2012-04-07 15:57:52 -0400] zts: I'd add to that by noting that "knife cookbook site" is pretty opinionated.  Chef itself doesn't care about where (or whether) you have a "chef-repo" in git, but some other utilities/commands do make that assumption
[2012-04-07 15:57:54 -0400] bbeck: I guess I'm trying to find a way to organize my chef stuff local to the project that's using it.  So I know that when I clone the git repo 100% of what is needed is there.
[2012-04-07 15:59:05 -0400] zts: If you're just getting started, it's worth going along with convention.  You can absolutely keep the cookbook along with your application if that's what you want, and when you're uploading the cookbook (using knife) you can specify an alternate path for it to find the cookbook
[2012-04-07 15:59:38 -0400] zts: something like: knife cookbook upload myAppCookbook -o /path/to/your/code/cookbook
[2012-04-07 16:02:21 -0400] bbeck: Ok, so clearly I'm a bit confused about chef.  What does a normal workflow look like?  I create a new application in a git repo.  Then I go to the chef repo and author a cookbook to deploy the application?  Then I upload the cookbook to the chef server.  Then I can tell a machine to run the cookbook?
[2012-04-07 16:03:53 -0400] specialsauce: I think the confusion you have is chef has little or nothing to do with application code normally
[2012-04-07 16:04:55 -0400] specialsauce: the normal starting opint for chef would be to want to build your app hosts using some code rather than by hand
[2012-04-07 16:05:34 -0400] bbeck: I guess I'm looking for a way to go from a machine with just the default install of the OS on it to one with my software stack running.  And I want that process to be repeatable
[2012-04-07 16:06:02 -0400] specialsauce: ok, thats fine, but your application code itself - treat that separely at first
[2012-04-07 16:06:23 -0400] specialsauce: chef's main job is to install server software etc ready for the code to run on top of it
[2012-04-07 16:06:35 -0400] specialsauce: that code would normalyl (IMO) be handled in a completely different repo
[2012-04-07 16:06:56 -0400] specialsauce: so chef builds your hosts and installs your stack and enforces that configuration
[2012-04-07 16:07:09 -0400] specialsauce: you then push out your code to it normally via some other mechanism
[2012-04-07 16:07:36 -0400] specialsauce: because chef isn't a one-shot thing, it normally runs cronned or daemonised and enforces a state
[2012-04-07 16:07:55 -0400] specialsauce: you wouldn't want to have to redefine the release version of your app code or whatever in chef each time
[2012-04-07 16:08:11 -0400] specialsauce: so chef stops at the point where your app host is built with stack but there's no app code there (normally)
[2012-04-07 16:09:42 -0400] specialsauce: so your chef git repo is a bunch of code in ruby to install PHP or JAva or whatever your stack needs
[2012-04-07 16:09:47 -0400] specialsauce: its not your application code
[2012-04-07 16:09:56 -0400] specialsauce: if it helps think of it as "operational code"
[2012-04-07 16:10:57 -0400] specialsauce: is that any help?
[2012-04-07 16:12:01 -0400] bbeck: sure, I get what you're saying.  I guess I was just looking for a one button full deployment.  Having the host come up, run chef, recognize its role, install any base packages, install application, start application
[2012-04-07 16:12:54 -0400] specialsauce: there's no reason chef can't do that
[2012-04-07 16:13:51 -0400] specialsauce: but the "install application" bit would normally be something like "add a key for this git repo, checkout the code to this location"
[2012-04-07 16:14:14 -0400] bbeck: yes! that's exactly what I would like it to be
[2012-04-07 16:14:31 -0400] specialsauce: but the app code wouldn't be in your chef repo normally, or at least there's no reason for it to be
[2012-04-07 16:20:04 -0400] bbeck: that's where I feel differently.  I guess it's a personal opinion at that point.  I'd like for developers to be able to bring up an environment locally in a VM and have it configured the same way as production.  Then if they add a new technology to the stack or replace one they can also update cookbooks/recipes as part of their change to ensure that everything deploys and runs correctly before committing their change.
[2012-04-07 16:20:57 -0400] bbeck: i guess I feel like if all of the deployment code is as close to the application code as possible that it'll be a lot easier to facilitate that process
[2012-04-07 16:21:32 -0400] specialsauce: interesting
[2012-04-07 16:23:34 -0400] specialsauce: just for the record, we do the same - use chef for dev builds too - but we haven't physically brought the operational code into the same repo as the application code. i see your argument on why it should be treated as all the same thing and maintained by the same people etc, its just that I haven't come across it done that way. this might just be an organisational thing as you say
[2012-04-07 16:27:32 -0400] bbeck: it's really all kinda academic at this point. for what i'm doing i'm the developer and i'm the operator and i'm just being lazy by wanting to have everything next to each other.
[2012-04-07 16:27:47 -0400] specialsauce: hehe
[2012-04-07 16:28:25 -0400] bbeck: but at the same time i'm trying the model out on a personal project to get a feel for it.  if it seems good then i'd like to do something like it at work too
[2012-04-07 16:45:48 -0400] dstanek: is there a way to make an instance of a cookbook? for example, i want to make a static-site-from-git recipe and have it run multiple times using different attributes
[2012-04-07 16:47:10 -0400] dstanek: i could just make recipes for site1 and site2 indivitually, but since they will only have slightly different nginx configs and git repos I thought having a single recipe would be better
[2012-04-07 16:48:42 -0400] specialsauce: the way to do that is to use attributes normally
[2012-04-07 16:48:52 -0400] specialsauce: you can call the same recipe/cookbook but using different attributes
[2012-04-07 16:49:04 -0400] specialsauce: at the environment level
[2012-04-07 16:50:14 -0400] dstanek: specialsauce: is it possible to do that on the same box?
[2012-04-07 16:51:05 -0400] |shad0w|: dstanek, put your attribs for both sites under a single attrib and iterate through them with a loop in the recipe
[2012-04-07 16:52:28 -0400] dstanek: |shad0w|: ah, so my static-site-from-git recipe would look for a list of static sites in the attributes?
[2012-04-07 16:52:51 -0400] |shad0w|: yeah, thats the basic idea
[2012-04-07 16:52:59 -0400] specialsauce: you can just do it using a ruby for loop in the recipe
[2012-04-07 16:53:05 -0400] |shad0w|: you could just do a hash or array of the attribs for the sites
[2012-04-07 16:54:03 -0400] dstanek: very interesting, thanks specialsauce and |shad0w|
[2012-04-07 16:54:39 -0400] dstanek: i'm trying to find the right balance of using chef for configuration management and fabric for application deplopment
[2012-04-07 17:00:52 -0400] dstanek: or deployment :-)
[2012-04-07 17:01:30 -0400] |shad0w|: I like deplopment better, nothing is worse than a plopmented site
[2012-04-07 17:02:47 -0400] specialsauce: hehe
[2012-04-07 17:03:59 -0400] specialsauce: i find configuration management by far the biggest challenge and something where newer tools can really help, whereas application deployment kind of has been solved 1000 ways already
[2012-04-07 17:11:32 -0400] zts: ~.
[2012-04-07 17:13:21 -0400] dstanek: how do people normally deal with sites-available vs. sites-enabled functionality using chef?
[2012-04-07 17:13:45 -0400] dstanek: does chef normally manage that or some outside tools?
[2012-04-07 17:13:46 -0400] zts: dstanek: re: repeating a recipe with different attributes, you might also want to look at http://wiki.opscode.com/display/chef/Definitions
[2012-04-07 17:14:20 -0400] dstanek: zts thanks. that look very interesting
[2012-04-07 17:21:19 -0400] miah: and if youre looking at definitions, you should really look at
[2012-04-07 17:21:21 -0400] miah: lwrp?
[2012-04-07 17:21:21 -0400] bawt: lwrp is Lightweight Resources and Providers, a simple DSL to write custom resources in cookbooks, main documentation at http://wiki.opscode.com/display/chef/Light-weight+Resources+and+Providers+%28LWRP%29 and Opscode's open source cookbooks with LWRPs are documented at http://wiki.opscode.com/display/chef/Opscode+LWRP+Resources
[2012-04-07 17:23:08 -0400] miah: afaik, the nginx and apache recipes both have lwrp's for enabling sites via sites-enabled
[2012-04-07 17:32:04 -0400] jtimberman: miah: they're definitions not lwrps
[2012-04-07 17:32:23 -0400] miah: ah
[2012-04-07 18:18:57 -0400] hoover_damm: yep
[2012-04-07 18:19:00 -0400] hoover_damm: someone's gotta convert em
[2012-04-07 18:19:15 -0400] hoover_damm: zenoss or rvm are good lwrp choices
[2012-04-07 18:19:37 -0400] hoover_damm: but the general problem with copying someones code and trying to understand it is, you don't
[2012-04-07 18:28:53 -0400] jtimberman: hoover_damm: conversion is in progress iirc.
[2012-04-07 18:35:29 -0400] zts: Is there anything written down that explains the "Ewww, definitions.  Make it an LWRP." meme?
[2012-04-07 18:36:06 -0400] zts: There's obviously loads of things that one can do with an LWRP but not a definition (and that's why I use them)
[2012-04-07 18:36:30 -0400] zts: but the conventional wisdom these days seems to be to *always* use an LWRP, even when a definition would suffice.  I can't help but feel like I'm missing something..
[2012-04-07 18:43:49 -0400] hoover_damm: jtimberman, yeah I have to convert our nginx to lwrp
[2012-04-07 18:43:55 -0400] hoover_damm: so I can use it with unicorn or with passenger
[2012-04-07 18:47:33 -0400] yfeldblum: meh, trying to turn all definitions into LWRPs is so very wrong
[2012-04-07 18:48:28 -0400] yfeldblum: definitions are great - they're essentially macros expanding into multiple resources - and the fact that they're not intended to be treated as resources in and of themselves is OK
[2012-04-07 18:48:56 -0400] hoover_damm: it really is
[2012-04-07 18:49:06 -0400] hoover_damm: lwrp isn't useful for everything
[2012-04-07 18:49:17 -0400] hoover_damm: a little forethought on the design and you can go far with definitions alone
[2012-04-07 18:50:35 -0400] yfeldblum: at this point i think that if you're writing LW providers and you're implementing the actions using sub-resources, that's likely an indication that you're doing it wrong and you should probably be using a definition instead of a LW R/P
[2012-04-07 18:52:21 -0400] hoover_damm: that's the whole problem I have with making a nginx lwrp
[2012-04-07 18:52:28 -0400] hoover_damm: I've done the whole nginx definition for a long time, it works
[2012-04-07 18:52:29 -0400] yfeldblum: it's OK to write LW providers using normal Ruby and I think that should probably be encouraged as a useful technique for some LW providers, essentially if they're doing things that are hard to do with a pure sequence of resources
[2012-04-07 18:52:56 -0400] hoover_damm: I think maybe the cookbook could be expanded to the point where you can do rewrites and whatnot via attributes
[2012-04-07 18:54:06 -0400] yfeldblum: hoover_damm, i dunno, i think that level of granularity (specifying rewrites) should really go in your own cookbook that provides the nginx cookbook with a baked config file
[2012-04-07 18:55:15 -0400] yfeldblum: hoover_damm, another thing i think is a problem is people essentially using only third-party cookbooks and expecting them to meet all one's own highly-specific, likely-custom needs
[2012-04-07 18:56:36 -0400] yfeldblum: hoover_damm, much better to have your own perhaps application-specific cookbook which depends on the generic nginx cookbook for some things but also has its own nginx site conf file with application-specific rewrites
[2012-04-07 19:03:46 -0400] hoover_damm: yfeldblum, that's currently what we're doing
[2012-04-07 19:03:59 -0400] hoover_damm: generic nginx cookbook, very application specific cookbook to write the nginx config files
[2012-04-07 19:45:42 -0400] hoover_damm: we just need to break it out and drop out a cookbook style guide to complete the pattern
[2012-04-07 19:46:30 -0400] miah: indeed
[2012-04-07 19:46:59 -0400] miah: less decisions about configuration. more about getting stuff installed and basic functionaly. provide the other pieces via definitions or lwrp.
[2012-04-07 19:47:21 -0400] hoover_damm: honestly how many people in here really design their chef?
[2012-04-07 19:47:35 -0400] hoover_damm: i've been known to spend a week or so pondering high level design
[2012-04-07 19:47:40 -0400] hoover_damm: and then write it down into an org file
[2012-04-07 19:48:09 -0400] hoover_damm: I was trying to design a PaaS lwrp honestly (basically all the knobs that paas's provide in chef knobs)
[2012-04-07 19:48:17 -0400] hoover_damm: it was amazingly complex fast
[2012-04-07 19:48:28 -0400] miah: yes
[2012-04-07 19:48:29 -0400] hoover_damm: but doing it in uml or org-mode
[2012-04-07 19:48:37 -0400] hoover_damm: allowed me to actually make it understandable
[2012-04-07 19:48:44 -0400] hoover_damm: i've been starting the uml thing
[2012-04-07 19:48:53 -0400] hoover_damm: Ruby never taught me uml, and well python is
[2012-04-07 19:48:54 -0400] hoover_damm: lol
[2012-04-07 19:49:32 -0400] hoover_damm: but until you write it down to the point where others can grok it, the shareability of chef is slim
[2012-04-07 19:49:55 -0400] hoover_damm: oh i did these 3 lines in chef and it changed our world... <boss> cool what does this really mean? <me> dunno?
[2012-04-07 19:59:25 -0400] hoover_damm: don't yall?
[2012-04-07 22:38:15 -0400] UForgotten: can someone explain a best practice for iterating through a list of nodes in chef-solo?  since data bags dont work the same apparently
[2012-04-07 22:50:36 -0400] hoover_damm: data bags do work
[2012-04-07 22:50:43 -0400] hoover_damm: but you should likely put that kind of data in your json
[2012-04-07 22:59:40 -0400] UForgotten: I am struggling with having to work inside the box of chef-solo.  The way we run it, we call a json for each node specifically. But if I want to configure something based on info from all the nodes, I don't see an easy way to do it.
[2012-04-07 23:01:25 -0400] hoover_damm: there isn't really a way to do it without outside help
[2012-04-07 23:01:49 -0400] hoover_damm: you need to dump the data into the json, so your json becomes aware of our instances
[2012-04-07 23:02:06 -0400] hoover_damm: which means likely you want to write something to write your json file to have this crud
[2012-04-07 23:03:18 -0400] hoover_damm: awhile back I kinda prototyped a bad (overview) of json this way and I'd really suggest uml and then produce it into a script to dump the json with all you need
[2012-04-07 23:03:31 -0400] hoover_damm: and then write a local guide to your developers on how to use said data
[2012-04-07 23:03:59 -0400] hoover_damm: as you lack search, and most recipes use search the first thing you will have to do is replace that functionality and your developers in said cookbooks
[2012-04-07 23:04:08 -0400] hoover_damm: so having a handy list of ways to get the job done will make their life easier
[2012-04-07 23:12:44 -0400] UForgotten: seems like I'm not the first person to have this problem. would be nice if there was a way to build a state for all nodes that can be searched and used to build node data in chef-solo.
