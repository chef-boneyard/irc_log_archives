[2012-12-30 00:01:52 -0500] derks: yfeldblum, "require #from_file(..)" .. ?
[2012-12-30 00:05:10 -0500] derks: ok.. so, that works... i guess what isn't working is that knife reads the .rb as a config hash.. so its complaining that its not ruby code
[2012-12-30 00:06:16 -0500] derks: for example, the first settings in the common.rb are like "log_level :info" or "node_name 'my_node'"
[2012-12-30 00:36:56 -0500] yfeldblum: derks, just:    from_file File.expand_path("../knife-common.rb", __FILE__)
[2012-12-30 01:13:35 -0500] cyli: Happy holidays all!  I was wondering if anyone could point me to an example of this being done?  http://docs.opscode.com/essentials_cookbook_lwrp_providers_extend.html  (a LWRP extending a provider class in a library)  My google fu seems to have failed me.
[2012-12-30 01:20:04 -0500] cyli: The closest I've found was this:  https://github.com/dergachev/chef_extend_lwrp, which extends an lwrp with a provider class.  Perhaps I am misunderstanding what that doc is saying?
[2012-12-30 01:22:31 -0500] yfeldblum: cyli, that doc is a bunch of gibberish strung together with some nonsense
[2012-12-30 01:23:58 -0500] yfeldblum: cyli, you can either write a lightweight resource or provider class using the LWRP DSL, or you can write a normal class that inherits Chef::Resource or Chef::Provider and stick that class in a file in your cookbook's libraries/ directory
[2012-12-30 01:24:23 -0500] cyli: yfeldblum:  heh!  well glad to know I'm not confused for no reason.  :)
[2012-12-30 01:24:43 -0500] yfeldblum: cyli, the LWRP DSL is a thin DSL on top of writing your own subclasses of Chef::Resource and Chef::Provider, and if the thin DSL doesn't work for you, you can just drop right down to writing the classes yourself the normal way
[2012-12-30 01:25:22 -0500] yfeldblum: cyli, for some good examples of normal resource and provider classes, see: https://github.com/opscode/chef/tree/master/lib/chef/resource and https://github.com/opscode/chef/tree/master/lib/chef/provider
[2012-12-30 01:25:45 -0500] cyli: yfeldblum: excellent, thank you so much!
[2012-12-30 05:09:55 -0500] cwj: any application_python cookbook users around?
[2012-12-30 05:10:45 -0500] cwj: i am trying to build a cookbook using application_python for the first time, don't understand why new_resource.path is used instead of new_resource.release_path
[2012-12-30 05:10:46 -0500] cwj: at https://github.com/opscode-cookbooks/application_python/blob/master/providers/django.rb#L49-L50
[2012-12-30 05:12:26 -0500] cwj: are people in the habit of dropping off a requirements.txt outside of the deployed revision of the app, or is it a bug?
[2012-12-30 13:52:30 -0500] wizonesolutions: So I'm wondering if Chef is the right choice for some or all of my need. I want to (via Vagrant + Chef Solo) set up a LEMP stack and deploy dev-friendly versions of some sites (well, none of them have prod versions yet, but I digress). I want to be able to distribute the cookbook internally to a couple developers so that I don't have to explain to them how to get everything set up. Tried using blueprint from a server where this is set up
[2012-12-30 13:52:31 -0500] wizonesolutions: , but the clincher is that it doesn't add user/group resources (or anything from the /home directories), so I'd have to do it manually anyway. I'm split on how much of the setup process I should try scripting and how much I should try to make Chef work on (though I think I'd need my own recipe...the Blueprint one is messy). Pardon any misused terms...still a noob.
[2012-12-30 13:53:13 -0500] wizonesolutions: for the stuff where I want them to be able to change stuff without Chef caring it'd seem like scripting is a given. something like Capistrano or just shell commands, I guess.
[2012-12-30 13:53:29 -0500] wizonesolutions: but the way to go is a bit muddled in my head. I have to learn stuff either way...might as well learn something useful.
[2012-12-30 18:22:28 -0500] bdha: Anyone using erchef have it lose cookbooks periodically?
[2012-12-30 18:22:36 -0500] bdha: (I have to delete/upload them)
[2012-12-30 18:26:52 -0500] cwj: wizonesolutions: sounds like a possible good fit for chef. i would take a look at berkshelf's vagrant integration since it makes it very easy to pull in outside cookbooks
[2012-12-30 18:28:55 -0500] wizonesolutions: cwj: berkshelf.com?
[2012-12-30 18:29:04 -0500] cwj: yep, thats the one
[2012-12-30 18:29:09 -0500] wizonesolutions: What I'm seeing after today is that Chef is absolutely a good fit for at least some of my needs, and maybe eventually all.
[2012-12-30 18:29:34 -0500] wizonesolutions: I'm starting out with the shell provisioner and Ruby just to warm up and start from a place I understand somewhat better. I expect patterns to emerge, and then I can refactor where it makes sense.
[2012-12-30 18:29:35 -0500] wizonesolutions: kind of build up to it
[2012-12-30 18:29:45 -0500] cwj: sure
[2012-12-30 18:30:02 -0500] wizonesolutions: I know for config files for example it's gonna be Chef because I don't want to store passwords in version control
[2012-12-30 18:30:12 -0500] wizonesolutions: and templating already Just Works there vs. messing with ERB in Ruby myself
[2012-12-30 18:30:17 -0500] wizonesolutions: err
[2012-12-30 18:30:20 -0500] wizonesolutions: I mean in plaintext
[2012-12-30 18:30:24 -0500] wizonesolutions: Chef has data bags I've seen
[2012-12-30 18:31:13 -0500] cwj: yeah, you can use data bags to keep secrets somewhat isolated, but its a hard problem to solve
[2012-12-30 18:32:13 -0500] cwj: what i mean is, storing passwords in data bags solves some problems but not all of them
[2012-12-30 18:33:03 -0500] wizonesolutions: cwj: ah, any newb mistakes to avoid? (thanks for the Berkshelf tip btw. have just skimmed but can definitely see I'll be using that. stuff like that is always good.)
[2012-12-30 18:33:16 -0500] cwj: e.g. if your developers need a given password from a data bag to stand up a VM using chef solo, they need copy of the data bag item
[2012-12-30 18:34:08 -0500] cwj: similarly, if you use client/server and encrypt the data bags on the server, you have to handle key distribution somehow
[2012-12-30 19:21:23 -0500] wizonesolutions: cwj: It'd be Chef Solo. Is there an issue in giving them a copy of the data bag item? I'm thinking it'd just be under VC...they'd check it out. I guess I could use different keys for different logical environments and just distribute the ones they need? It's a small team, won't be getting ridiculously bigger, so I don't need heavy automation/controls around the keys, I don't think.
[2012-12-30 19:23:55 -0500] cwj: if you are comfortable having developer credentials stored in a data bag which is under revision control (i.e. your cookbook's repository) then that seems like a reasonable thing to do
[2012-12-30 19:24:17 -0500] cwj: its really a question of your individual organizational preference/policy
[2012-12-30 19:25:32 -0500] cwj: we have per-environment credentials stored in encrypted data bags, and i mock the required data when using chef-solo
[2012-12-30 19:29:33 -0500] jtzl: can anyone help me understand how to stub out this search for chefspec?  i can't seem to not do an actual search during unit testing... relevant (one-line) recipe code: http://pastebin.ca/2298094
[2012-12-30 19:37:54 -0500] wizonesolutions: cwj: oh yeah, this is volunteer work, and we know each other, so it doesn't need to be too strict at this point. but I still want to employ the principle of not giving root access to the front-end developer on anything except his Vagrant instance :)
[2012-12-30 19:38:05 -0500] wizonesolutions: when you say you mock the required data in Chef Solo, how do you mean?
[2012-12-30 19:38:25 -0500] wizonesolutions: like you just create a database on the spot and generate credentials then or something?
[2012-12-30 19:38:29 -0500] wizonesolutions: each time
[2012-12-30 19:38:43 -0500] wizonesolutions: or well, each time the VM is first set up
[2012-12-30 19:39:36 -0500] cwj: wizonesolutions: yeah
[2012-12-30 19:39:41 -0500] cwj: if Chef::Config.solo
[2012-12-30 19:39:44 -0500] cwj: do some stuff
[2012-12-30 19:39:45 -0500] cwj: else
[2012-12-30 19:39:51 -0500] wizonesolutions: hmm...actually, *I* should do that o_o - no reason to enforce that in version control, and that solves one of the access problems
[2012-12-30 19:39:52 -0500] cwj: get it from the data bag
[2012-12-30 19:39:53 -0500] cwj: end
[2012-12-30 19:40:05 -0500] wizonesolutions: then I can avoid storing anything in that repo, can use a separate one for Chef stuff on the servers
[2012-12-30 19:40:10 -0500] wizonesolutions: or something like that
[2012-12-30 19:40:25 -0500] wizonesolutions: dunno why I didn't think of that, thanks!
[2012-12-30 19:40:41 -0500] cwj: np :)
[2012-12-30 19:55:42 -0500] chip-: Anyone had success using the Omnibus chef installer + full Vagrant installer + Berkshelf without running into conflicting embedded rubies trampling each other?
[2012-12-30 19:56:06 -0500] chip-: (Ideally without rbenv / rvm, using the embedded / supported full-stack installers, but if that's the only way then that's the only way)
[2012-12-30 20:43:42 -0500] David_Miller: Can someone hold my hand through reporting a bug.  I want to comment on http://tickets.opscode.com/browse/CHEF-1377
[2012-12-30 20:43:58 -0500] David_Miller: but I am seeing this in chef 0.10
[2012-12-30 20:44:06 -0500] David_Miller: and the ticket is for 0.8
[2012-12-30 20:44:20 -0500] David_Miller: should I start a new report or what?
[2012-12-30 21:00:24 -0500] cwj: if it were me i would try bumping the existing ticket
[2012-12-30 21:00:34 -0500] cwj: assuming all described behavior is the same
[2012-12-30 21:00:35 -0500] cwj: etc
