[2014-01-25 00:14:15 -0500] magoo: I often have to rename chef nodes and it's a pain to delete the client pem, modify the client.rb with the new name, delete the cert on the server, rename the node on the server and then chef-client again. Is there a plugin for this?
[2014-01-25 00:15:46 -0500] lamontsf: Happy Friday, chefs
[2014-01-25 00:16:09 -0500] lamontsf: I was wondering if someone could help me understand the status of the depsolver bug outlined in https://tickets.opscode.com/browse/CHEF-3921
[2014-01-25 00:17:44 -0500] lamontsf: specifically, I'm running OSC server 11.0.8, and the various patches posited to fix the issue appear to be applied to the nightlies leading up to 11.0.8
[2014-01-25 00:18:52 -0500] lamontsf: but I cannot get the increased depsolver logging to take effect, and I'm still seeing the 100% cpu runaway problem and clients timing out on the /environments/blah/cookbook_versions request
[2014-01-25 00:20:49 -0500] lamontsf: I see there's a new 11.0.10 build, but the list of closed issues (all 3 of them) don't appear to include this.
[2014-01-25 00:34:00 -0500] damien__: greetings :)
[2014-01-25 00:35:42 -0500] damien__: is running chef-server on ubuntu 13.10 supported?  I don't see an option yet in getchef.com install instructions... is it acceptable to install chef-server_11.0.10-1.ubuntu.12.04_amd64.deb on ubuntu 13.10? What kind of issues might I run into?
[2014-01-25 00:37:56 -0500] acts_as_coder: Anyone know how to deal with needing to call "apt-get -f install" to meet package dependencies? (without having to run "apt-get -f install" on every chef run)
[2014-01-25 00:38:59 -0500] flaccid: acts_as_coder: make sure you are using standard repos and not having conflicted packages and other gotchas. you need to ask your os/distro people why you are in that situation
[2014-01-25 00:48:23 -0500] acts_as_coder: flaccid: Thanks. I think it's because I'm using "dpkg -i" to install some old-ish .deb's that we need.
[2014-01-25 00:49:12 -0500] cwj: acts_as_coder: i think you can pass additional options to apt via the package resources options parameter
[2014-01-25 00:49:17 -0500] cwj: if that helps
[2014-01-25 00:49:41 -0500] cwj: but as flaccid suggests, if you can prevent from getting into that situation in the first place, all the better
[2014-01-25 00:55:46 -0500] acts_as_coder: cwj and flaccid: thanks! I'll see if I can unwind this mess.
[2014-01-25 01:02:23 -0500] chip-: acts_as_coder: Try this? http://docs.opscode.com/chef/resources.html#dpkg-package
[2014-01-25 01:02:33 -0500] chip-: use the options attribute to pass in the "-f"
[2014-01-25 01:02:51 -0500] chip-: and source attribute for path/to/deb
[2014-01-25 01:03:22 -0500] chip-: oh wait. I'm totally misunderstanding the problem.
[2014-01-25 01:03:30 -0500] chip-: <Grand Galactic Inquisitor> IGNORE ME
[2014-01-25 01:11:29 -0500] supercom32: How does Chef know when to execute a recipe in it's run list or not? Does it check the add-remove programs area of windows to see if something had previously been installed?
[2014-01-25 01:11:55 -0500] coderanger: supercom32: any recipe in the expanded run list is executed
[2014-01-25 01:12:00 -0500] coderanger: those recipes should be idempotent themselves
[2014-01-25 01:26:44 -0500] whirlm: cg75:
[2014-01-25 02:20:01 -0500] zuhaib: Anyone know where I can find the release notes for Chef Server
[2014-01-25 02:20:17 -0500] zuhaib: I have googled for it and pretty much pulling blank
[2014-01-25 02:25:36 -0500] coderanger: zuhaib: http://www.getchef.com/blog/2013/04/23/chef-server-11-0-8-released/
[2014-01-25 02:25:57 -0500] zuhaib: Yeah, only problem is 11.0.10 is the latest on the website
[2014-01-25 02:26:16 -0500] zuhaib: Unless 11.0.10 was just a version bump, which, I doubt
[2014-01-25 02:30:31 -0500] coderanger: zuhaib: Hmm, not sure, looks like maybe there was no announcement
[2014-01-25 02:30:52 -0500] coderanger: found it
[2014-01-25 02:30:54 -0500] coderanger: security bump only
[2014-01-25 02:30:59 -0500] zuhaib: ah
[2014-01-25 02:30:59 -0500] coderanger: http://www.getchef.com/blog/2013/12/04/chef-server-security-updates/
[2014-01-25 02:31:00 -0500] zuhaib: thanks
[2014-01-25 02:31:30 -0500] zuhaib: They could just put it all under a Categories in their blog
[2014-01-25 02:31:39 -0500] zuhaib: so spread out all over the place
[2014-01-25 02:32:12 -0500] zuhaib: I want to see if their is anything that fixes this odd issue I am having with nginx with erchef
[2014-01-25 02:33:09 -0500] zuhaib: getting 413 "Request Entity Too Large".  The request is 1.2MB PUT, but, I have already   client_max_body_size 100m;
[2014-01-25 02:33:19 -0500] zuhaib: no idea why its still applying the 1mb limit
[2014-01-25 02:33:32 -0500] zuhaib: I have it nginx.conf and /var/opt/chef-server/nginx/etc/chef_https_lb.conf
[2014-01-25 02:40:04 -0500] coderanger: zuhaib: Is there a limit you need to adjust in webmachine maybe?
[2014-01-25 06:17:47 -0500] brucelee: hey, who here has some experience with puppet?
[2014-01-25 07:12:21 -0500] brucelee: im trying to understand a cookbook
[2014-01-25 07:12:34 -0500] brucelee: anyone know how i can decypher this provider
[2014-01-25 07:12:55 -0500] brucelee: http://hastebin.com/qopofunewu.vhdl
[2014-01-25 07:15:12 -0500] coderanger: brucelee: What about it
[2014-01-25 07:15:16 -0500] brucelee: omg
[2014-01-25 07:15:17 -0500] brucelee: coderanger
[2014-01-25 07:15:43 -0500] brucelee: just trying to get familiar with chef, or maybe ruby
[2014-01-25 07:15:53 -0500] brucelee: since i dont have experience with neither, its hard to figure out hwats ruby and whtas chef :p
[2014-01-25 07:15:56 -0500] brucelee: so for example
[2014-01-25 07:16:17 -0500] brucelee: the @action in line 7
[2014-01-25 07:16:20 -0500] brucelee: is that chef or ruby?
[2014-01-25 07:16:48 -0500] brucelee: the cool thing about ruby is how flexible it is, but the hard thing is, its so damn flexible but people can write code in such a complicated way
[2014-01-25 07:16:59 -0500] coderanger: So a provider file is the body of a class
[2014-01-25 07:17:07 -0500] coderanger: what lang are you most familiar with?
[2014-01-25 07:17:32 -0500] brucelee: java
[2014-01-25 07:17:51 -0500] coderanger: So initialize is basically the constructor
[2014-01-25 07:18:06 -0500] coderanger: @foo is how you refer to an instance variable in Ruby
[2014-01-25 07:18:16 -0500] brucelee: oh ok
[2014-01-25 07:18:42 -0500] brucelee: so right off the bat, action is set to "create"
[2014-01-25 07:18:49 -0500] coderanger: So thats an old idiom for setting the default action on resource, having it in a provider is incorrect though
[2014-01-25 07:18:56 -0500] coderanger: and likely just a copy-pasta error
[2014-01-25 07:19:32 -0500] brucelee: this is the user cookbook
[2014-01-25 07:19:35 -0500] brucelee: from opscode
[2014-01-25 07:19:55 -0500] brucelee: before downloading it, i was thinking how to make my own, but then just gave up
[2014-01-25 07:20:01 -0500] brucelee: i downloaded it, and looked at it, and i cant even udnerstand it :p
[2014-01-25 07:20:03 -0500] coderanger: user or users?
[2014-01-25 07:20:07 -0500] brucelee: users
[2014-01-25 07:20:08 -0500] coderanger: "users" is from opscode
[2014-01-25 07:20:14 -0500] brucelee: https://github.com/opscode-cookbooks/users/blob/master/providers/manage.rb
[2014-01-25 07:20:14 -0500] coderanger: "user" is much better
[2014-01-25 07:20:19 -0500] brucelee: oh user is much better?
[2014-01-25 07:20:25 -0500] coderanger: yes
[2014-01-25 07:20:39 -0500] coderanger: and yeah, thats just a bug
[2014-01-25 07:20:44 -0500] coderanger: happens to opscode too ;-)
[2014-01-25 07:20:51 -0500] brucelee: ;-)
[2014-01-25 07:21:12 -0500] brucelee: so how would they ever have the @action become remove?
[2014-01-25 07:21:20 -0500] brucelee: if everytime you instantiate the provider, its always "creating"
[2014-01-25 07:21:30 -0500] coderanger: That actually does nothing
[2014-01-25 07:21:37 -0500] coderanger: the action lives on the resource object
[2014-01-25 07:21:41 -0500] coderanger: not the provider
[2014-01-25 07:21:58 -0500] coderanger: So thats setting an instance var that nothing else ever looks at
[2014-01-25 07:22:13 -0500] brucelee: when you declare someting like @action :create, whats the colon represent?
[2014-01-25 07:22:47 -0500] coderanger: So :foo is something called a symbol
[2014-01-25 07:22:53 -0500] coderanger: its kind of like an enum
[2014-01-25 07:23:16 -0500] brucelee: @action = :create
[2014-01-25 07:23:24 -0500] coderanger: The compiler dedups symbols internally, so checking :foo == :foo is way faster than 'foo' == 'foo'
[2014-01-25 07:23:25 -0500] brucelee: is basically saying the action variable of this instance
[2014-01-25 07:23:34 -0500] coderanger: yep
[2014-01-25 07:23:36 -0500] brucelee: can be create
[2014-01-25 07:23:55 -0500] brucelee: enum is basically a bunch of choices that the variable can take on right?
[2014-01-25 07:24:09 -0500] coderanger: So unlike enum there isn't a specific set of choices
[2014-01-25 07:24:23 -0500] coderanger: But it does have the same property that comparisons are fast
[2014-01-25 07:24:39 -0500] brucelee: oh ok
[2014-01-25 07:25:21 -0500] brucelee: so that entire line 10 to 15
[2014-01-25 07:25:25 -0500] brucelee: is really confusing syntax to me
[2014-01-25 07:25:44 -0500] brucelee: so in ruby its possibel to declare function names with a question mark at the end?
[2014-01-25 07:26:09 -0500] coderanger: Yes, ? is just a normal character in identifiers
[2014-01-25 07:26:18 -0500] coderanger: as is !
[2014-01-25 07:26:23 -0500] brucelee: and line 11, where it sets klass equal to something, what kind of magic is going on there? :P
[2014-01-25 07:26:58 -0500] coderanger: Nothing, just some metaprogramming to check if a specific class exists
[2014-01-25 07:27:08 -0500] coderanger: const_get gets a const value
[2014-01-25 07:27:21 -0500] coderanger: and then is_a? is a type predicate
[2014-01-25 07:27:44 -0500] brucelee: so 'Helper' is a class?
[2014-01-25 07:27:56 -0500] coderanger: It might be, depending on how you are using chef
[2014-01-25 07:28:02 -0500] brucelee: const_get is probably a ruby function right?
[2014-01-25 07:28:10 -0500] coderanger: Yeah, thats standard ruby
[2014-01-25 07:28:23 -0500] coderanger: http://ruby-doc.org/core-2.1.0/Module.html#method-i-const_get
[2014-01-25 07:28:29 -0500] brucelee: but what about ::Search
[2014-01-25 07:28:49 -0500] brucelee: is ::Search some ruby library, or is taht built into chef
[2014-01-25 07:28:51 -0500] coderanger: Its just some const
[2014-01-25 07:29:07 -0500] brucelee: ok
[2014-01-25 07:29:08 -0500] coderanger: Specifically its something from the chef-solo-search cookbook
[2014-01-25 07:29:19 -0500] brucelee: oh
[2014-01-25 07:29:40 -0500] brucelee: ahh
[2014-01-25 07:29:41 -0500] brucelee: makes way more sense now
[2014-01-25 07:29:56 -0500] brucelee: and Rescue NameError must mean if it cant find that Search (which means chef-solo-search cookbook doesnt exist)
[2014-01-25 07:30:03 -0500] brucelee: then just return false to that entire function
[2014-01-25 07:30:10 -0500] coderanger: Yeah
[2014-01-25 07:30:15 -0500] brucelee: starting to come together :p
[2014-01-25 07:30:31 -0500] brucelee: but yeah i would have no way of finding out where the Search came from
[2014-01-25 07:30:46 -0500] coderanger: Thats not the kind of thing you would write yourself
[2014-01-25 07:30:50 -0500] coderanger: very advanced mode stuff
[2014-01-25 07:30:58 -0500] coderanger: in due time ;-)
[2014-01-25 07:31:03 -0500] brucelee: wow, so if i were to create my own cookbook to create users
[2014-01-25 07:31:06 -0500] brucelee: wouldnt i need to do stuff like that
[2014-01-25 07:31:51 -0500] coderanger: No
[2014-01-25 07:32:08 -0500] coderanger: Thats doing extra work to be compatible with about 4 different ways of using chef
[2014-01-25 07:32:10 -0500] brucelee: let me take a look at the "user" cookbook
[2014-01-25 07:32:17 -0500] coderanger: You probably only use it one way
[2014-01-25 07:32:24 -0500] brucelee: yeah just one way
[2014-01-25 07:32:30 -0500] brucelee: i bet the user cookbook is probably a lot simpler
[2014-01-25 07:33:26 -0500] brucelee: coderanger: this one? https://github.com/fnichol/chef-user
[2014-01-25 07:33:45 -0500] coderanger: yep
[2014-01-25 07:35:13 -0500] brucelee: coderanger: back to the hastebin, line 36
[2014-01-25 07:35:18 -0500] brucelee: whats the new_resource come from?
[2014-01-25 07:35:20 -0500] brucelee: where*
[2014-01-25 07:35:41 -0500] coderanger: Thats part of the API between resources and providers
[2014-01-25 07:35:53 -0500] brucelee: and also whats search_group object function
[2014-01-25 07:36:01 -0500] brucelee: is that built into chef too?
[2014-01-25 07:36:18 -0500] coderanger: Thats a resource attribute
[2014-01-25 07:36:29 -0500] brucelee: youre saving me years of google-fu here
[2014-01-25 07:36:32 -0500] coderanger: https://github.com/opscode-cookbooks/users/blob/master/resources/manage.rb#L29
[2014-01-25 07:36:34 -0500] brucelee: just want to let you know :p
[2014-01-25 07:38:11 -0500] coderanger: Heh, thats my job
[2014-01-25 07:39:45 -0500] brucelee: coderanger: :P
[2014-01-25 07:40:11 -0500] brucelee: coderanger: for 40-44 that seems like its checking if the node is an apache node
[2014-01-25 07:40:36 -0500] brucelee: so this is one of those situations where the cookbook is written in a way that works for a million cases?
[2014-01-25 07:40:52 -0500] coderanger: Thats a specific interaction between this recipe and the opscode apache2 cookbook
[2014-01-25 07:41:05 -0500] coderanger: Appending to a node attribute that the other cookbook uses to configure mod_auth_openid
[2014-01-25 07:41:20 -0500] coderanger: This is because Opsode uses openid for internal auth at the company
[2014-01-25 07:41:34 -0500] brucelee: whats openid?
[2014-01-25 07:41:47 -0500] brucelee: is that a chef thing, apache thing, or linux thing
[2014-01-25 07:41:59 -0500] coderanger: heh, none of the above
[2014-01-25 07:42:06 -0500] coderanger: its a server-to-server authentication protocol
[2014-01-25 07:42:23 -0500] brucelee: guessing its a technology that allows for centralized user base, but allowing each user to have different uids
[2014-01-25 07:42:44 -0500] coderanger: No, its not related to users at all
[2014-01-25 07:42:47 -0500] brucelee: oh
[2014-01-25 07:42:48 -0500] brucelee: :O
[2014-01-25 07:43:00 -0500] coderanger: Its how Opscode does logins for stuff like nagios and munin
[2014-01-25 07:43:12 -0500] brucelee: oh ok
[2014-01-25 07:44:33 -0500] brucelee: so every service username like nagios or munin, apache, nginx
[2014-01-25 07:44:52 -0500] brucelee: they all have a centralize user id? or has nothing to do with users and ids at all
[2014-01-25 07:45:01 -0500] coderanger: nothing to do with users and ids
[2014-01-25 07:45:04 -0500] brucelee: ah ok
[2014-01-25 07:45:07 -0500] coderanger: Its just, as I said, a bad cookbook
[2014-01-25 07:45:10 -0500] brucelee: haha
[2014-01-25 07:45:31 -0500] brucelee: ill stop trying to brute force understand it now
[2014-01-25 07:47:21 -0500] coderanger: That cookbook is much more of what Opscode needed than something designed for general use
[2014-01-25 07:47:34 -0500] coderanger: Even the user cookbook from fletcher is still like that, but 90% less
[2014-01-25 07:48:46 -0500] coderanger: Turns out user mgmt is really opinionated
[2014-01-25 07:49:49 -0500] brucelee: yeah
[2014-01-25 07:49:54 -0500] brucelee: i mean its so procedural
[2014-01-25 07:50:00 -0500] brucelee: all i do is a few steps
[2014-01-25 07:50:04 -0500] brucelee: 1. useradd foo
[2014-01-25 07:50:11 -0500] brucelee: 2. su - foo
[2014-01-25 07:50:17 -0500] brucelee: actually
[2014-01-25 07:50:53 -0500] brucelee: its 1. useradd foo, 2. add foo to group wheel, 3. su - foo 4. ssh-keygen -t rsa 5. add sshkey to authorized_keys
[2014-01-25 07:50:56 -0500] brucelee: thats all :P
[2014-01-25 07:51:02 -0500] brucelee: for an admin that is
[2014-01-25 07:51:23 -0500] coderanger: So, for example, I would say step 4 is crazy
[2014-01-25 07:51:33 -0500] coderanger: and 3
[2014-01-25 07:51:39 -0500] coderanger: :-)
[2014-01-25 07:51:40 -0500] brucelee: why? :p
[2014-01-25 07:51:55 -0500] coderanger: Because I require users to generate their own SSH key
[2014-01-25 07:52:03 -0500] coderanger: means I never have to handle private key material
[2014-01-25 07:52:06 -0500] brucelee: oh i mean
[2014-01-25 07:52:14 -0500] brucelee: i rename their id_rsa to authorized_keys
[2014-01-25 07:52:18 -0500] brucelee: and put their ssh pub key into that
[2014-01-25 07:52:22 -0500] coderanger: need to actually switch that so our users cookbook pulls from github
[2014-01-25 07:52:24 -0500] brucelee: thats how i add users
[2014-01-25 07:52:36 -0500] brucelee: by hand that is
[2014-01-25 07:52:47 -0500] brucelee: their private key is private...
[2014-01-25 07:52:54 -0500] brucelee: i dont ever handle that :P
[2014-01-25 07:53:40 -0500] coderanger: ssh-keygen creates a new keypair
[2014-01-25 07:53:50 -0500] brucelee: yeah but i rename the generated private key into authorized_keys
[2014-01-25 07:54:02 -0500] brucelee: and put in their public ssh key that they send me or that i already have archieved somewhere
[2014-01-25 07:54:16 -0500] coderanger: Thats now how authorized_keys works
[2014-01-25 07:54:22 -0500] coderanger: that file contains public keys, not private
[2014-01-25 07:54:43 -0500] coderanger: and if generating a new pair, you need to get the private key to the user somehow
[2014-01-25 07:54:48 -0500] brucelee: what i mean is, i rename id_rsa to authorized_keys, and echo ssh-pub-key into authorized_keys, rewriting everything inside it
[2014-01-25 07:54:59 -0500] coderanger: Yes, that first step is incorrect
[2014-01-25 07:55:06 -0500] coderanger: Unless you mean id_rsa.pub
[2014-01-25 07:55:10 -0500] coderanger: which is different from id_rsa
[2014-01-25 07:55:18 -0500] brucelee: i mean id_rsa
[2014-01-25 07:55:28 -0500] coderanger: then yeah, that step is pointless :)
[2014-01-25 07:55:59 -0500] brucelee: they have their own private key stored somewhere, instead of creating an authorized_keys file, i just rename id_rsa which already has the same permissions
[2014-01-25 07:56:07 -0500] brucelee: i rename it to authorized_keys
[2014-01-25 07:56:18 -0500] brucelee: and then just remove all the contents in there, and replace it with their public key
[2014-01-25 07:56:25 -0500] brucelee: and then i guess i can delete id_rsa.pub
[2014-01-25 07:56:35 -0500] coderanger: Using ssh-keygen to basically just set file pernissions is very CPU intensive and eats your entropy
[2014-01-25 07:56:44 -0500] brucelee: :D
[2014-01-25 07:56:45 -0500] coderanger: Just use chef to set the permissions correctly on your own :)
[2014-01-25 07:57:01 -0500] brucelee: yah well, when you have to do it to 12 servers by hand
[2014-01-25 07:57:06 -0500] brucelee: because you dont know how to use chef yet
[2014-01-25 07:57:11 -0500] brucelee: you will use any shortcut possible :p
[2014-01-25 07:57:22 -0500] brucelee: well thats what i had to do last week
[2014-01-25 07:57:25 -0500] brucelee: 2 users to 12 servers
[2014-01-25 07:57:38 -0500] brucelee: had to give them access within like 2 hours
[2014-01-25 07:57:51 -0500] brucelee: so i couldnt really set up an entire chef solution....
[2014-01-25 07:57:53 -0500] brucelee: i could now :)
[2014-01-25 07:58:02 -0500] brucelee: but its too late, i think i already have carpal tunnel
[2014-01-25 07:59:01 -0500] coderanger: Well now you know the tricks :)
[2014-01-25 07:59:16 -0500] brucelee: just a few :p
[2014-01-25 07:59:25 -0500] brucelee: so iptables, sudoers, snmpd
[2014-01-25 07:59:39 -0500] brucelee: users was what i was using
[2014-01-25 08:00:09 -0500] brucelee: and thats more or less my "my_cookbook"
[2014-01-25 08:00:13 -0500] brucelee: for base node :P
[2014-01-25 09:42:27 -0500] brucelee: Cope:  :p
[2014-01-25 13:39:36 -0500] Achiever_: Hi, I am able to connect database by command but when run chef-server-ctl reconfigure getting this error in /var/log/chef-server/erchef/current
[2014-01-25 13:39:54 -0500] Achiever_: Unable to start database connection: {error, 2014-01-25_13:05:36.40472 {{badmatch,{error,nxdomain}}
[2014-01-25 13:40:22 -0500] Achiever_: i am using AWS RDS (prostgresql ) Service as a database
[2014-01-25 13:51:59 -0500] Achiever_: Can someone help me resolve that error
[2014-01-25 18:51:29 -0500] enricostn: hi there, what's the correspondant resource attribute for chmod g+s
[2014-01-25 18:51:30 -0500] enricostn: ?
[2014-01-25 18:52:15 -0500] enricostn: I'm translating this guide to chef cookbook http://capistranorb.com/documentation/getting-started/authentication-and-authorisation/
[2014-01-25 18:52:27 -0500] enricostn: any idea?
[2014-01-25 19:02:56 -0500] atomic-penguin: enricostn, probably set octal 'mode' on the file and 'group' ownership
[2014-01-25 19:04:57 -0500] atomic-penguin: enricostn, like 'mode 02644' for example
[2014-01-25 19:05:48 -0500] enricostn: atomic-penguin, ok I'll give it a try thanks. I'm trying to achieve the result show at the end of that capistrano guide
[2014-01-25 19:06:45 -0500] atomic-penguin: enricostn, if its a directory you'll probably use the directory resource with parameter 'mode 02755'
[2014-01-25 19:09:40 -0500] enricostn: $ stat -c "%A (%a) %n" /var/www/katuma/
[2014-01-25 19:09:42 -0500] enricostn: drwx--S--- (2700) /var/www/katuma/
[2014-01-25 19:09:47 -0500] enricostn: it works!
[2014-01-25 19:09:49 -0500] enricostn: :)
[2014-01-25 19:10:48 -0500] enricostn: now I need to create 2 directories in there
[2014-01-25 19:12:42 -0500] atomic-penguin: enricostn, yay!
[2014-01-25 19:12:53 -0500] enricostn: many thanks! :)
[2014-01-25 19:12:58 -0500] atomic-penguin: np
[2014-01-25 21:05:07 -0500] proteriate: I'm running osx and recently just started to get this message when trying to upload a cookbook: ERROR: ArgumentError: wrong number of arguments (1 for 2)
[2014-01-25 21:05:15 -0500] proteriate: any suggestions on whats going on?
[2014-01-25 21:13:05 -0500] jidar: whats the command you're running
[2014-01-25 21:15:34 -0500] proteriate: knife cookbook upload php
[2014-01-25 21:46:54 -0500] proteriate: found the issue, a recently added cookbook that hasn't been uploaded to the chef server but sits in the git repo was the cause. i don't know exactly what it was since I just deleted the whole cookbook
