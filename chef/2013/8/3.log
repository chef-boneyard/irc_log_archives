[2013-08-03 00:10:36 -0400] IngoRenner: hi there, I'm trying to checkout a tag from a git repository using the git resource, which somehow fails
[2013-08-03 00:11:02 -0400] IngoRenner: error message is "No such file or directory"
[2013-08-03 00:11:24 -0400] IngoRenner: more specifically "No such file or directory - git ls-remote git://git.typo3.org/TYPO3v4/Extensions/solr.git 2.8.2"
[2013-08-03 00:11:46 -0400] IngoRenner: if I run that command it self I do get the tag and its sha though
[2013-08-03 00:11:50 -0400] IngoRenner: any ideas?
[2013-08-03 00:12:58 -0400] coderanger: IngoRenner: git isn't installed :-)
[2013-08-03 00:13:03 -0400] coderanger: IngoRenner: Use the git cookbook
[2013-08-03 00:13:34 -0400] IngoRenner: damn
[2013-08-03 00:13:48 -0400] IngoRenner: *facepalm*, thanks man
[2013-08-03 03:18:39 -0400] RyanNielson: Hey, I have the rbenv and postgresql cookbook installed. How do I tun rbenv to install ruby before postgresql recipe runs since it seems to depend on ruby, but it running first.
[2013-08-03 03:26:42 -0400] lk: RyanNielson: in your recipe, do you include all of your rbenv instructions ahead of, before, your postgresql instructions?
[2013-08-03 03:27:44 -0400] RyanNielson: I do, but I think what was happening is I had postgres in my run list. I removed it from my run list and just added include_recipe 'postgresql::server' include_recipe 'postgresql::client' to the top of my recipe. That seems to stop the problem.
[2013-08-03 03:27:54 -0400] RyanNielson: using chef-solo btw
[2013-08-03 03:46:11 -0400] mveitas: ping... anybody home?
[2013-08-03 10:10:27 -0400] zrankfappa: morning all
[2013-08-03 10:10:32 -0400] zrankfappa: hi all, can anyone advise the best way to get my bootstrap target to use a http_proxy, it seems the --bootstrap-proxy 'http://10.0.1.50:3128' is not a valid option when using 'knife ec2 server create'
[2013-08-03 12:55:17 -0400] zrankfappa: hi all, can anyone advise the best way to get my bootstrap target to use a http_proxy, it seems the --bootstrap-proxy 'http://10.0.1.50:3128' is not a valid option when using 'knife ec2 server create'
[2013-08-03 12:55:25 -0400] zrankfappa: sorry to keep repeating teh same question
[2013-08-03 12:55:52 -0400] zrankfappa: i'm either missing something obvious or this is a feature/requirement addressed elsewhere?
[2013-08-03 15:39:06 -0400] mikeywaites: hey guys anyone know why i might be seeing this error with nginx cookook and installing from source
[2013-08-03 15:39:20 -0400] mikeywaites: FATAL: NameError: runit_service[nginx] (nginx::source line 108) had an error: NameError: Cannot find a resource for load_new_resource_state on ubuntu version 12.04
[2013-08-03 15:43:05 -0400] mikeywaites: ??
[2013-08-03 17:14:35 -0400] regork: Hello, any recommended way of reading a file in files/default as stdin and then parse it?
[2013-08-03 17:17:34 -0400] gchristensen: regork: what?
[2013-08-03 17:19:12 -0400] regork: I'm trying to put a small text file in files/default which has 2 lines that will be split upon '\n' and then parsed, but I can't figure out a way to slurp in that file so it can be grepped, etc.
[2013-08-03 17:20:09 -0400] gchristensen: where do you want to do the \n and parsing?
[2013-08-03 17:20:59 -0400] regork: currently, something like this is being done:  (`wget -q #{yum_repo}/myfile -O -`).split("\n")
[2013-08-03 17:21:01 -0400] regork: brb
[2013-08-03 17:21:15 -0400] gchristensen: ... what are you trying to do? this seems really bizarre.
[2013-08-03 17:30:07 -0400] regork_: Had to step away for a minute and lost history, any opinions on the question I had put up?
[2013-08-03 17:32:40 -0400] gchristensen: it sounds like you're trying to do something that isn't really for chef to do. what is your end goal?
[2013-08-03 17:35:26 -0400] regork_: avoid doing a wget within backticks and sending results of that to stdout. Seems strange that there's no way to simply send to stdout contents of a text file in files/default.
[2013-08-03 17:40:26 -0400] gchristensen: it sounds like something is wrong. can you tell me at a higher level what you are trying to accomplish?
[2013-08-03 20:03:40 -0400] mackwerk_: Hello! I am trying to do knife cookbook upload --all to my hosted chef server and I'm getting this back: Exception: NameError: uninitialized constant Chef::CookbookUploader::Queue - I'm pretty new to this and I don't really know ruby, but coming from python it looks like a class is missing or something?
[2013-08-03 20:06:34 -0400] coderanger: mackwerk_: How did you install chef locally?
[2013-08-03 20:09:03 -0400] mackwerk_: coderanger: with this command curl -L https://www.opscode.com/chef/install.sh | sudo bash
[2013-08-03 20:09:20 -0400] mackwerk_: coderanger: I did it earlier in the day and it worked then, it's weird :o
[2013-08-03 20:09:22 -0400] coderanger: Okay, and `knife --version` shows 11.6.0?
[2013-08-03 20:10:01 -0400] mackwerk_: coderanger: yes
[2013-08-03 20:10:12 -0400] coderanger: Please pastebin the full traceback
[2013-08-03 20:10:29 -0400] mackwerk_: coderanger: the -VV one?
[2013-08-03 20:10:36 -0400] coderanger: Yahr
[2013-08-03 20:10:47 -0400] mackwerk_: coming up
[2013-08-03 20:11:45 -0400] mackwerk_: coderanger: http://pastebin.com/KTa19pzi there you go
[2013-08-03 20:13:06 -0400] coderanger: mackwerk_: So thats a plain gems install
[2013-08-03 20:13:19 -0400] coderanger: Are you 100% certain you ran the omnibus installer locally (not on your servers)
[2013-08-03 20:13:27 -0400] coderanger: That would only happen if you did "gem install chef"
[2013-08-03 20:13:45 -0400] coderanger: specifically installing into Ruby 1.8, which I guess doesn't work anymore (we ship Ruby 1.9.3)
[2013-08-03 20:14:34 -0400] coderanger: Though the Queue class should exist in Ruby 1.8.7
[2013-08-03 20:14:39 -0400] mackwerk_: Yes... But I did do gem install knife-github-cookbooks to get the github plugin for knife :o
[2013-08-03 20:14:42 -0400] coderanger: Might just need a require 'thread' in there
[2013-08-03 20:15:14 -0400] coderanger: mackwerk_: Ahh, so that would have pulled in knife as a dep, when installing knife plugins you need to do /opt/chef/embedded/bin/gem install whatever
[2013-08-03 20:15:50 -0400] coderanger: so to fix it, gem uninstall knife-github-cookbooks && gem uninstall chef
[2013-08-03 20:15:55 -0400] coderanger: and then hash -r
[2013-08-03 20:16:12 -0400] coderanger: and then you should have the correct /opt/chef/bin/knife again
[2013-08-03 20:16:45 -0400] coderanger: kallistec btm: ^^ Not sure how much we care about Ruby 1.8 bugs
[2013-08-03 20:16:54 -0400] mackwerk_: coderanger: and then I can install the plugin using the optcode ruby, right?
[2013-08-03 20:16:58 -0400] coderanger: Yahr
[2013-08-03 20:19:00 -0400] mackwerk_: Thank you for your help coderanger :) It works now
[2013-08-03 20:25:23 -0400] mackwerk_: Is there a way to verify a recipe? Can you do a dummy run or something?
[2013-08-03 20:28:11 -0400] coderanger: mackwerk_: Check out test-kitchen
[2013-08-03 20:35:04 -0400] mackwerk_: coderanger: I'll do that :) I just tried bootstrapping an ec2 instance, but it failed. Is there a way to recover from t or is the best way just to terminate and redo?
[2013-08-03 22:55:07 -0400] coderanger: jtimberman: Is kitchen-ec2 something that probably works right now?
[2013-08-03 23:09:09 -0400] iroller: Ohai Chefs. How do those of you who're using berkshelf are keeping git tags in sync with cookbooks versions? Are you'll using knife spork?
[2013-08-03 23:09:26 -0400] iroller: Or you're doing it manually?
[2013-08-03 23:10:09 -0400] coderanger: I just do stuff manually, but internally we often don't bother with tags
[2013-08-03 23:10:23 -0400] coderanger: only for externally released cookbooks
[2013-08-03 23:10:43 -0400] coderanger: For internaly, release == chef server
[2013-08-03 23:13:49 -0400] iroller: @coderanger: I'm just trying to figure out the best way of starting using Berkshelf. For now we have one big chef-repo with 100+ cookbooks. After splitting cookbooks into separate repos should we start using git tags and put them into Berkshelf or should we use versions in metadata.rb or should we use them both?
[2013-08-03 23:14:01 -0400] iroller: We're not doing any cookbooks versioning for now
[2013-08-03 23:14:13 -0400] coderanger: iroller: So first question, what flavor of chef are you using
[2013-08-03 23:14:35 -0400] iroller: @coderanger: open-source chef server (the latest one) + chef-client
[2013-08-03 23:14:37 -0400] iroller: s
[2013-08-03 23:15:04 -0400] coderanger: Okay, so the usual Berkshelf Way workflow is that each cookbook tests and releases in isolation
[2013-08-03 23:15:12 -0400] coderanger: You release a cookbook by uploading it to the chef server
[2013-08-03 23:15:33 -0400] coderanger: You then just control which cookbooks are active via environments
[2013-08-03 23:15:46 -0400] coderanger: you can use a central berksfile for this, or not
[2013-08-03 23:16:17 -0400] coderanger: but the old central view is the least important one
[2013-08-03 23:16:26 -0400] iroller: And how should I compose Berkshelf file & how should I organize local path for chef-repo for now? There are so many options (git + cookbook version + git rev or chef-api source or local path, etc)
[2013-08-03 23:16:43 -0400] coderanger: Not sure what you are asking
[2013-08-03 23:16:55 -0400] coderanger: Every cookbook goes in its own repo
[2013-08-03 23:16:59 -0400] coderanger: each has its own berksfile
[2013-08-03 23:17:06 -0400] coderanger: and is basically an isolated project
[2013-08-03 23:17:27 -0400] coderanger: they do not exist in the chef-repo, which just holds non-cookbook data
[2013-08-03 23:17:46 -0400] coderanger: (and possibly the per-env berksfiles if you choose to manage envs that way)
[2013-08-03 23:18:43 -0400] iroller: in central berksfile I can specify "cookbook nginx, source: git-repo, tag:0.1.0" or "cookbook nginx, source: local-path, version: ..." and so on, which way is better?
[2013-08-03 23:19:33 -0400] coderanger: No
[2013-08-03 23:19:36 -0400] iroller: And I want to have only one 'chef-repo' path locally too. So I can just clone all the cookbooks into chef-repo/cookbooks and add /cookbooks to chef-repo/.gitignore so I can use such tools as `knife diff` with no problems
[2013-08-03 23:19:44 -0400] coderanger: You don't use the central berksfile with git at all
[2013-08-03 23:19:57 -0400] iroller: oh
[2013-08-03 23:20:00 -0400] coderanger: And as I said, there are no cookbooks in the chef repo
[2013-08-03 23:20:28 -0400] coderanger: Cookbooks in the berkshelf workflow become their own projects that live and release independently
[2013-08-03 23:20:52 -0400] iroller: I understand that they are separate in GIT but why not to have chef-repo/cookbooks locally?
[2013-08-03 23:21:09 -0400] coderanger: Because thats not how berkshelf works?
[2013-08-03 23:21:51 -0400] coderanger: If you are asking why berkshelf works that way, it is because in a team of the scale and velocity of Riot, different teams need to own different cookbooks anyway, so putting them in a single place helps nothing
[2013-08-03 23:22:33 -0400] iroller: hm... so no central berksfile. What should I add to nginx/Berksfile? Which source to use - git, local path?
[2013-08-03 23:23:14 -0400] coderanger: So if it is something internal, generally neither, you just use the chef-server cookbook source
[2013-08-03 23:23:21 -0400] coderanger: If something external, usually git
[2013-08-03 23:23:53 -0400] coderanger: Sometimes I'll replace it with a path source locally when I'm developing multiple layers in parallel, but that usually means my cookbooks aren't laid out well
[2013-08-03 23:24:37 -0400] coderanger: Well, external will either be community site or git I guess I should say
[2013-08-03 23:24:47 -0400] coderanger: preferably community site, but not everyone releases stuff there
[2013-08-03 23:27:21 -0400] iroller: for now all the cookbooks are custom and internal. So you're suggesting something like 'cookbook "nginx", chef_api: :config' in nginx/Berksfile?
[2013-08-03 23:27:53 -0400] coderanger: No, the nginx/Berksfile doens't need a reference itself
[2013-08-03 23:28:05 -0400] coderanger: Only to its dependencies, which belong in the metadata.rb
[2013-08-03 23:29:16 -0400] iroller: So where should I specify the source and version of nginx itself?
[2013-08-03 23:29:26 -0400] iroller: for berks
[2013-08-03 23:29:53 -0400] coderanger: You don't?
[2013-08-03 23:29:57 -0400] coderanger: Not sure what you are asking
[2013-08-03 23:30:09 -0400] coderanger: berkshelf is not managing which versions of the nginx cookbook are in use
[2013-08-03 23:30:18 -0400] coderanger: Chef enviroments are
[2013-08-03 23:33:31 -0400] iroller: So what if I have nginx v.0.1.0 in production chef env and nginx v.0.2.0 in staging chef env. How would I upload both versions to chef-server?
[2013-08-03 23:33:48 -0400] iroller: berks upload doesn't know anyting about chef envs, right?
[2013-08-03 23:34:49 -0400] coderanger: When you released each of those you ran a berks upload from the nginx-cookbook repo
[2013-08-03 23:34:59 -0400] coderanger: that uploaded each cookbook and its deps into the chef server
[2013-08-03 23:43:38 -0400] iroller: @coderanger: thanks. Trying to apply this way of handling cookbooks to our environment.
[2013-08-03 23:44:09 -0400] coderanger: Basically you just have to think of each cookbook as a software project
[2013-08-03 23:44:22 -0400] coderanger: it releases its v0.1.0 and then moves on with development
[2013-08-03 23:44:32 -0400] coderanger: and then you just configure which versions you want where
