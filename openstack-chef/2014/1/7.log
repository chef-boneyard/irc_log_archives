[2014-01-07 04:43:25 -0500] spheromak: ctracey: round ?
[2014-01-07 04:47:17 -0500] ctracey: si
[2014-01-07 04:47:19 -0500] ctracey: sup?
[2014-01-07 04:48:18 -0500] ctracey: spheromak ^^
[2014-01-07 04:49:01 -0500] spheromak: yo
[2014-01-07 04:49:35 -0500] spheromak: glad yer up :D
[2014-01-07 04:51:52 -0500] ctracey: is that all? :)
[2014-01-07 04:54:22 -0500] spheromak: ctracey: you didn't get my PM ?
[2014-01-07 04:54:42 -0500] ctracey: ah yes...my bad
[2014-01-07 04:54:44 -0500] spheromak: :D
[2014-01-07 04:54:54 -0500] spheromak: no worries!
[2014-01-07 05:24:07 -0500] openstackgerrit: craigtracey proposed a change to stackforge/cookbook-openstack-object-storage: Adding 2 rubocop configuration files  https://review.openstack.org/65207
[2014-01-07 07:20:42 -0500] openstackgerrit: Abel Lopez proposed a change to stackforge/cookbook-openstack-compute: Adds misc options  https://review.openstack.org/63027
[2014-01-07 07:24:32 -0500] openstackgerrit: Abel Lopez proposed a change to stackforge/cookbook-openstack-compute: Adds misc options  https://review.openstack.org/63027
[2014-01-07 07:59:47 -0500] openstackgerrit: Abel Lopez proposed a change to stackforge/cookbook-openstack-compute: Adds misc options  https://review.openstack.org/63027
[2014-01-07 10:13:44 -0500] mattt: what's people's workflow for running rspec when modifying a cookbook ?
[2014-01-07 10:18:00 -0500] iartarisi: mattt: mine's running bundle install & bundle exec berks install once and then doing a lot of 'rspec .cookbooks/openstack-identity/spec/interesting.spec' and it involves cp-ing stuff afterwards. So I'd love to hear of a better workflow.
[2014-01-07 10:18:34 -0500] spheromak: using kitchen :D
[2014-01-07 10:18:58 -0500] mattt: iartarisi: just checked w/ a colleague, and he tests it all through Strainer
[2014-01-07 10:19:16 -0500] iartarisi: mattt: yeah, I used to do that, but it's incredibly time-consuming
[2014-01-07 10:19:31 -0500] mattt: iartarisi: but i noticed w/ chefspec you can add something to your spec_helper so that you can literally just pop into the cookbook and bundle exec rspec, and it'll automatically pull in dependant cookbooks into a temp directory for you
[2014-01-07 10:20:33 -0500] iartarisi: sounds interesting
[2014-01-07 10:20:40 -0500] mattt: perhaps we should add that to our cookbooks?
[2014-01-07 10:20:44 -0500] mattt: i tested it on one and works nicely
[2014-01-07 10:21:05 -0500] iartarisi: can you also run just one spec-file with it?
[2014-01-07 10:21:10 -0500] mattt: lemme see
[2014-01-07 10:23:03 -0500] mattt: iartarisi: appears so
[2014-01-07 10:23:09 -0500] mattt: bundle exec rspec spec/libvirt_spec.rb
[2014-01-07 10:23:56 -0500] iartarisi: that's cool
[2014-01-07 10:24:07 -0500] mattt: see the berkshelf section on https://github.com/sethvargo/chefspec
[2014-01-07 10:24:28 -0500] mattt: we'd just have to drop "require 'chefspec/berkshelf'" into the spec_helper in each cookbook
[2014-01-07 10:27:02 -0500] mattt: actually it doesn't pull cookbooks down to a temp dir, it uses ~/.berkshelf/cookbooks, so you're not pulling them down each time you run rspec
[2014-01-07 10:27:15 -0500] iartarisi: yup, awesome, let's do this!
[2014-01-07 10:28:45 -0500] mattt: iartarisi: shall i put a PR through for one, and if that's accepted do the rest?
[2014-01-07 10:30:07 -0500] iartarisi: sure
[2014-01-07 10:30:22 -0500] iartarisi: I'll +2 itr
[2014-01-07 10:30:26 -0500] iartarisi: it
[2014-01-07 10:30:40 -0500] mattt: iartarisi: ok, gimme a bit, haven't done this openstack stuff in a while :P
[2014-01-07 11:12:05 -0500] openstackgerrit: A change was merged to stackforge/cookbook-openstack-identity: Create users with passwords from user_password  https://review.openstack.org/65088
[2014-01-07 11:13:26 -0500] openstackgerrit: A change was merged to stackforge/cookbook-openstack-image: Adding rubocop todo list  https://review.openstack.org/65163
[2014-01-07 11:31:24 -0500] mattt: iartarisi: berkshelf keeps overwriting my Berksfile.lock, any idea ?
[2014-01-07 11:32:53 -0500] mattt: mmm may be a known issue
[2014-01-07 11:33:27 -0500] mattt: maybe bumping berks version wasn't a good idea
[2014-01-07 12:01:22 -0500] iartarisi: yeah, no idea, it does that for me, too sometimes
[2014-01-07 12:28:44 -0500] mattt: iartarisi: got a way to keep Berksfile.lock updated w/ master commits on the stackforge cookbooks ?
[2014-01-07 12:29:04 -0500] mattt: seems like it's pointing to commits all over the place right now (on master branch that is)
[2014-01-07 12:29:37 -0500] mattt: (this is on openstack-chef-repo, not an individual cookbook)
[2014-01-07 12:39:14 -0500] iartarisi: ah, no, I actually never use openstack-chef-repo :|
[2014-01-07 12:54:18 -0500] mattt: iartarisi: no worries, thanks !
[2014-01-07 13:48:27 -0500] openstackgerrit: mattt proposed a change to stackforge/cookbook-openstack-compute: Update spec_helper to include 'chefspec/berkshelf'  https://review.openstack.org/65273
[2014-01-07 14:37:40 -0500] openstackgerrit: Ionut Artarisi proposed a change to stackforge/cookbook-openstack-compute: fix NoMethodError in ShellOut run_command  https://review.openstack.org/65084
[2014-01-07 16:30:10 -0500] openstackgerrit: A change was merged to stackforge/cookbook-openstack-compute: Search cleanups  https://review.openstack.org/62585
[2014-01-07 16:32:42 -0500] openstackgerrit: A change was merged to stackforge/cookbook-openstack-network: Migrate network database  https://review.openstack.org/64650
[2014-01-07 16:34:46 -0500] aspiers: mattray: hmm, chef-rewind is not great for replacing service with pacemaker_service - IIUC I would have to unwind the service and then create a new pacemaker_service with similar attributes
[2014-01-07 16:35:10 -0500] aspiers: mattray: maybe it would be cleaner to write a new pacemaker-oriented provider for service?
[2014-01-07 16:35:18 -0500] mattray: aspiers: can the pacemaker_service be an alternate Provider for the service Resource?
[2014-01-07 16:35:21 -0500] openstackgerrit: A change was merged to stackforge/cookbook-openstack-compute: Update spec_helper to include 'chefspec/berkshelf'  https://review.openstack.org/65273
[2014-01-07 16:35:25 -0500] openstackgerrit: A change was merged to stackforge/cookbook-openstack-network: example of using new chefspec coverage report  https://review.openstack.org/65011
[2014-01-07 16:35:25 -0500] mattray: aspiers: yup :)
[2014-01-07 16:35:28 -0500] aspiers: :)
[2014-01-07 16:35:39 -0500] aspiers: ok, encouraging that I'm thinking along the right lines
[2014-01-07 16:36:01 -0500] aspiers: mattray: in that case how can I override the resource/provider mapping?
[2014-01-07 16:36:14 -0500] aspiers: just alter Chef::Platform.platforms?
[2014-01-07 16:36:47 -0500] mattray: aspiers: I'm not sure, but I think with rewind you could change the Provider
[2014-01-07 16:36:56 -0500] aspiers: oh yeah of course
[2014-01-07 16:37:07 -0500] aspiers: I realised that about 20 mins ago and then promptly forgot the idea :)
[2014-01-07 16:37:29 -0500] mattray: like in the example here: http://docs.opscode.com/chef/resources.html#id213
[2014-01-07 16:37:53 -0500] mattray: I think that should work, I just haven't done it myself
[2014-01-07 16:40:02 -0500] aspiers: that would mean a rewind for every service though
[2014-01-07 16:40:19 -0500] aspiers: whereas overriding the platforms map would do it in a single stroke
[2014-01-07 16:40:40 -0500] aspiers: I thought that the new provider could have some checks, and in some cases delegate to the original provider
[2014-01-07 16:41:21 -0500] aspiers: e.g. check for an attribute signifying that the given service is suitable for running under Pacemaker
[2014-01-07 17:03:19 -0500] retr0h: isn't rewind an anti-pattern?
[2014-01-07 17:03:42 -0500] aspiers: probably :)
[2014-01-07 17:03:51 -0500] aspiers: I'd prefer to avoid if I can ...
[2014-01-07 17:03:52 -0500] retr0h: oh hehe i just wondered.. i never used it
[2014-01-07 17:04:02 -0500] aspiers: I dunno, I'm no expert
[2014-01-07 17:04:07 -0500] retr0h: yeah me either
[2014-01-07 17:04:19 -0500] retr0h: i'm no pacemaker expert either th
[2014-01-07 17:04:20 -0500] retr0h: tho*
[2014-01-07 17:10:02 -0500] aspiers: I know enough to be dangerous ;)
[2014-01-07 17:19:58 -0500] mattray: aspiers: thinking about rewind if you have an alternate Provider available, we could choose to use it based off of an attribute
[2014-01-07 17:20:47 -0500] aspiers: mattray: yes, that's what I was thinking too
[2014-01-07 17:20:56 -0500] mattray: just a conditional within the service that if the node['openstack']['pacemaker'] is true, use this Provider
[2014-01-07 17:21:16 -0500] aspiers: mattray: however there are a few catches
[2014-01-07 17:21:27 -0500] aspiers: the pacemaker provider would sometimes need to delegate to the original provider
[2014-01-07 17:21:46 -0500] aspiers: for example, if it inherits a service that was already started via SysVinit or systemd
[2014-01-07 17:22:00 -0500] aspiers: it would need to do something like chkconfig $service off
[2014-01-07 17:36:16 -0500] aspiers: also, there's a remote chance that these recipes might handle non-OpenStack services
[2014-01-07 17:36:25 -0500] aspiers: so I might stick with the node[:pacemaker] namespace ...
[2014-01-07 18:04:57 -0500] spheromak: man pacemaker services. There be dragons.  How do you fence regular services from other recipes ? just using redefinition of those resources ? walk the collection and just be brutal about it ?
[2014-01-07 18:05:22 -0500] spheromak: not that this wouldhave to be solved to makee it usefull. Just see that being pretty dodgy.
[2014-01-07 18:07:40 -0500] aspiers_: spheromak: my current idea is default[:pacemaker][:supported_services][:keystone] = true
[2014-01-07 18:07:48 -0500] spheromak: agree aspiers mattray that the thing needs to be a propeeer service provider, and yea you would have to walk resource collection and update all resource types that match your managed resource and update their provider. could do this iin your pacemaker_service provider.  retr0h in this case tho you wont want cookbook X (non pacemaker aware) to define service Y that you define in pacemaker_service.
[2014-01-07 18:08:11 -0500] aspiers: damn did I miss some of the conversation? stupid IRC reconnects
[2014-01-07 18:08:29 -0500] spheromak: aspiers: yea I think for openstack specifically it's ok, but the generic case is much more problematic
[2014-01-07 18:08:50 -0500] aspiers: my first experiment has proven it's possible to rewrite the built-in provider map
[2014-01-07 18:09:03 -0500] spheromak: since in openstack land we can controll the service defs with impunity
[2014-01-07 18:09:13 -0500] spheromak: aspiers: absolutely
[2014-01-07 18:09:13 -0500] aspiers: next I want to build Chef::Provider::Service::Pacemaker which simply delegates everything to the original provider
[2014-01-07 18:09:20 -0500] spheromak: done this before.
[2014-01-07 18:09:23 -0500] spheromak: yep
[2014-01-07 18:09:36 -0500] spheromak: but updates some of the attribs for that resource.
[2014-01-07 18:10:02 -0500] aspiers: and then finally, make C::P::S::P check whether pacemaker is supported for each service, and if so, take over management
[2014-01-07 18:10:20 -0500] aspiers: at which point if necessary it will disable the service via the original provider
[2014-01-07 18:10:27 -0500] spheromak: yea
[2014-01-07 18:10:42 -0500] aspiers: is there prior art for delegation?
[2014-01-07 18:10:50 -0500] spheromak: so you would just neuter anything not defined in pacemaker_servicee
[2014-01-07 18:11:05 -0500] aspiers: guessing I need to loop over all supported actions for the slave, defining delegating action blocks for each
[2014-01-07 18:11:09 -0500] spheromak: aspiers: i don't think what I did is public
[2014-01-07 18:11:10 -0500] spheromak: :|
[2014-01-07 18:11:15 -0500] spheromak: yea
[2014-01-07 18:11:18 -0500] aspiers: no problem
[2014-01-07 18:11:28 -0500] aspiers: presumably I can introspect to get supported actions from the original provider
[2014-01-07 18:11:36 -0500] spheromak: should be possible.
[2014-01-07 18:11:48 -0500] aspiers: modifying Chef::Platform.platforms is kinda evil, but it seems to work so far
[2014-01-07 18:12:06 -0500] spheromak: yea its not the best but in this case I think you kinda havee too
[2014-01-07 18:12:06 -0500] aspiers: and is probably less evil than chef-rewind's unwind / redefine on multiple services
[2014-01-07 18:12:17 -0500] spheromak: as its the authority for service providers
[2014-01-07 18:12:23 -0500] spheromak: and in pacemaker is sorta a platform
[2014-01-07 18:12:28 -0500] aspiers: yup
[2014-01-07 18:12:54 -0500] aspiers: well, I can only try ;-) extreme failure is always a possibility ;-)
[2014-01-07 18:13:19 -0500] aspiers: so it's looking like I won't be using an LWRP after all
[2014-01-07 18:13:36 -0500] aspiers: I've defined Chef::Provider::Service::Pacemaker in libaries/
[2014-01-07 18:13:53 -0500] aspiers: guessing I couldn't put it in providers/ ?
[2014-01-07 18:14:16 -0500] aspiers: LWRPs require both resource and provider, right?
[2014-01-07 18:14:22 -0500] aspiers: but I'm not creating a new resource type here
[2014-01-07 18:14:40 -0500] aspiers: hmm, I just had an idea for another approach
[2014-01-07 18:14:41 -0500] spheromak: yea
[2014-01-07 18:14:48 -0500] spheromak: you will want to do this in pure libs
[2014-01-07 18:15:25 -0500] spheromak: youre monkeypatching service :)
[2014-01-07 18:15:28 -0500] aspiers: for every service resource which supports management via pacemaker, auto-generate a new pacemaker_service lightweight resource and :disable the original
[2014-01-07 18:15:42 -0500] aspiers: that might make delegation easier
[2014-01-07 18:15:55 -0500] aspiers: and doesn't require monkey-patching Chef::Platform.platforms
[2014-01-07 18:16:06 -0500] aspiers: not sure which is better
[2014-01-07 18:16:27 -0500] aspiers: ah, that *would* require rewind
[2014-01-07 18:16:39 -0500] aspiers: to :disable each original service
[2014-01-07 18:17:21 -0500] aspiers: nah, I think patching platforms Hash is probably better - agree?
[2014-01-07 18:30:49 -0500] spheromak: either way its hackish ;)
[2014-01-07 18:31:07 -0500] spheromak: your either redirecting via platforms ore rewriting the resource collection
[2014-01-07 18:31:21 -0500] aspiers: agreed
[2014-01-07 18:31:23 -0500] aspiers: but which is less hackish
[2014-01-07 18:31:59 -0500] spheromak: well i think most people are more familliar with resource collection *maybe* but i think the platforms is less error prone. (less fingers in the basket there)
[2014-01-07 18:32:25 -0500] aspiers: right
[2014-01-07 18:52:18 -0500] aspiers: bah, looks like there's no way to introspect the capabilities of a service provider
[2014-01-07 18:53:40 -0500] aspiers: guess I can loop over %w(enable disable start stop restart reload) and check the source file to see whether the Chef::Provider::Service methods were overridden, but that's ugly as sin :-/
[2014-01-07 19:22:46 -0500] retr0h: the only problem i see with this approach is if anything changes in the upstream cookbook the "monkeypatching" will likely break
[2014-01-07 19:29:21 -0500] aspiers: I think that's true whichever approach I take :-/
[2014-01-07 19:36:17 -0500] spheromak: retr0h: thats why i said "dragons"
[2014-01-07 19:36:19 -0500] spheromak: :d
[2014-01-07 19:37:53 -0500] ctracey: spheromak, as I am already forgetting what we spoke of, feel free to fire issues against omnibus
[2014-01-07 19:54:01 -0500] spheromak: ctracey: will do
[2014-01-07 19:54:19 -0500] retr0h: lolz
[2014-01-07 19:54:23 -0500] retr0h: silli ctracy
[2014-01-07 19:54:36 -0500] spheromak: have to get you and wil introduced. He's the one that is gonna be making it work. Prob starting tomorrow
[2014-01-07 19:55:12 -0500] spheromak: wee have everythign up to nova packaged. so were gonna finish that then start in on the omni.
[2014-01-07 19:56:28 -0500] spheromak: ctracey: might want to rename the -example repo to -builder or -build or something
[2014-01-07 19:56:40 -0500] spheromak: so we can use that as a central point to collab
[2014-01-07 19:56:59 -0500] ctracey: nice
[2014-01-07 19:57:07 -0500] ctracey: sure we can rename it
[2014-01-07 19:57:17 -0500] ctracey: ill take care of that in a moment
[2014-01-07 20:07:30 -0500] paulczar: at some point  I'll get you to walk me through what you've done so far   I'm interested in getting in on the action   just not much time right now
[2014-01-07 20:07:33 -0500] spheromak: yea not a huge deal really ;)
[2014-01-07 20:08:47 -0500] spheromak: paulczar: I've got a vagrantfile in the build project to build the packages and stuff. Want to get all the projects building with the config in that project and the vagrant build boxen.
[2014-01-07 20:09:04 -0500] spheromak: so it would be easy to clone, update sources to your own stuff and build yer own omni's
[2014-01-07 20:09:18 -0500] spheromak: ripped the great chef omni vagrant off ;)
[2014-01-07 20:09:24 -0500] paulczar: cool
[2014-01-07 20:34:37 -0500] rtheis: Trying to converge a centos64 node with os-identity role and it fails because /etc/sysctl.d directory doesn't exist.  Ubuntu1204 node works okay.  Wondering if I'm missing a recipe for centos?  Although I don't see sysctl listed as a dependency.
[2014-01-07 20:50:57 -0500] ctracey: rtheis, sounds like an oversight
[2014-01-07 20:51:34 -0500] ctracey: woudl anyone care if we bundle all of the rubocop fixes in a single review for a cookbook?
[2014-01-07 20:51:43 -0500] ctracey: seems like we should just get it over with
[2014-01-07 20:54:11 -0500] paulczar: ctracey: I did that for neutron cookbook
[2014-01-07 20:54:33 -0500] ctracey: ok, cool
[2014-01-07 20:54:40 -0500] rtheis: ctracey: ok, I'll open a bug report
[2014-01-07 20:54:45 -0500] ctracey: seems silly not to with autocorrect
[2014-01-07 20:55:11 -0500] ctracey: spheromak, https://github.com/craigtracey/omnibus-openstack-build
[2014-01-07 20:55:22 -0500] paulczar: I think definitely for the autocorrect stuff like string literals, spacing, etc
[2014-01-07 20:55:52 -0500] paulczar: but there's some tests that we might want to discuss like line_length,  class_size, etc
[2014-01-07 20:56:28 -0500] paulczar: oh and I'm not a huge fan of the string arrays %w{a b} rather than ['a','b']
[2014-01-07 20:56:35 -0500] paulczar: I find it less readable
[2014-01-07 20:57:21 -0500] ctracey: paulczar, we decided some of those
[2014-01-07 20:57:26 -0500] ctracey: see block storage
[2014-01-07 20:57:35 -0500] paulczar: we did?  I probably wasn't paying attention
[2014-01-07 20:58:31 -0500] paulczar: oh cool.  I see UTF-8 and LineLength disabled
[2014-01-07 20:59:05 -0500] paulczar: UTF-8 is super easy to add with a  find -exec sed -i {}  so not sure why we want to skip that
[2014-01-07 20:59:40 -0500] ctracey: also: https://review.openstack.org/#/c/65207/
[2014-01-07 20:59:42 -0500] ctracey: same
[2014-01-07 20:59:52 -0500] ctracey: we can come back to it...id rather just get something out there
[2014-01-07 21:00:07 -0500] paulczar: oh yeah cool,  word array in the attributes dir as well
[2014-01-07 21:00:09 -0500] paulczar: ++
[2014-01-07 21:00:18 -0500] paulczar: sounds like I came to the same conclusion independently :D
[2014-01-07 21:00:53 -0500] ctracey: thats what i had too - before I saw matts change
[2014-01-07 21:01:58 -0500] paulczar: neutron had ~ 1300 changes to make compliance - https://review.openstack.org/#/c/65013/
[2014-01-07 21:02:01 -0500] paulczar: took about an hour
[2014-01-07 21:02:07 -0500] paulczar: using auto fix where I could
[2014-01-07 21:19:52 -0500] openstackgerrit: A change was merged to stackforge/cookbook-openstack-object-storage: Adding 2 rubocop configuration files  https://review.openstack.org/65207
[2014-01-07 21:42:15 -0500] openstackgerrit: Alan Meadows proposed a change to stackforge/cookbook-openstack-object-storage: Bugfix ring_script.rb output parser  https://review.openstack.org/65376
[2014-01-07 21:46:26 -0500] openstackgerrit: Alan Meadows proposed a change to stackforge/cookbook-openstack-object-storage: Bugfix ring_script.rb to parse recent ring-builder  https://review.openstack.org/65380
[2014-01-07 21:47:42 -0500] openstackgerrit: Alan Meadows proposed a change to stackforge/cookbook-openstack-object-storage: Bugfix ring_script.rb output parser  https://review.openstack.org/65376
[2014-01-07 21:57:29 -0500] openstackgerrit: Abel Lopez proposed a change to stackforge/cookbook-openstack-compute: Adds misc options  https://review.openstack.org/63027
